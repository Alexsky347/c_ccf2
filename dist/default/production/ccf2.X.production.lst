

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Feb 24 16:06:38 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62  0000                     
    63                           ; Version 2.40
    64                           ; Generated 17/11/2021 GMT
    65                           ; 
    66                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution. Publication is not required when
    80                           ;        this file is used in an embedded application.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F8722 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     
    99                           	psect	idataBANK0
   100  004340                     __pidataBANK0:
   101                           	callstack 0
   102                           
   103                           ;initializer for _temp
   104  004340  0014               	dw	20
   105  0000                     _TRISCbits	set	3988
   106  0000                     _ADRESL	set	4035
   107  0000                     _ADRESH	set	4036
   108  0000                     _ADCON0	set	4034
   109  0000                     _INTCONbits	set	4082
   110  0000                     _ADCON0bits	set	4034
   111  0000                     _PORTAbits	set	3968
   112  0000                     _PORTBbits	set	3969
   113  0000                     _TRISAbits	set	3986
   114  0000                     _TRISBbits	set	3987
   115  0000                     _TRISD	set	3989
   116  0000                     _TRISFbits	set	3991
   117  0000                     _PIE1bits	set	3997
   118  0000                     _PIR1bits	set	3998
   119  0000                     _ADCON1	set	4033
   120  0000                     _PORTD	set	3971
   121  0000                     _LATAbits	set	3977
   122  0000                     _LATFbits	set	3982
   123  0000                     _ADCON2	set	4032
   124  0000                     _LATCbits	set	3979
   125                           
   126                           	psect	smallconst
   127  001000                     __psmallconst:
   128                           	callstack 0
   129  001000  00                 	db	0
   130  001001                     STR_1:
   131  001001  42                 	db	66	;'B'
   132  001002  74                 	db	116	;'t'
   133  001003  6E                 	db	110	;'n'
   134  001004  20                 	db	32
   135  001005  31                 	db	49	;'1'
   136  001006  20                 	db	32
   137  001007  4F                 	db	79	;'O'
   138  001008  4E                 	db	78	;'N'
   139  001009  20                 	db	32
   140  00100A  20                 	db	32
   141  00100B  20                 	db	32
   142  00100C  20                 	db	32
   143  00100D  20                 	db	32
   144  00100E  20                 	db	32
   145  00100F  20                 	db	32
   146  001010  20                 	db	32
   147  001011  00                 	db	0
   148  001012                     STR_2:
   149  001012  42                 	db	66	;'B'
   150  001013  74                 	db	116	;'t'
   151  001014  6E                 	db	110	;'n'
   152  001015  20                 	db	32
   153  001016  32                 	db	50	;'2'
   154  001017  20                 	db	32
   155  001018  4F                 	db	79	;'O'
   156  001019  4E                 	db	78	;'N'
   157  00101A  20                 	db	32
   158  00101B  20                 	db	32
   159  00101C  20                 	db	32
   160  00101D  20                 	db	32
   161  00101E  20                 	db	32
   162  00101F  20                 	db	32
   163  001020  20                 	db	32
   164  001021  20                 	db	32
   165  001022  00                 	db	0
   166  001023                     STR_3:
   167  001023  42                 	db	66	;'B'
   168  001024  74                 	db	116	;'t'
   169  001025  6E                 	db	110	;'n'
   170  001026  20                 	db	32
   171  001027  31                 	db	49	;'1'
   172  001028  20                 	db	32
   173  001029  65                 	db	101	;'e'
   174  00102A  74                 	db	116	;'t'
   175  00102B  20                 	db	32
   176  00102C  32                 	db	50	;'2'
   177  00102D  20                 	db	32
   178  00102E  4F                 	db	79	;'O'
   179  00102F  46                 	db	70	;'F'
   180  001030  46                 	db	70	;'F'
   181  001031  20                 	db	32
   182  001032  20                 	db	32
   183  001033  00                 	db	0
   184  001034                     STR_4:
   185  001034  55                 	db	85	;'U'
   186  001035  20                 	db	32
   187  001036  3D                 	db	61	;'='
   188  001037  25                 	db	37
   189  001038  32                 	db	50	;'2'
   190  001039  2E                 	db	46
   191  00103A  31                 	db	49	;'1'
   192  00103B  66                 	db	102	;'f'
   193  00103C  20                 	db	32
   194  00103D  20                 	db	32
   195  00103E  20                 	db	32
   196  00103F  00                 	db	0
   197  001040                     STR_5:
   198  001040  49                 	db	73	;'I'
   199  001041  4E                 	db	78	;'N'
   200  001042  46                 	db	70	;'F'
   201  001043  00                 	db	0
   202  001044                     STR_9:
   203  001044  4E                 	db	78	;'N'
   204  001045  41                 	db	65	;'A'
   205  001046  4E                 	db	78	;'N'
   206  001047  00                 	db	0
   207  001048                     STR_6:
   208  001048  69                 	db	105	;'i'
   209  001049  6E                 	db	110	;'n'
   210  00104A  66                 	db	102	;'f'
   211  00104B  00                 	db	0
   212  00104C                     STR_10:
   213  00104C  6E                 	db	110	;'n'
   214  00104D  61                 	db	97	;'a'
   215  00104E  6E                 	db	110	;'n'
   216  00104F  00                 	db	0
   217  001050                     STR_13:
   218  001050  6C                 	db	108	;'l'
   219  001051  66                 	db	102	;'f'
   220  001052  00                 	db	0
   221  001053  00                 	db	0	; dummy byte at the end
   222  0000                     
   223                           ; #config settings
   224                           
   225                           	psect	cinit
   226  00422E                     __pcinit:
   227                           	callstack 0
   228  00422E                     start_initialization:
   229                           	callstack 0
   230  00422E                     __initialization:
   231                           	callstack 0
   232                           
   233                           ; Initialize objects allocated to BANK0 (2 bytes)
   234                           ; load TBLPTR registers with __pidataBANK0
   235  00422E  0E40               	movlw	low __pidataBANK0
   236  004230  6EF6               	movwf	tblptrl,c
   237  004232  0E43               	movlw	high __pidataBANK0
   238  004234  6EF7               	movwf	tblptrh,c
   239  004236  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   240  004238  6EF8               	movwf	tblptru,c
   241  00423A  0009               	tblrd		*+	;fetch initializer
   242  00423C  CFF5 F0F3          	movff	tablat,__pdataBANK0
   243  004240  0009               	tblrd		*+	;fetch initializer
   244  004242  CFF5 F0F4          	movff	tablat,__pdataBANK0+1
   245                           
   246                           ; Clear objects allocated to BANK1 (80 bytes)
   247  004246  EE01  F000         	lfsr	0,__pbssBANK1
   248  00424A  0E50               	movlw	80
   249  00424C                     clear_0:
   250  00424C  6AEE               	clrf	postinc0,c
   251  00424E  06E8               	decf	wreg,f,c
   252  004250  E1FD               	bnz	clear_0
   253                           
   254                           ; Clear objects allocated to BANK0 (16 bytes)
   255  004252  EE00  F0E3         	lfsr	0,__pbssBANK0
   256  004256  0E10               	movlw	16
   257  004258                     clear_1:
   258  004258  6AEE               	clrf	postinc0,c
   259  00425A  06E8               	decf	wreg,f,c
   260  00425C  E1FD               	bnz	clear_1
   261  00425E                     end_of_initialization:
   262                           	callstack 0
   263  00425E                     __end_of__initialization:
   264                           	callstack 0
   265  00425E  0100               	movlb	0
   266  004260  EF94  F021         	goto	_main	;jump to C main() function
   267                           
   268                           	psect	bssBANK0
   269  0000E3                     __pbssBANK0:
   270                           	callstack 0
   271  0000E3                     floorf@F526:
   272                           	callstack 0
   273  0000E3                     	ds	4
   274  0000E7                     ___fpclassifyf@F465:
   275                           	callstack 0
   276  0000E7                     	ds	4
   277  0000EB                     _nout:
   278                           	callstack 0
   279  0000EB                     	ds	2
   280  0000ED                     _width:
   281                           	callstack 0
   282  0000ED                     	ds	2
   283  0000EF                     _prec:
   284                           	callstack 0
   285  0000EF                     	ds	2
   286  0000F1                     _flags:
   287                           	callstack 0
   288  0000F1                     	ds	2
   289                           
   290                           	psect	dataBANK0
   291  0000F3                     __pdataBANK0:
   292                           	callstack 0
   293  0000F3                     _temp:
   294                           	callstack 0
   295  0000F3                     	ds	2
   296                           
   297                           	psect	bssBANK1
   298  000100                     __pbssBANK1:
   299                           	callstack 0
   300  000100                     _dbuf:
   301                           	callstack 0
   302  000100                     	ds	80
   303                           
   304                           	psect	cstackBANK0
   305  000060                     __pcstackBANK0:
   306                           	callstack 0
   307  000060                     ??_efgtoa:
   308                           
   309                           ; 1 bytes @ 0x0
   310  000060                     	ds	5
   311  000065                     _efgtoa$1435:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0x5
   315  000065                     	ds	2
   316  000067                     _efgtoa$1443:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x7
   320  000067                     	ds	2
   321  000069                     _efgtoa$1444:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x9
   325  000069                     	ds	2
   326  00006B                     efgtoa@t:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0xB
   330  00006B                     	ds	2
   331  00006D                     efgtoa@pp:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0xD
   335  00006D                     	ds	2
   336  00006F                     efgtoa@ne:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0xF
   340  00006F                     	ds	2
   341  000071                     efgtoa@m:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x11
   345  000071                     	ds	2
   346  000073                     efgtoa@ou:
   347                           	callstack 0
   348                           
   349                           ; 4 bytes @ 0x13
   350  000073                     	ds	4
   351  000077                     efgtoa@d:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0x17
   355  000077                     	ds	2
   356  000079                     efgtoa@sign:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x19
   360  000079                     	ds	2
   361  00007B                     efgtoa@p:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x1B
   365  00007B                     	ds	2
   366  00007D                     efgtoa@w:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x1D
   370  00007D                     	ds	2
   371  00007F                     efgtoa@nmode:
   372                           	callstack 0
   373                           
   374                           ; 1 bytes @ 0x1F
   375  00007F                     	ds	1
   376  000080                     efgtoa@mode:
   377                           	callstack 0
   378                           
   379                           ; 1 bytes @ 0x20
   380  000080                     	ds	1
   381  000081                     efgtoa@h:
   382                           	callstack 0
   383                           
   384                           ; 4 bytes @ 0x21
   385  000081                     	ds	4
   386  000085                     efgtoa@l:
   387                           	callstack 0
   388                           
   389                           ; 4 bytes @ 0x25
   390  000085                     	ds	4
   391  000089                     efgtoa@i:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x29
   395  000089                     	ds	2
   396  00008B                     efgtoa@g:
   397                           	callstack 0
   398                           
   399                           ; 4 bytes @ 0x2B
   400  00008B                     	ds	4
   401  00008F                     efgtoa@e:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x2F
   405  00008F                     	ds	2
   406  000091                     efgtoa@n:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x31
   410  000091                     	ds	2
   411  000093                     efgtoa@u:
   412                           	callstack 0
   413                           
   414                           ; 4 bytes @ 0x33
   415  000093                     	ds	4
   416  000097                     ?_vfpfcnvrt:
   417                           	callstack 0
   418  000097                     vfpfcnvrt@fp:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x37
   422  000097                     	ds	2
   423  000099                     vfpfcnvrt@fmt:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x39
   427  000099                     	ds	2
   428  00009B                     vfpfcnvrt@ap:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x3B
   432  00009B                     	ds	2
   433  00009D                     vfpfcnvrt@f:
   434                           	callstack 0
   435                           
   436                           ; 4 bytes @ 0x3D
   437  00009D                     	ds	4
   438  0000A1                     vfpfcnvrt@ct:
   439                           	callstack 0
   440                           
   441                           ; 3 bytes @ 0x41
   442  0000A1                     	ds	3
   443  0000A4                     vfpfcnvrt@c:
   444                           	callstack 0
   445                           
   446                           ; 1 bytes @ 0x44
   447  0000A4                     	ds	1
   448  0000A5                     ?_vfprintf:
   449                           	callstack 0
   450  0000A5                     vfprintf@fp:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x45
   454  0000A5                     	ds	2
   455  0000A7                     vfprintf@fmt:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x47
   459  0000A7                     	ds	2
   460  0000A9                     vfprintf@ap:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x49
   464  0000A9                     	ds	2
   465  0000AB                     vfprintf@cfmt:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x4B
   469  0000AB                     	ds	2
   470  0000AD                     ?_sprintf:
   471                           	callstack 0
   472  0000AD                     sprintf@s:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x4D
   476  0000AD                     	ds	2
   477  0000AF                     sprintf@fmt:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x4F
   481  0000AF                     	ds	6
   482  0000B5                     sprintf@ap:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x55
   486  0000B5                     	ds	2
   487  0000B7                     sprintf@f:
   488                           	callstack 0
   489                           
   490                           ; 11 bytes @ 0x57
   491  0000B7                     	ds	11
   492  0000C2                     ??_ex3:
   493                           
   494                           ; 1 bytes @ 0x62
   495  0000C2                     	ds	2
   496  0000C4                     ex3@L_strTension:
   497                           	callstack 0
   498                           
   499                           ; 25 bytes @ 0x64
   500  0000C4                     	ds	25
   501  0000DD                     ex3@L_ValeurMesureCan:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x7D
   505  0000DD                     	ds	2
   506  0000DF                     ex3@L_Tension_Can:
   507                           	callstack 0
   508                           
   509                           ; 4 bytes @ 0x7F
   510  0000DF                     	ds	4
   511                           
   512                           	psect	cstackCOMRAM
   513  000001                     __pcstackCOMRAM:
   514                           	callstack 0
   515  000001                     ?_strlen:
   516                           	callstack 0
   517  000001                     ?___fpclassifyf:
   518                           	callstack 0
   519  000001                     ?_isupper:
   520                           	callstack 0
   521  000001                     ?_isdigit:
   522                           	callstack 0
   523  000001                     ?_strncmp:
   524                           	callstack 0
   525  000001                     ?_isspace:
   526                           	callstack 0
   527  000001                     ?_testBtnPressed:
   528                           	callstack 0
   529  000001                     ?___wmul:
   530                           	callstack 0
   531  000001                     ?___awdiv:
   532                           	callstack 0
   533  000001                     ?___awmod:
   534                           	callstack 0
   535  000001                     ?___fladd:
   536                           	callstack 0
   537  000001                     ?___flneg:
   538                           	callstack 0
   539  000001                     ?___fltol:
   540                           	callstack 0
   541  000001                     ?___xxtofl:
   542                           	callstack 0
   543  000001                     SendByteBBSPI@output:
   544                           	callstack 0
   545  000001                     ___wmul@multiplier:
   546                           	callstack 0
   547  000001                     ___awdiv@dividend:
   548                           	callstack 0
   549  000001                     ___awmod@dividend:
   550                           	callstack 0
   551  000001                     isdigit@c:
   552                           	callstack 0
   553  000001                     isspace@c:
   554                           	callstack 0
   555  000001                     isupper@c:
   556                           	callstack 0
   557  000001                     fputc@c:
   558                           	callstack 0
   559  000001                     strcpy@dest:
   560                           	callstack 0
   561  000001                     strlen@s:
   562                           	callstack 0
   563  000001                     strncmp@_l:
   564                           	callstack 0
   565  000001                     ___fleq@ff1:
   566                           	callstack 0
   567  000001                     ___flneg@f1:
   568                           	callstack 0
   569  000001                     ___fltol@f1:
   570                           	callstack 0
   571  000001                     ___fladd@b:
   572                           	callstack 0
   573  000001                     ___xxtofl@val:
   574                           	callstack 0
   575  000001                     ___fpclassifyf@x:
   576                           	callstack 0
   577                           
   578                           ; 4 bytes @ 0x0
   579  000001                     	ds	1
   580  000002                     SendByteBBSPI@bitcount:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0x1
   584  000002                     	ds	1
   585  000003                     ??_isupper:
   586  000003                     ??_isdigit:
   587  000003                     ??_isspace:
   588  000003                     ??_testBtnPressed:
   589  000003                     SendByteBBSPI@input:
   590                           	callstack 0
   591  000003                     ___wmul@multiplicand:
   592                           	callstack 0
   593  000003                     ___awdiv@divisor:
   594                           	callstack 0
   595  000003                     ___awmod@divisor:
   596                           	callstack 0
   597  000003                     fputc@fp:
   598                           	callstack 0
   599  000003                     strcpy@src:
   600                           	callstack 0
   601  000003                     strlen@a:
   602                           	callstack 0
   603  000003                     strncmp@_r:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x2
   607  000003                     	ds	1
   608  000004                     Port_BBSPIInit@port_dir:
   609                           	callstack 0
   610  000004                     WritePort_BBSPI@a:
   611                           	callstack 0
   612                           
   613                           ; 1 bytes @ 0x3
   614  000004                     	ds	1
   615  000005                     ??_fputc:
   616  000005                     ??___fpclassifyf:
   617  000005                     ??_strcpy:
   618  000005                     ??___fltol:
   619  000005                     ??___xxtofl:
   620  000005                     WritePort_BBSPI@port_add:
   621                           	callstack 0
   622  000005                     ___awdiv@counter:
   623                           	callstack 0
   624  000005                     ___awmod@counter:
   625                           	callstack 0
   626  000005                     ___wmul@product:
   627                           	callstack 0
   628  000005                     strncmp@n:
   629                           	callstack 0
   630  000005                     ___fleq@ff2:
   631                           	callstack 0
   632  000005                     ___fladd@a:
   633                           	callstack 0
   634                           
   635                           ; 4 bytes @ 0x4
   636  000005                     	ds	1
   637  000006                     ??_LCDPutInst:
   638  000006                     ??_LCDPutChar:
   639  000006                     ___awdiv@sign:
   640                           	callstack 0
   641  000006                     ___awmod@sign:
   642                           	callstack 0
   643                           
   644                           ; 1 bytes @ 0x5
   645  000006                     	ds	1
   646  000007                     ??_strncmp:
   647  000007                     ?_tolower:
   648                           	callstack 0
   649  000007                     LCDPutChar@ch:
   650                           	callstack 0
   651  000007                     LCDPutInst@ch:
   652                           	callstack 0
   653  000007                     _isspace$1522:
   654                           	callstack 0
   655  000007                     ___awdiv@quotient:
   656                           	callstack 0
   657  000007                     strcpy@s:
   658                           	callstack 0
   659  000007                     tolower@c:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x6
   663  000007                     	ds	1
   664  000008                     ??_lcdInit:
   665  000008                     ?_atoi:
   666                           	callstack 0
   667  000008                     lcdGoTo@P_Pos:
   668                           	callstack 0
   669  000008                     LCDPutStr@ptr:
   670                           	callstack 0
   671  000008                     atoi@s:
   672                           	callstack 0
   673  000008                     strncmp@l:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x7
   677  000008                     	ds	1
   678  000009                     ??___fladd:
   679  000009                     ??_tolower:
   680  000009                     ??___fleq:
   681  000009                     lcdGoToLC@P_Col:
   682                           	callstack 0
   683  000009                     ___fltol@sign1:
   684                           	callstack 0
   685  000009                     ___xxtofl@sign:
   686                           	callstack 0
   687  000009                     ___fpclassifyf@e:
   688                           	callstack 0
   689  000009                     strcpy@d:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x8
   693  000009                     	ds	1
   694  00000A                     ??_atoi:
   695  00000A                     lcdGoToLC@P_Ligne:
   696                           	callstack 0
   697  00000A                     ___fltol@exp1:
   698                           	callstack 0
   699  00000A                     ___xxtofl@exp:
   700                           	callstack 0
   701  00000A                     fputs@s:
   702                           	callstack 0
   703  00000A                     strncmp@r:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x9
   707  00000A                     	ds	1
   708  00000B                     lcdGoToLC@L_Adresse:
   709                           	callstack 0
   710  00000B                     ___xxtofl@arg:
   711                           	callstack 0
   712  00000B                     ___fpclassifyf@u:
   713                           	callstack 0
   714                           
   715                           ; 4 bytes @ 0xA
   716  00000B                     	ds	1
   717  00000C                     ??_ex2:
   718  00000C                     fputs@fp:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0xB
   722  00000C                     	ds	1
   723  00000D                     ___fladd@signs:
   724                           	callstack 0
   725                           
   726                           ; 1 bytes @ 0xC
   727  00000D                     	ds	1
   728  00000E                     ___fladd@aexp:
   729                           	callstack 0
   730  00000E                     fputs@c:
   731                           	callstack 0
   732  00000E                     ex2@L_ret:
   733                           	callstack 0
   734  00000E                     atoi@neg:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0xD
   738  00000E                     	ds	1
   739  00000F                     ?___flmul:
   740                           	callstack 0
   741  00000F                     ___fladd@bexp:
   742                           	callstack 0
   743  00000F                     fputs@i:
   744                           	callstack 0
   745  00000F                     ___flmul@b:
   746                           	callstack 0
   747                           
   748                           ; 4 bytes @ 0xE
   749  00000F                     	ds	1
   750  000010                     ___fladd@grs:
   751                           	callstack 0
   752  000010                     atoi@n:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0xF
   756  000010                     	ds	1
   757  000011                     ?_pad:
   758                           	callstack 0
   759  000011                     pad@fp:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x10
   763  000011                     	ds	2
   764  000013                     pad@buf:
   765                           	callstack 0
   766  000013                     ___flmul@a:
   767                           	callstack 0
   768                           
   769                           ; 4 bytes @ 0x12
   770  000013                     	ds	2
   771  000015                     pad@p:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x14
   775  000015                     	ds	2
   776  000017                     ??___flmul:
   777  000017                     ??_pad:
   778                           
   779                           ; 1 bytes @ 0x16
   780  000017                     	ds	1
   781  000018                     pad@i:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x17
   785  000018                     	ds	2
   786  00001A                     pad@w:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x19
   790  00001A                     	ds	1
   791  00001B                     ___flmul@sign:
   792                           	callstack 0
   793                           
   794                           ; 1 bytes @ 0x1A
   795  00001B                     	ds	1
   796  00001C                     ___flmul@grs:
   797                           	callstack 0
   798                           
   799                           ; 4 bytes @ 0x1B
   800  00001C                     	ds	4
   801  000020                     ___flmul@aexp:
   802                           	callstack 0
   803                           
   804                           ; 1 bytes @ 0x1F
   805  000020                     	ds	1
   806  000021                     ___flmul@bexp:
   807                           	callstack 0
   808                           
   809                           ; 1 bytes @ 0x20
   810  000021                     	ds	1
   811  000022                     ___flmul@prod:
   812                           	callstack 0
   813                           
   814                           ; 4 bytes @ 0x21
   815  000022                     	ds	4
   816  000026                     ___flmul@temp:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x25
   820  000026                     	ds	2
   821  000028                     ?___fldiv:
   822                           	callstack 0
   823  000028                     ?___flsub:
   824                           	callstack 0
   825  000028                     ___flge@ff1:
   826                           	callstack 0
   827  000028                     ___flsub@b:
   828                           	callstack 0
   829  000028                     ___fldiv@b:
   830                           	callstack 0
   831                           
   832                           ; 4 bytes @ 0x27
   833  000028                     	ds	4
   834  00002C                     ___flge@ff2:
   835                           	callstack 0
   836  00002C                     ___flsub@a:
   837                           	callstack 0
   838  00002C                     ___fldiv@a:
   839                           	callstack 0
   840                           
   841                           ; 4 bytes @ 0x2B
   842  00002C                     	ds	4
   843  000030                     ??___fldiv:
   844  000030                     ??___flge:
   845                           
   846                           ; 1 bytes @ 0x2F
   847  000030                     	ds	4
   848  000034                     ___fldiv@rem:
   849                           	callstack 0
   850                           
   851                           ; 4 bytes @ 0x33
   852  000034                     	ds	4
   853  000038                     ___fldiv@sign:
   854                           	callstack 0
   855                           
   856                           ; 1 bytes @ 0x37
   857  000038                     	ds	1
   858  000039                     ___fldiv@new_exp:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x38
   862  000039                     	ds	2
   863  00003B                     ___fldiv@grs:
   864                           	callstack 0
   865                           
   866                           ; 4 bytes @ 0x3A
   867  00003B                     	ds	4
   868  00003F                     ___fldiv@bexp:
   869                           	callstack 0
   870                           
   871                           ; 1 bytes @ 0x3E
   872  00003F                     	ds	1
   873  000040                     ___fldiv@aexp:
   874                           	callstack 0
   875                           
   876                           ; 1 bytes @ 0x3F
   877  000040                     	ds	1
   878  000041                     ?_floorf:
   879                           	callstack 0
   880  000041                     floorf@x:
   881                           	callstack 0
   882                           
   883                           ; 4 bytes @ 0x40
   884  000041                     	ds	4
   885  000045                     ??_floorf:
   886                           
   887                           ; 1 bytes @ 0x44
   888  000045                     	ds	6
   889  00004B                     floorf@m:
   890                           	callstack 0
   891                           
   892                           ; 4 bytes @ 0x4A
   893  00004B                     	ds	4
   894  00004F                     floorf@e:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0x4E
   898  00004F                     	ds	2
   899  000051                     floorf@u:
   900                           	callstack 0
   901                           
   902                           ; 4 bytes @ 0x50
   903  000051                     	ds	4
   904  000055                     ?_efgtoa:
   905                           	callstack 0
   906  000055                     efgtoa@fp:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x54
   910  000055                     	ds	2
   911  000057                     efgtoa@f:
   912                           	callstack 0
   913                           
   914                           ; 4 bytes @ 0x56
   915  000057                     	ds	4
   916  00005B                     efgtoa@c:
   917                           	callstack 0
   918                           
   919                           ; 1 bytes @ 0x5A
   920  00005B                     	ds	1
   921  00005C                     ??_vfpfcnvrt:
   922                           
   923                           ; 1 bytes @ 0x5B
   924  00005C                     	ds	4
   925  000060                     
   926                           ; 1 bytes @ 0x5F
   927 ;;
   928 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   929 ;;
   930 ;; *************** function _main *****************
   931 ;; Defined at:
   932 ;;		line 12 in file "main.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;		None
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   950 ;;Total ram usage:        0 bytes
   951 ;; Hardware stack levels required when called: 9
   952 ;; This function calls:
   953 ;;		_ex2
   954 ;;		_ex3
   955 ;; This function is called by:
   956 ;;		Startup code after reset
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           	psect	text0
   961  004328                     __ptext0:
   962                           	callstack 0
   963  004328                     _main:
   964                           	callstack 22
   965  004328                     
   966                           ;main.c: 13:     ex2();
   967  004328  EC09  F01E         	call	_ex2	;wreg free
   968  00432C                     
   969                           ;main.c: 14:     ex3();
   970  00432C  ECB2  F019         	call	_ex3	;wreg free
   971  004330  EF00  F000         	goto	start
   972  004334                     __end_of_main:
   973                           	callstack 0
   974                           
   975 ;; *************** function _ex3 *****************
   976 ;; Defined at:
   977 ;;		line 17 in file "ex3.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;		None
   980 ;; Auto vars:     Size  Location     Type
   981 ;;  L_strTension   25  100[BANK0 ] unsigned char [25]
   982 ;;  L_Tension_Ca    4  127[BANK0 ] volatile float 
   983 ;;  L_ValeurMesu    2  125[BANK0 ] unsigned short 
   984 ;; Return value:  Size  Location     Type
   985 ;;                  1    wreg      void 
   986 ;; Registers used:
   987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   994 ;;      Locals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   995 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   996 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   997 ;;Total ram usage:       33 bytes
   998 ;; Hardware stack levels used: 1
   999 ;; Hardware stack levels required when called: 8
  1000 ;; This function calls:
  1001 ;;		_LCDPutStr
  1002 ;;		___fldiv
  1003 ;;		___flmul
  1004 ;;		___xxtofl
  1005 ;;		_lcdGoToLC
  1006 ;;		_lcdInit
  1007 ;;		_sprintf
  1008 ;; This function is called by:
  1009 ;;		_main
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           	psect	text1
  1014  003364                     __ptext1:
  1015                           	callstack 0
  1016  003364                     _ex3:
  1017                           	callstack 22
  1018  003364                     
  1019                           ;ex3.c: 19:     volatile float L_Tension_Can=2.5f;
  1020  003364  0E00               	movlw	0
  1021  003366  0100               	movlb	0	; () banked
  1022  003368  6FDF               	movwf	ex3@L_Tension_Can& (0+255),b	;volatile
  1023  00336A  0E00               	movlw	0
  1024  00336C  6FE0               	movwf	(ex3@L_Tension_Can+1)& (0+255),b	;volatile
  1025  00336E  0E20               	movlw	32
  1026  003370  6FE1               	movwf	(ex3@L_Tension_Can+2)& (0+255),b	;volatile
  1027  003372  0E40               	movlw	64
  1028  003374  6FE2               	movwf	(ex3@L_Tension_Can+3)& (0+255),b	;volatile
  1029  003376                     
  1030                           ; BSR set to: 0
  1031                           ;ex3.c: 20:      lcdInit();
  1032  003376  ECAA  F01F         	call	_lcdInit	;wreg free
  1033  00337A                     
  1034                           ;ex3.c: 22:        PIR1bits.ADIF = 0;
  1035  00337A  9C9E               	bcf	158,6,c	;volatile
  1036  00337C                     
  1037                           ;ex3.c: 23:        PIE1bits.ADIE = 0;
  1038  00337C  9C9D               	bcf	157,6,c	;volatile
  1039  00337E                     
  1040                           ;ex3.c: 24:        INTCONbits.PEIE = 0;
  1041  00337E  9CF2               	bcf	242,6,c	;volatile
  1042  003380                     
  1043                           ;ex3.c: 25:        ADCON0 = 0x01;
  1044  003380  0E01               	movlw	1
  1045  003382  6EC2               	movwf	194,c	;volatile
  1046  003384                     
  1047                           ;ex3.c: 26:        ADCON1 = 0x0E;
  1048  003384  0E0E               	movlw	14
  1049  003386  6EC1               	movwf	193,c	;volatile
  1050  003388                     
  1051                           ;ex3.c: 27:        ADCON2 = 0x89;
  1052  003388  0E89               	movlw	137
  1053  00338A  6EC0               	movwf	192,c	;volatile
  1054  00338C                     l4262:
  1055                           
  1056                           ;ex3.c: 30:        {;ex3.c: 32:         char L_strTension[25];;ex3.c: 33:         ADCON0
      +                          bits.GO = 1;
  1057  00338C  82C2               	bsf	194,1,c	;volatile
  1058  00338E                     l91:
  1059  00338E  B2C2               	btfsc	194,1,c	;volatile
  1060  003390  EFCC  F019         	goto	u4781
  1061  003394  EFCE  F019         	goto	u4780
  1062  003398                     u4781:
  1063  003398  EFC7  F019         	goto	l91
  1064  00339C                     u4780:
  1065  00339C                     
  1066                           ;ex3.c: 35:         L_ValeurMesureCan = (unsigned short int)((ADRESH<<8)|(ADRESL));
  1067  00339C  50C3               	movf	195,w,c	;volatile
  1068  00339E  CFC4 F0C2          	movff	4036,??_ex3	;volatile
  1069  0033A2  0100               	movlb	0	; () banked
  1070  0033A4  6BC3               	clrf	(??_ex3+1)& (0+255),b
  1071  0033A6  C0C2  F0C3         	movff	??_ex3,??_ex3+1
  1072  0033AA  6BC2               	clrf	??_ex3& (0+255),b
  1073  0033AC  11C2               	iorwf	??_ex3& (0+255),w,b
  1074  0033AE  6FDD               	movwf	ex3@L_ValeurMesureCan& (0+255),b
  1075  0033B0  51C3               	movf	(??_ex3+1)& (0+255),w,b
  1076  0033B2  6FDE               	movwf	(ex3@L_ValeurMesureCan+1)& (0+255),b
  1077  0033B4                     
  1078                           ; BSR set to: 0
  1079                           ;ex3.c: 36:         L_Tension_Can=((float)L_ValeurMesureCan * 5)/1024;
  1080  0033B4  0E00               	movlw	0
  1081  0033B6  6E13               	movwf	___flmul@a^0,c
  1082  0033B8  0E00               	movlw	0
  1083  0033BA  6E14               	movwf	(___flmul@a+1)^0,c
  1084  0033BC  0EA0               	movlw	160
  1085  0033BE  6E15               	movwf	(___flmul@a+2)^0,c
  1086  0033C0  0E40               	movlw	64
  1087  0033C2  6E16               	movwf	(___flmul@a+3)^0,c
  1088  0033C4  C0DD  F001         	movff	ex3@L_ValeurMesureCan,___xxtofl@val
  1089  0033C8  C0DE  F002         	movff	ex3@L_ValeurMesureCan+1,___xxtofl@val+1
  1090  0033CC  6A03               	clrf	(___xxtofl@val+2)^0,c
  1091  0033CE  6A04               	clrf	(___xxtofl@val+3)^0,c
  1092  0033D0  0E00               	movlw	0
  1093  0033D2  EC23  F018         	call	___xxtofl
  1094  0033D6  C001  F00F         	movff	?___xxtofl,___flmul@b
  1095  0033DA  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1096  0033DE  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1097  0033E2  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1098  0033E6  EC38  F013         	call	___flmul	;wreg free
  1099  0033EA  C00F  F028         	movff	?___flmul,___fldiv@b
  1100  0033EE  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  1101  0033F2  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  1102  0033F6  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  1103  0033FA  0E00               	movlw	0
  1104  0033FC  6E2C               	movwf	___fldiv@a^0,c
  1105  0033FE  0E00               	movlw	0
  1106  003400  6E2D               	movwf	(___fldiv@a+1)^0,c
  1107  003402  0E80               	movlw	128
  1108  003404  6E2E               	movwf	(___fldiv@a+2)^0,c
  1109  003406  0E44               	movlw	68
  1110  003408  6E2F               	movwf	(___fldiv@a+3)^0,c
  1111  00340A  EC4D  F015         	call	___fldiv	;wreg free
  1112  00340E  C028  F0DF         	movff	?___fldiv,ex3@L_Tension_Can	;volatile
  1113  003412  C029  F0E0         	movff	?___fldiv+1,ex3@L_Tension_Can+1	;volatile
  1114  003416  C02A  F0E1         	movff	?___fldiv+2,ex3@L_Tension_Can+2	;volatile
  1115  00341A  C02B  F0E2         	movff	?___fldiv+3,ex3@L_Tension_Can+3	;volatile
  1116  00341E                     
  1117                           ;ex3.c: 37:         sprintf (L_strTension,"U =%2.1f   ",L_Tension_Can);
  1118  00341E  0EC4               	movlw	low ex3@L_strTension
  1119  003420  0100               	movlb	0	; () banked
  1120  003422  6FAD               	movwf	sprintf@s& (0+255),b
  1121  003424  0E00               	movlw	high ex3@L_strTension
  1122  003426  6FAE               	movwf	(sprintf@s+1)& (0+255),b
  1123  003428  0E34               	movlw	low STR_4
  1124  00342A  6FAF               	movwf	sprintf@fmt& (0+255),b
  1125  00342C  0E10               	movlw	high STR_4
  1126  00342E  6FB0               	movwf	(sprintf@fmt+1)& (0+255),b
  1127  003430  C0DF  F0B1         	movff	ex3@L_Tension_Can,?_sprintf+4	;volatile
  1128  003434  C0E0  F0B2         	movff	ex3@L_Tension_Can+1,?_sprintf+5	;volatile
  1129  003438  C0E1  F0B3         	movff	ex3@L_Tension_Can+2,?_sprintf+6	;volatile
  1130  00343C  C0E2  F0B4         	movff	ex3@L_Tension_Can+3,?_sprintf+7	;volatile
  1131  003440  EC09  F020         	call	_sprintf	;wreg free
  1132  003444                     
  1133                           ;ex3.c: 38:          lcdGoToLC(0,0);
  1134  003444  0E00               	movlw	0
  1135  003446  6E09               	movwf	lcdGoToLC@P_Col^0,c
  1136  003448  0E00               	movlw	0
  1137  00344A  EC7A  F021         	call	_lcdGoToLC
  1138  00344E                     
  1139                           ;ex3.c: 39:           LCDPutStr(L_strTension);
  1140  00344E  0EC4               	movlw	low ex3@L_strTension
  1141  003450  6E08               	movwf	LCDPutStr@ptr^0,c
  1142  003452  0E00               	movlw	high ex3@L_strTension
  1143  003454  6E09               	movwf	(LCDPutStr@ptr+1)^0,c
  1144  003456  EC79  F01F         	call	_LCDPutStr	;wreg free
  1145  00345A                     
  1146                           ;ex3.c: 40:         _delay((unsigned long)((1000)*(10000000/4000.0)));
  1147  00345A  0E0D               	movlw	13
  1148  00345C  0100               	movlb	0	; () banked
  1149  00345E  6FC3               	movwf	(??_ex3+1)& (0+255),b
  1150  003460  0EAF               	movlw	175
  1151  003462  6FC2               	movwf	??_ex3& (0+255),b
  1152  003464  0EB6               	movlw	182
  1153  003466                     u4797:
  1154  003466  2EE8               	decfsz	wreg,f,c
  1155  003468  D7FE               	bra	u4797
  1156  00346A  2FC2               	decfsz	??_ex3& (0+255),f,b
  1157  00346C  D7FC               	bra	u4797
  1158  00346E  2FC3               	decfsz	(??_ex3+1)& (0+255),f,b
  1159  003470  D7FA               	bra	u4797
  1160  003472  F000               	nop	
  1161  003474  EFC6  F019         	goto	l4262
  1162  003478  0012               	return		;funcret
  1163  00347A                     __end_of_ex3:
  1164                           	callstack 0
  1165                           
  1166 ;; *************** function _sprintf *****************
  1167 ;; Defined at:
  1168 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_sprintf.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;  s               2   77[BANK0 ] PTR unsigned char 
  1171 ;;		 -> ex3@L_strTension(25), 
  1172 ;;  fmt             2   79[BANK0 ] PTR const unsigned char 
  1173 ;;		 -> STR_4(12), 
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;  f              11   87[BANK0 ] struct _IO_FILE
  1176 ;;  ap              2   85[BANK0 ] PTR void [1]
  1177 ;;		 -> ?_sprintf(2), 
  1178 ;;  ret             2    0        int 
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  2   77[BANK0 ] int 
  1181 ;; Registers used:
  1182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1188 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1189 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1191 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1192 ;;Total ram usage:       21 bytes
  1193 ;; Hardware stack levels used: 1
  1194 ;; Hardware stack levels required when called: 7
  1195 ;; This function calls:
  1196 ;;		_vfprintf
  1197 ;; This function is called by:
  1198 ;;		_ex3
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           	psect	text2
  1203  004012                     __ptext2:
  1204                           	callstack 0
  1205  004012                     _sprintf:
  1206                           	callstack 22
  1207  004012  0EB1               	movlw	low (?_sprintf+4)
  1208  004014  0100               	movlb	0	; () banked
  1209  004016  6FB5               	movwf	sprintf@ap& (0+255),b
  1210  004018  0E00               	movlw	high (?_sprintf+4)
  1211  00401A  6FB6               	movwf	(sprintf@ap+1)& (0+255),b
  1212  00401C  C0AD  F0B7         	movff	sprintf@s,sprintf@f
  1213  004020  C0AE  F0B8         	movff	sprintf@s+1,sprintf@f+1
  1214  004024                     
  1215                           ; BSR set to: 0
  1216  004024  0E00               	movlw	0
  1217  004026  6FBB               	movwf	(sprintf@f+4)& (0+255),b
  1218  004028  0E00               	movlw	0
  1219  00402A  6FBA               	movwf	(sprintf@f+3)& (0+255),b
  1220  00402C                     
  1221                           ; BSR set to: 0
  1222  00402C  0E00               	movlw	0
  1223  00402E  6FC1               	movwf	(sprintf@f+10)& (0+255),b
  1224  004030  0E00               	movlw	0
  1225  004032  6FC0               	movwf	(sprintf@f+9)& (0+255),b
  1226  004034                     
  1227                           ; BSR set to: 0
  1228  004034  0EB7               	movlw	low sprintf@f
  1229  004036  6FA5               	movwf	vfprintf@fp& (0+255),b
  1230  004038  0E00               	movlw	high sprintf@f
  1231  00403A  6FA6               	movwf	(vfprintf@fp+1)& (0+255),b
  1232  00403C  C0AF  F0A7         	movff	sprintf@fmt,vfprintf@fmt
  1233  004040  C0B0  F0A8         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1234  004044  0EB5               	movlw	low sprintf@ap
  1235  004046  6FA9               	movwf	vfprintf@ap& (0+255),b
  1236  004048  0E00               	movlw	high sprintf@ap
  1237  00404A  6FAA               	movwf	(vfprintf@ap+1)& (0+255),b
  1238  00404C  ECE0  F01E         	call	_vfprintf	;wreg free
  1239  004050  0100               	movlb	0	; () banked
  1240  004052  51BA               	movf	(sprintf@f+3)& (0+255),w,b
  1241  004054  25AD               	addwf	sprintf@s& (0+255),w,b
  1242  004056  6ED9               	movwf	fsr2l,c
  1243  004058  51BB               	movf	(sprintf@f+4)& (0+255),w,b
  1244  00405A  21AE               	addwfc	(sprintf@s+1)& (0+255),w,b
  1245  00405C  6EDA               	movwf	fsr2h,c
  1246  00405E  0E00               	movlw	0
  1247  004060  6EDF               	movwf	indf2,c
  1248  004062                     
  1249                           ; BSR set to: 0
  1250  004062  0012               	return		;funcret
  1251  004064                     __end_of_sprintf:
  1252                           	callstack 0
  1253                           
  1254 ;; *************** function _vfprintf *****************
  1255 ;; Defined at:
  1256 ;;		line 1390 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;  fp              2   69[BANK0 ] PTR struct _IO_FILE
  1259 ;;		 -> sprintf@f(11), 
  1260 ;;  fmt             2   71[BANK0 ] PTR const unsigned char 
  1261 ;;		 -> STR_4(12), 
  1262 ;;  ap              2   73[BANK0 ] PTR PTR void 
  1263 ;;		 -> sprintf@ap(2), 
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  cfmt            2   75[BANK0 ] PTR unsigned char 
  1266 ;;		 -> STR_4(12), 
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  2   69[BANK0 ] int 
  1269 ;; Registers used:
  1270 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1276 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1277 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1279 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1280 ;;Total ram usage:        8 bytes
  1281 ;; Hardware stack levels used: 1
  1282 ;; Hardware stack levels required when called: 6
  1283 ;; This function calls:
  1284 ;;		_vfpfcnvrt
  1285 ;; This function is called by:
  1286 ;;		_sprintf
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           	psect	text3
  1291  003DC0                     __ptext3:
  1292                           	callstack 0
  1293  003DC0                     _vfprintf:
  1294                           	callstack 22
  1295  003DC0                     
  1296                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
  1297  003DC0  C0A7  F0AB         	movff	vfprintf@fmt,vfprintf@cfmt
  1298  003DC4  C0A8  F0AC         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1299  003DC8                     
  1300                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  1301  003DC8  0E00               	movlw	0
  1302  003DCA  0100               	movlb	0	; () banked
  1303  003DCC  6FEC               	movwf	(_nout+1)& (0+255),b
  1304  003DCE  0E00               	movlw	0
  1305  003DD0  6FEB               	movwf	_nout& (0+255),b
  1306                           
  1307                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  1308  003DD2  EFFE  F01E         	goto	l4100
  1309  003DD6                     l4098:
  1310                           
  1311                           ; BSR set to: 0
  1312                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  1313  003DD6  C0A5  F097         	movff	vfprintf@fp,vfpfcnvrt@fp
  1314  003DDA  C0A6  F098         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1315  003DDE  0EAB               	movlw	low vfprintf@cfmt
  1316  003DE0  6F99               	movwf	vfpfcnvrt@fmt& (0+255),b
  1317  003DE2  0E00               	movlw	high vfprintf@cfmt
  1318  003DE4  6F9A               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1319  003DE6  C0A9  F09B         	movff	vfprintf@ap,vfpfcnvrt@ap
  1320  003DEA  C0AA  F09C         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1321  003DEE  EC2F  F00E         	call	_vfpfcnvrt	;wreg free
  1322  003DF2  0100               	movlb	0	; () banked
  1323  003DF4  5197               	movf	?_vfpfcnvrt& (0+255),w,b
  1324  003DF6  27EB               	addwf	_nout& (0+255),f,b
  1325  003DF8  5198               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1326  003DFA  23EC               	addwfc	(_nout+1)& (0+255),f,b
  1327  003DFC                     l4100:
  1328                           
  1329                           ; BSR set to: 0
  1330                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  1331  003DFC  C0AB  FFF6         	movff	vfprintf@cfmt,tblptrl
  1332  003E00  C0AC  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1333  003E04                     	if	0	;tblptru may be non-zero
  1334  003E04                     	endif
  1335  003E04                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1336  003E04  0E00               	movlw	low (__mediumconst shr (0+16))
  1337  003E06  6EF8               	movwf	tblptru,c
  1338  003E08                     	endif
  1339  003E08  0008               	tblrd		*
  1340  003E0A  50F5               	movf	tablat,w,c
  1341  003E0C  0900               	iorlw	0
  1342  003E0E  A4D8               	btfss	status,2,c
  1343  003E10  EF0C  F01F         	goto	u4581
  1344  003E14  EF0E  F01F         	goto	u4580
  1345  003E18                     u4581:
  1346  003E18  EFEB  F01E         	goto	l4098
  1347  003E1C                     u4580:
  1348  003E1C                     
  1349                           ; BSR set to: 0
  1350                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1400:     return nout;
  1351  003E1C  C0EB  F0A5         	movff	_nout,?_vfprintf
  1352  003E20  C0EC  F0A6         	movff	_nout+1,?_vfprintf+1
  1353  003E24                     
  1354                           ; BSR set to: 0
  1355  003E24  0012               	return		;funcret
  1356  003E26                     __end_of_vfprintf:
  1357                           	callstack 0
  1358                           
  1359 ;; *************** function _vfpfcnvrt *****************
  1360 ;; Defined at:
  1361 ;;		line 692 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;  fp              2   55[BANK0 ] PTR struct _IO_FILE
  1364 ;;		 -> sprintf@f(11), 
  1365 ;;  fmt             2   57[BANK0 ] PTR PTR unsigned char 
  1366 ;;		 -> vfprintf@cfmt(2), 
  1367 ;;  ap              2   59[BANK0 ] PTR PTR void 
  1368 ;;		 -> sprintf@ap(2), 
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;  llu             8    0        unsigned long long 
  1371 ;;  ll              8    0        long long 
  1372 ;;  f               4   61[BANK0 ] long long 
  1373 ;;  ct              3   65[BANK0 ] unsigned char [3]
  1374 ;;  vp              3    0        PTR void 
  1375 ;;  cp              3    0        PTR unsigned char 
  1376 ;;  i               2    0        int 
  1377 ;;  done            2    0        int 
  1378 ;;  c               1   68[BANK0 ] unsigned char 
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  2   55[BANK0 ] int 
  1381 ;; Registers used:
  1382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1388 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1389 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1390 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1391 ;;      Totals:         4      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;Total ram usage:       18 bytes
  1393 ;; Hardware stack levels used: 1
  1394 ;; Hardware stack levels required when called: 5
  1395 ;; This function calls:
  1396 ;;		_atoi
  1397 ;;		_efgtoa
  1398 ;;		_fputc
  1399 ;;		_isdigit
  1400 ;;		_isupper
  1401 ;;		_strncmp
  1402 ;;		_tolower
  1403 ;; This function is called by:
  1404 ;;		_vfprintf
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           	psect	text4
  1409  001C5E                     __ptext4:
  1410                           	callstack 0
  1411  001C5E                     _vfpfcnvrt:
  1412                           	callstack 22
  1413  001C5E                     
  1414                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
  1415  001C5E  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1416  001C62  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1417  001C66  CFDE FFF6          	movff	postinc2,tblptrl
  1418  001C6A  CFDD FFF7          	movff	postdec2,tblptrh
  1419  001C6E                     	if	0	;tblptru may be non-zero
  1420  001C6E                     	endif
  1421  001C6E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1422  001C6E  0E00               	movlw	low (__mediumconst shr (0+16))
  1423  001C70  6EF8               	movwf	tblptru,c
  1424  001C72                     	endif
  1425  001C72  0008               	tblrd		*
  1426  001C74  50F5               	movf	tablat,w,c
  1427  001C76  0A25               	xorlw	37
  1428  001C78  A4D8               	btfss	status,2,c
  1429  001C7A  EF41  F00E         	goto	u4451
  1430  001C7E  EF43  F00E         	goto	u4450
  1431  001C82                     u4451:
  1432  001C82  EFBA  F010         	goto	l4060
  1433  001C86                     u4450:
  1434  001C86                     
  1435                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  1436  001C86  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1437  001C8A  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1438  001C8E  2ADE               	incf	postinc2,f,c
  1439  001C90  0E00               	movlw	0
  1440  001C92  22DD               	addwfc	postdec2,f,c
  1441  001C94                     
  1442                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
  1443  001C94  0E00               	movlw	0
  1444  001C96  0100               	movlb	0	; () banked
  1445  001C98  6FEE               	movwf	(_width+1)& (0+255),b
  1446  001C9A  0E00               	movlw	0
  1447  001C9C  6FED               	movwf	_width& (0+255),b
  1448  001C9E  C0ED  F0F1         	movff	_width,_flags
  1449  001CA2  C0EE  F0F2         	movff	_width+1,_flags+1
  1450  001CA6                     
  1451                           ; BSR set to: 0
  1452                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
  1453  001CA6  69EF               	setf	_prec& (0+255),b
  1454  001CA8  69F0               	setf	(_prec+1)& (0+255),b
  1455  001CAA                     
  1456                           ; BSR set to: 0
  1457                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 745:         if ((*fmt)[0] ==
      +                           '*') {
  1458  001CAA  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1459  001CAE  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1460  001CB2  CFDE FFF6          	movff	postinc2,tblptrl
  1461  001CB6  CFDD FFF7          	movff	postdec2,tblptrh
  1462  001CBA                     	if	0	;tblptru may be non-zero
  1463  001CBA                     	endif
  1464  001CBA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1465  001CBA  0E00               	movlw	low (__mediumconst shr (0+16))
  1466  001CBC  6EF8               	movwf	tblptru,c
  1467  001CBE                     	endif
  1468  001CBE  0008               	tblrd		*
  1469  001CC0  50F5               	movf	tablat,w,c
  1470  001CC2  0A2A               	xorlw	42
  1471  001CC4  A4D8               	btfss	status,2,c
  1472  001CC6  EF67  F00E         	goto	u4461
  1473  001CCA  EF69  F00E         	goto	u4460
  1474  001CCE                     u4461:
  1475  001CCE  EF92  F00E         	goto	l3980
  1476  001CD2                     u4460:
  1477  001CD2                     
  1478                           ; BSR set to: 0
  1479                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 746:             ++*fmt;
  1480  001CD2  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1481  001CD6  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1482  001CDA  2ADE               	incf	postinc2,f,c
  1483  001CDC  0E00               	movlw	0
  1484  001CDE  22DD               	addwfc	postdec2,f,c
  1485                           
  1486                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 747:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  1487  001CE0  C09B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1488  001CE4  C09C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1489  001CE8  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  1490  001CEC  0E02               	movlw	2
  1491  001CEE  26DE               	addwf	postinc2,f,c
  1492  001CF0  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  1493  001CF4  0E00               	movlw	0
  1494  001CF6  22DD               	addwfc	postdec2,f,c
  1495  001CF8  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1496  001CFC  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1497  001D00  CFDE F0ED          	movff	postinc2,_width
  1498  001D04  CFDD F0EE          	movff	postdec2,_width+1
  1499  001D08                     
  1500                           ; BSR set to: 0
  1501                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 748:             if (width < 
      +                          0) {
  1502  001D08  BFEE               	btfsc	(_width+1)& (0+255),7,b
  1503  001D0A  EF8B  F00E         	goto	u4470
  1504  001D0E  EF89  F00E         	goto	u4471
  1505  001D12                     u4471:
  1506  001D12  EFCA  F00E         	goto	l3988
  1507  001D16                     u4470:
  1508  001D16                     
  1509                           ; BSR set to: 0
  1510                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 749:                 flags |=
      +                           (1 << 0);
  1511  001D16  81F1               	bsf	_flags& (0+255),0,b
  1512                           
  1513                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 750:                 width = 
      +                          -width;
  1514  001D18  6DED               	negf	_width& (0+255),b
  1515  001D1A  1FEE               	comf	(_width+1)& (0+255),f,b
  1516  001D1C  B0D8               	btfsc	status,0,c
  1517  001D1E  2BEE               	incf	(_width+1)& (0+255),f,b
  1518  001D20  EFCA  F00E         	goto	l3988
  1519  001D24                     l3980:
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 753:             width = atoi
      +                          (*fmt);
  1523  001D24  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1524  001D28  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1525  001D2C  CFDE F008          	movff	postinc2,atoi@s
  1526  001D30  CFDD F009          	movff	postdec2,atoi@s+1
  1527  001D34  ECFD  F018         	call	_atoi	;wreg free
  1528  001D38  C008  F0ED         	movff	?_atoi,_width
  1529  001D3C  C009  F0EE         	movff	?_atoi+1,_width+1
  1530                           
  1531                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 754:             while ((0 &&
      +                           isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1532  001D40  EFA9  F00E         	goto	l3986
  1533  001D44                     l3982:
  1534                           
  1535                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 755:                 ++*fmt;
  1536  001D44  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1537  001D48  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1538  001D4C  2ADE               	incf	postinc2,f,c
  1539  001D4E  0E00               	movlw	0
  1540  001D50  22DD               	addwfc	postdec2,f,c
  1541  001D52                     l3986:
  1542  001D52  0ED0               	movlw	208
  1543  001D54  6E5C               	movwf	??_vfpfcnvrt^0,c
  1544  001D56  0EFF               	movlw	255
  1545  001D58  6E5D               	movwf	(??_vfpfcnvrt+1)^0,c
  1546  001D5A  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1547  001D5E  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1548  001D62  CFDE FFF6          	movff	postinc2,tblptrl
  1549  001D66  CFDD FFF7          	movff	postdec2,tblptrh
  1550  001D6A                     	if	0	;tblptru may be non-zero
  1551  001D6A                     	endif
  1552  001D6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1553  001D6A  0E00               	movlw	low (__mediumconst shr (0+16))
  1554  001D6C  6EF8               	movwf	tblptru,c
  1555  001D6E                     	endif
  1556  001D6E  0008               	tblrd		*
  1557  001D70  50F5               	movf	tablat,w,c
  1558  001D72  6E5E               	movwf	(??_vfpfcnvrt+2)^0,c
  1559  001D74  6A5F               	clrf	(??_vfpfcnvrt+3)^0,c
  1560  001D76  505C               	movf	??_vfpfcnvrt^0,w,c
  1561  001D78  265E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1562  001D7A  505D               	movf	(??_vfpfcnvrt+1)^0,w,c
  1563  001D7C  225F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1564  001D7E  505F               	movf	(??_vfpfcnvrt+3)^0,w,c
  1565  001D80  E109               	bnz	u4480
  1566  001D82  0E0A               	movlw	10
  1567  001D84  5C5E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1568  001D86  A0D8               	btfss	status,0,c
  1569  001D88  EFC8  F00E         	goto	u4481
  1570  001D8C  EFCA  F00E         	goto	u4480
  1571  001D90                     u4481:
  1572  001D90  EFA2  F00E         	goto	l3982
  1573  001D94                     u4480:
  1574  001D94                     l3988:
  1575                           
  1576                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 762:         if ((*fmt)[0] ==
      +                           '.') {
  1577  001D94  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1578  001D98  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1579  001D9C  CFDE FFF6          	movff	postinc2,tblptrl
  1580  001DA0  CFDD FFF7          	movff	postdec2,tblptrh
  1581  001DA4                     	if	0	;tblptru may be non-zero
  1582  001DA4                     	endif
  1583  001DA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1584  001DA4  0E00               	movlw	low (__mediumconst shr (0+16))
  1585  001DA6  6EF8               	movwf	tblptru,c
  1586  001DA8                     	endif
  1587  001DA8  0008               	tblrd		*
  1588  001DAA  50F5               	movf	tablat,w,c
  1589  001DAC  0A2E               	xorlw	46
  1590  001DAE  A4D8               	btfss	status,2,c
  1591  001DB0  EFDC  F00E         	goto	u4491
  1592  001DB4  EFDE  F00E         	goto	u4490
  1593  001DB8                     u4491:
  1594  001DB8  EF53  F00F         	goto	l4006
  1595  001DBC                     u4490:
  1596  001DBC                     
  1597                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 763:             prec = 0;
  1598  001DBC  0E00               	movlw	0
  1599  001DBE  0100               	movlb	0	; () banked
  1600  001DC0  6FF0               	movwf	(_prec+1)& (0+255),b
  1601  001DC2  0E00               	movlw	0
  1602  001DC4  6FEF               	movwf	_prec& (0+255),b
  1603  001DC6                     
  1604                           ; BSR set to: 0
  1605                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 764:             ++*fmt;
  1606  001DC6  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1607  001DCA  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1608  001DCE  2ADE               	incf	postinc2,f,c
  1609  001DD0  0E00               	movlw	0
  1610  001DD2  22DD               	addwfc	postdec2,f,c
  1611  001DD4                     
  1612                           ; BSR set to: 0
  1613                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 765:             if ((*fmt)[0
      +                          ] == '*') {
  1614  001DD4  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1615  001DD8  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1616  001DDC  CFDE FFF6          	movff	postinc2,tblptrl
  1617  001DE0  CFDD FFF7          	movff	postdec2,tblptrh
  1618  001DE4                     	if	0	;tblptru may be non-zero
  1619  001DE4                     	endif
  1620  001DE4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1621  001DE4  0E00               	movlw	low (__mediumconst shr (0+16))
  1622  001DE6  6EF8               	movwf	tblptru,c
  1623  001DE8                     	endif
  1624  001DE8  0008               	tblrd		*
  1625  001DEA  50F5               	movf	tablat,w,c
  1626  001DEC  0A2A               	xorlw	42
  1627  001DEE  A4D8               	btfss	status,2,c
  1628  001DF0  EFFC  F00E         	goto	u4501
  1629  001DF4  EFFE  F00E         	goto	u4500
  1630  001DF8                     u4501:
  1631  001DF8  EF1B  F00F         	goto	l3998
  1632  001DFC                     u4500:
  1633  001DFC                     
  1634                           ; BSR set to: 0
  1635                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 766:                 ++*fmt;
  1636  001DFC  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1637  001E00  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1638  001E04  2ADE               	incf	postinc2,f,c
  1639  001E06  0E00               	movlw	0
  1640  001E08  22DD               	addwfc	postdec2,f,c
  1641                           
  1642                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 767:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  1643  001E0A  C09B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1644  001E0E  C09C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1645  001E12  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  1646  001E16  0E02               	movlw	2
  1647  001E18  26DE               	addwf	postinc2,f,c
  1648  001E1A  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  1649  001E1E  0E00               	movlw	0
  1650  001E20  22DD               	addwfc	postdec2,f,c
  1651  001E22  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1652  001E26  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1653  001E2A  CFDE F0EF          	movff	postinc2,_prec
  1654  001E2E  CFDD F0F0          	movff	postdec2,_prec+1
  1655                           
  1656                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 768:             } else {
  1657  001E32  EF53  F00F         	goto	l4006
  1658  001E36                     l3998:
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 769:                 prec = a
      +                          toi(*fmt);
  1662  001E36  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1663  001E3A  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1664  001E3E  CFDE F008          	movff	postinc2,atoi@s
  1665  001E42  CFDD F009          	movff	postdec2,atoi@s+1
  1666  001E46  ECFD  F018         	call	_atoi	;wreg free
  1667  001E4A  C008  F0EF         	movff	?_atoi,_prec
  1668  001E4E  C009  F0F0         	movff	?_atoi+1,_prec+1
  1669                           
  1670                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 770:                 while ((
      +                          0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1671  001E52  EF32  F00F         	goto	l4004
  1672  001E56                     l4000:
  1673                           
  1674                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 771:                     ++*f
      +                          mt;
  1675  001E56  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1676  001E5A  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1677  001E5E  2ADE               	incf	postinc2,f,c
  1678  001E60  0E00               	movlw	0
  1679  001E62  22DD               	addwfc	postdec2,f,c
  1680  001E64                     l4004:
  1681  001E64  0ED0               	movlw	208
  1682  001E66  6E5C               	movwf	??_vfpfcnvrt^0,c
  1683  001E68  0EFF               	movlw	255
  1684  001E6A  6E5D               	movwf	(??_vfpfcnvrt+1)^0,c
  1685  001E6C  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1686  001E70  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1687  001E74  CFDE FFF6          	movff	postinc2,tblptrl
  1688  001E78  CFDD FFF7          	movff	postdec2,tblptrh
  1689  001E7C                     	if	0	;tblptru may be non-zero
  1690  001E7C                     	endif
  1691  001E7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1692  001E7C  0E00               	movlw	low (__mediumconst shr (0+16))
  1693  001E7E  6EF8               	movwf	tblptru,c
  1694  001E80                     	endif
  1695  001E80  0008               	tblrd		*
  1696  001E82  50F5               	movf	tablat,w,c
  1697  001E84  6E5E               	movwf	(??_vfpfcnvrt+2)^0,c
  1698  001E86  6A5F               	clrf	(??_vfpfcnvrt+3)^0,c
  1699  001E88  505C               	movf	??_vfpfcnvrt^0,w,c
  1700  001E8A  265E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1701  001E8C  505D               	movf	(??_vfpfcnvrt+1)^0,w,c
  1702  001E8E  225F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1703  001E90  505F               	movf	(??_vfpfcnvrt+3)^0,w,c
  1704  001E92  E109               	bnz	u4510
  1705  001E94  0E0A               	movlw	10
  1706  001E96  5C5E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1707  001E98  A0D8               	btfss	status,0,c
  1708  001E9A  EF51  F00F         	goto	u4511
  1709  001E9E  EF53  F00F         	goto	u4510
  1710  001EA2                     u4511:
  1711  001EA2  EF2B  F00F         	goto	l4000
  1712  001EA6                     u4510:
  1713  001EA6                     l4006:
  1714                           
  1715                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 779:         ct[0] = (char)to
      +                          lower((int)(*fmt)[0]);
  1716  001EA6  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1717  001EAA  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1718  001EAE  CFDE FFF6          	movff	postinc2,tblptrl
  1719  001EB2  CFDD FFF7          	movff	postdec2,tblptrh
  1720  001EB6                     	if	0	;tblptru may be non-zero
  1721  001EB6                     	endif
  1722  001EB6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1723  001EB6  0E00               	movlw	low (__mediumconst shr (0+16))
  1724  001EB8  6EF8               	movwf	tblptru,c
  1725  001EBA                     	endif
  1726  001EBA  0008               	tblrd		*
  1727  001EBC  50F5               	movf	tablat,w,c
  1728  001EBE  6E07               	movwf	tolower@c^0,c
  1729  001EC0  6A08               	clrf	(tolower@c+1)^0,c
  1730  001EC2  EC5B  F020         	call	_tolower	;wreg free
  1731  001EC6  5007               	movf	?_tolower^0,w,c
  1732  001EC8  0100               	movlb	0	; () banked
  1733  001ECA  6FA1               	movwf	vfpfcnvrt@ct& (0+255),b
  1734  001ECC                     
  1735                           ; BSR set to: 0
  1736                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 780:         if (ct[0]) {
  1737  001ECC  51A1               	movf	vfpfcnvrt@ct& (0+255),w,b
  1738  001ECE  B4D8               	btfsc	status,2,c
  1739  001ED0  EF6C  F00F         	goto	u4521
  1740  001ED4  EF6E  F00F         	goto	u4520
  1741  001ED8                     u4521:
  1742  001ED8  EFAC  F00F         	goto	l4016
  1743  001EDC                     u4520:
  1744  001EDC                     
  1745                           ; BSR set to: 0
  1746                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 781:             ct[1] = (cha
      +                          r)tolower((int)(*fmt)[1]);
  1747  001EDC  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1748  001EE0  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1749  001EE4  CFDE F05C          	movff	postinc2,??_vfpfcnvrt
  1750  001EE8  CFDD F05D          	movff	postdec2,??_vfpfcnvrt+1
  1751  001EEC  0E01               	movlw	1
  1752  001EEE  265C               	addwf	??_vfpfcnvrt^0,f,c
  1753  001EF0  0E00               	movlw	0
  1754  001EF2  225D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1755  001EF4  C05C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1756  001EF8  C05D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1757  001EFC                     	if	0	;tblptru may be non-zero
  1758  001EFC                     	endif
  1759  001EFC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1760  001EFC  0E00               	movlw	low (__mediumconst shr (0+16))
  1761  001EFE  6EF8               	movwf	tblptru,c
  1762  001F00                     	endif
  1763  001F00  0008               	tblrd		*
  1764  001F02  50F5               	movf	tablat,w,c
  1765  001F04  6E07               	movwf	tolower@c^0,c
  1766  001F06  6A08               	clrf	(tolower@c+1)^0,c
  1767  001F08  EC5B  F020         	call	_tolower	;wreg free
  1768  001F0C  5007               	movf	?_tolower^0,w,c
  1769  001F0E  0100               	movlb	0	; () banked
  1770  001F10  6FA2               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1771  001F12                     
  1772                           ; BSR set to: 0
  1773                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 782:             if (ct[1]) {
  1774  001F12  51A2               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1775  001F14  B4D8               	btfsc	status,2,c
  1776  001F16  EF8F  F00F         	goto	u4531
  1777  001F1A  EF91  F00F         	goto	u4530
  1778  001F1E                     u4531:
  1779  001F1E  EFAC  F00F         	goto	l4016
  1780  001F22                     u4530:
  1781  001F22                     
  1782                           ; BSR set to: 0
  1783                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 783:                 ct[2] = 
      +                          (char)tolower((int)(*fmt)[2]);
  1784  001F22  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1785  001F26  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1786  001F2A  CFDE F05C          	movff	postinc2,??_vfpfcnvrt
  1787  001F2E  CFDD F05D          	movff	postdec2,??_vfpfcnvrt+1
  1788  001F32  0E02               	movlw	2
  1789  001F34  265C               	addwf	??_vfpfcnvrt^0,f,c
  1790  001F36  0E00               	movlw	0
  1791  001F38  225D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1792  001F3A  C05C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1793  001F3E  C05D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1794  001F42                     	if	0	;tblptru may be non-zero
  1795  001F42                     	endif
  1796  001F42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1797  001F42  0E00               	movlw	low (__mediumconst shr (0+16))
  1798  001F44  6EF8               	movwf	tblptru,c
  1799  001F46                     	endif
  1800  001F46  0008               	tblrd		*
  1801  001F48  50F5               	movf	tablat,w,c
  1802  001F4A  6E07               	movwf	tolower@c^0,c
  1803  001F4C  6A08               	clrf	(tolower@c+1)^0,c
  1804  001F4E  EC5B  F020         	call	_tolower	;wreg free
  1805  001F52  5007               	movf	?_tolower^0,w,c
  1806  001F54  0100               	movlb	0	; () banked
  1807  001F56  6FA3               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1808  001F58                     l4016:
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 942:         if (ct[0] == 'f'
      +                          ) {
  1812  001F58  0E66               	movlw	102
  1813  001F5A  19A1               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1814  001F5C  A4D8               	btfss	status,2,c
  1815  001F5E  EFB3  F00F         	goto	u4541
  1816  001F62  EFB5  F00F         	goto	u4540
  1817  001F66                     u4541:
  1818  001F66  EFF7  F00F         	goto	l4028
  1819  001F6A                     u4540:
  1820  001F6A                     
  1821                           ; BSR set to: 0
  1822                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 944:             c = (*fmt)[0
      +                          ];
  1823  001F6A  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1824  001F6E  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1825  001F72  CFDE FFF6          	movff	postinc2,tblptrl
  1826  001F76  CFDD FFF7          	movff	postdec2,tblptrh
  1827  001F7A                     	if	0	;tblptru may be non-zero
  1828  001F7A                     	endif
  1829  001F7A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1830  001F7A  0E00               	movlw	low (__mediumconst shr (0+16))
  1831  001F7C  6EF8               	movwf	tblptru,c
  1832  001F7E                     	endif
  1833  001F7E  0008               	tblrd		*
  1834  001F80  CFF5 F0A4          	movff	tablat,vfpfcnvrt@c
  1835  001F84                     
  1836                           ; BSR set to: 0
  1837                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 945:             ++*fmt;
  1838  001F84  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1839  001F88  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1840  001F8C  2ADE               	incf	postinc2,f,c
  1841  001F8E  0E00               	movlw	0
  1842  001F90  22DD               	addwfc	postdec2,f,c
  1843  001F92                     
  1844                           ; BSR set to: 0
  1845                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 946:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  1846  001F92  C09B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1847  001F96  C09C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1848  001F9A  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  1849  001F9E  0E04               	movlw	4
  1850  001FA0  26DE               	addwf	postinc2,f,c
  1851  001FA2  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  1852  001FA6  0E00               	movlw	0
  1853  001FA8  22DD               	addwfc	postdec2,f,c
  1854  001FAA  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1855  001FAE  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1856  001FB2  CFDE F09D          	movff	postinc2,vfpfcnvrt@f
  1857  001FB6  CFDE F09E          	movff	postinc2,vfpfcnvrt@f+1
  1858  001FBA  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+2
  1859  001FBE  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+3
  1860  001FC2                     l4024:
  1861                           
  1862                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 948:             return efgto
      +                          a(fp, f, c);
  1863  001FC2  C097  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  1864  001FC6  C098  F056         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1865  001FCA  C09D  F057         	movff	vfpfcnvrt@f,efgtoa@f
  1866  001FCE  C09E  F058         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1867  001FD2  C09F  F059         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1868  001FD6  C0A0  F05A         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1869  001FDA  C0A4  F05B         	movff	vfpfcnvrt@c,efgtoa@c
  1870  001FDE  EC2A  F008         	call	_efgtoa	;wreg free
  1871  001FE2  C055  F097         	movff	?_efgtoa,?_vfpfcnvrt
  1872  001FE6  C056  F098         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1873  001FEA  EFD7  F010         	goto	l1008
  1874  001FEE                     l4028:
  1875                           
  1876                           ; BSR set to: 0
  1877                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 950:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1878  001FEE  0EA1               	movlw	low vfpfcnvrt@ct
  1879  001FF0  6E01               	movwf	strncmp@_l^0,c
  1880  001FF2  0E00               	movlw	high vfpfcnvrt@ct
  1881  001FF4  6E02               	movwf	(strncmp@_l+1)^0,c
  1882  001FF6  0E50               	movlw	low STR_13
  1883  001FF8  6E03               	movwf	strncmp@_r^0,c
  1884  001FFA  0E10               	movlw	high STR_13
  1885  001FFC  6E04               	movwf	(strncmp@_r+1)^0,c
  1886  001FFE  0E00               	movlw	0
  1887  002000  6E06               	movwf	(strncmp@n+1)^0,c
  1888  002002  0E02               	movlw	2
  1889  002004  6E05               	movwf	strncmp@n^0,c
  1890  002006  ECC1  F01B         	call	_strncmp	;wreg free
  1891  00200A  5001               	movf	?_strncmp^0,w,c
  1892  00200C  1002               	iorwf	(?_strncmp+1)^0,w,c
  1893  00200E  A4D8               	btfss	status,2,c
  1894  002010  EF0C  F010         	goto	u4551
  1895  002014  EF0E  F010         	goto	u4550
  1896  002018                     u4551:
  1897  002018  EF80  F010         	goto	l4044
  1898  00201C                     u4550:
  1899  00201C                     
  1900                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 952:             c = (*fmt)[1
      +                          ];
  1901  00201C  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1902  002020  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1903  002024  CFDE F05C          	movff	postinc2,??_vfpfcnvrt
  1904  002028  CFDD F05D          	movff	postdec2,??_vfpfcnvrt+1
  1905  00202C  0E01               	movlw	1
  1906  00202E  265C               	addwf	??_vfpfcnvrt^0,f,c
  1907  002030  0E00               	movlw	0
  1908  002032  225D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1909  002034  C05C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1910  002038  C05D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1911  00203C                     	if	0	;tblptru may be non-zero
  1912  00203C                     	endif
  1913  00203C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1914  00203C  0E00               	movlw	low (__mediumconst shr (0+16))
  1915  00203E  6EF8               	movwf	tblptru,c
  1916  002040                     	endif
  1917  002040  0008               	tblrd		*
  1918  002042  CFF5 F0A4          	movff	tablat,vfpfcnvrt@c
  1919  002046  0EBF               	movlw	191
  1920  002048  6E5C               	movwf	??_vfpfcnvrt^0,c
  1921  00204A  0EFF               	movlw	255
  1922  00204C  6E5D               	movwf	(??_vfpfcnvrt+1)^0,c
  1923  00204E  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1924  002052  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1925  002056  CFDE FFF6          	movff	postinc2,tblptrl
  1926  00205A  CFDD FFF7          	movff	postdec2,tblptrh
  1927  00205E                     	if	0	;tblptru may be non-zero
  1928  00205E                     	endif
  1929  00205E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1930  00205E  0E00               	movlw	low (__mediumconst shr (0+16))
  1931  002060  6EF8               	movwf	tblptru,c
  1932  002062                     	endif
  1933  002062  0008               	tblrd		*
  1934  002064  50F5               	movf	tablat,w,c
  1935  002066  6E5E               	movwf	(??_vfpfcnvrt+2)^0,c
  1936  002068  6A5F               	clrf	(??_vfpfcnvrt+3)^0,c
  1937  00206A  505C               	movf	??_vfpfcnvrt^0,w,c
  1938  00206C  265E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1939  00206E  505D               	movf	(??_vfpfcnvrt+1)^0,w,c
  1940  002070  225F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1941  002072  505F               	movf	(??_vfpfcnvrt+3)^0,w,c
  1942  002074  E107               	bnz	u4561
  1943  002076  0E1A               	movlw	26
  1944  002078  5C5E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1945  00207A  B0D8               	btfsc	status,0,c
  1946  00207C  EF42  F010         	goto	u4561
  1947  002080  EF44  F010         	goto	u4560
  1948  002084                     u4561:
  1949  002084  EF5E  F010         	goto	l4038
  1950  002088                     u4560:
  1951  002088                     
  1952                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 954:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  1953  002088  C09B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1954  00208C  C09C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1955  002090  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  1956  002094  0E04               	movlw	4
  1957  002096  26DE               	addwf	postinc2,f,c
  1958  002098  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  1959  00209C  0E00               	movlw	0
  1960  00209E  22DD               	addwfc	postdec2,f,c
  1961  0020A0  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1962  0020A4  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1963  0020A8  CFDE F09D          	movff	postinc2,vfpfcnvrt@f
  1964  0020AC  CFDE F09E          	movff	postinc2,vfpfcnvrt@f+1
  1965  0020B0  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+2
  1966  0020B4  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+3
  1967                           
  1968                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 955:             } else {
  1969  0020B8  EF76  F010         	goto	l1013
  1970  0020BC                     l4038:
  1971                           
  1972                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 956:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1973  0020BC  C09B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1974  0020C0  C09C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1975  0020C4  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  1976  0020C8  0E04               	movlw	4
  1977  0020CA  26DE               	addwf	postinc2,f,c
  1978  0020CC  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  1979  0020D0  0E00               	movlw	0
  1980  0020D2  22DD               	addwfc	postdec2,f,c
  1981  0020D4  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1982  0020D8  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1983  0020DC  CFDE F09D          	movff	postinc2,vfpfcnvrt@f
  1984  0020E0  CFDE F09E          	movff	postinc2,vfpfcnvrt@f+1
  1985  0020E4  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+2
  1986  0020E8  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+3
  1987  0020EC                     l1013:
  1988                           
  1989                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 958:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  1990  0020EC  0E02               	movlw	2
  1991  0020EE  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1992  0020F2  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1993  0020F6  26DE               	addwf	postinc2,f,c
  1994  0020F8  0E00               	movlw	0
  1995  0020FA  22DD               	addwfc	postdec2,f,c
  1996  0020FC  EFE1  F00F         	goto	l4024
  1997  002100                     l4044:
  1998                           
  1999                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
  2000  002100  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2001  002104  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2002  002108  CFDE FFF6          	movff	postinc2,tblptrl
  2003  00210C  CFDD FFF7          	movff	postdec2,tblptrh
  2004  002110                     	if	0	;tblptru may be non-zero
  2005  002110                     	endif
  2006  002110                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2007  002110  0E00               	movlw	low (__mediumconst shr (0+16))
  2008  002112  6EF8               	movwf	tblptru,c
  2009  002114                     	endif
  2010  002114  0008               	tblrd		*
  2011  002116  50F5               	movf	tablat,w,c
  2012  002118  0A25               	xorlw	37
  2013  00211A  A4D8               	btfss	status,2,c
  2014  00211C  EF92  F010         	goto	u4571
  2015  002120  EF94  F010         	goto	u4570
  2016  002124                     u4571:
  2017  002124  EFAC  F010         	goto	l4054
  2018  002128                     u4570:
  2019  002128                     
  2020                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
  2021  002128  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2022  00212C  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2023  002130  2ADE               	incf	postinc2,f,c
  2024  002132  0E00               	movlw	0
  2025  002134  22DD               	addwfc	postdec2,f,c
  2026  002136                     
  2027                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
  2028  002136  0E00               	movlw	0
  2029  002138  6E02               	movwf	(fputc@c+1)^0,c
  2030  00213A  0E25               	movlw	37
  2031  00213C  6E01               	movwf	fputc@c^0,c
  2032  00213E  C097  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2033  002142  C098  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2034  002146  EC32  F01C         	call	_fputc	;wreg free
  2035  00214A                     l4050:
  2036                           
  2037                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1375:             return 1;
  2038  00214A  0E00               	movlw	0
  2039  00214C  0100               	movlb	0	; () banked
  2040  00214E  6F98               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2041  002150  0E01               	movlw	1
  2042  002152  6F97               	movwf	?_vfpfcnvrt& (0+255),b
  2043  002154  EFD7  F010         	goto	l1008
  2044  002158                     l4054:
  2045                           
  2046                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
  2047  002158  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2048  00215C  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2049  002160  2ADE               	incf	postinc2,f,c
  2050  002162  0E00               	movlw	0
  2051  002164  22DD               	addwfc	postdec2,f,c
  2052  002166                     
  2053                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1380:         return 0;
  2054  002166  0E00               	movlw	0
  2055  002168  0100               	movlb	0	; () banked
  2056  00216A  6F98               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2057  00216C  0E00               	movlw	0
  2058  00216E  6F97               	movwf	?_vfpfcnvrt& (0+255),b
  2059  002170  EFD7  F010         	goto	l1008
  2060  002174                     l4060:
  2061                           
  2062                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
  2063  002174  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2064  002178  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2065  00217C  CFDE FFF6          	movff	postinc2,tblptrl
  2066  002180  CFDD FFF7          	movff	postdec2,tblptrh
  2067  002184                     	if	0	;tblptru may be non-zero
  2068  002184                     	endif
  2069  002184                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2070  002184  0E00               	movlw	low (__mediumconst shr (0+16))
  2071  002186  6EF8               	movwf	tblptru,c
  2072  002188                     	endif
  2073  002188  0008               	tblrd		*
  2074  00218A  50F5               	movf	tablat,w,c
  2075  00218C  6E01               	movwf	fputc@c^0,c
  2076  00218E  6A02               	clrf	(fputc@c+1)^0,c
  2077  002190  C097  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2078  002194  C098  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2079  002198  EC32  F01C         	call	_fputc	;wreg free
  2080  00219C                     
  2081                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  2082  00219C  C099  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2083  0021A0  C09A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2084  0021A4  2ADE               	incf	postinc2,f,c
  2085  0021A6  0E00               	movlw	0
  2086  0021A8  22DD               	addwfc	postdec2,f,c
  2087  0021AA  EFA5  F010         	goto	l4050
  2088  0021AE                     l1008:
  2089  0021AE  0012               	return		;funcret
  2090  0021B0                     __end_of_vfpfcnvrt:
  2091                           	callstack 0
  2092                           
  2093 ;; *************** function _strncmp *****************
  2094 ;; Defined at:
  2095 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strncmp.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2098 ;;		 -> vfpfcnvrt@ct(3), 
  2099 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2100 ;;		 -> STR_15(3), 
  2101 ;;  n               2    4[COMRAM] unsigned int 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2104 ;;		 -> STR_15(3), 
  2105 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2106 ;;		 -> vfpfcnvrt@ct(3), 
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  2    0[COMRAM] int 
  2109 ;; Registers used:
  2110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2116 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2117 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2118 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2119 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2120 ;;Total ram usage:       11 bytes
  2121 ;; Hardware stack levels used: 1
  2122 ;; This function calls:
  2123 ;;		Nothing
  2124 ;; This function is called by:
  2125 ;;		_vfpfcnvrt
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           	psect	text5
  2130  003782                     __ptext5:
  2131                           	callstack 0
  2132  003782                     _strncmp:
  2133                           	callstack 26
  2134  003782  C001  F008         	movff	strncmp@_l,strncmp@l
  2135  003786  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2136  00378A  C003  F00A         	movff	strncmp@_r,strncmp@r
  2137  00378E  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2138  003792  0605               	decf	strncmp@n^0,f,c
  2139  003794  A0D8               	btfss	status,0,c
  2140  003796  0606               	decf	(strncmp@n+1)^0,f,c
  2141  003798  2805               	incf	strncmp@n^0,w,c
  2142  00379A  E106               	bnz	u4401
  2143  00379C  2806               	incf	(strncmp@n+1)^0,w,c
  2144  00379E  A4D8               	btfss	status,2,c
  2145  0037A0  EFD4  F01B         	goto	u4401
  2146  0037A4  EFD6  F01B         	goto	u4400
  2147  0037A8                     u4401:
  2148  0037A8  EFE3  F01B         	goto	l3936
  2149  0037AC                     u4400:
  2150  0037AC  0E00               	movlw	0
  2151  0037AE  6E02               	movwf	(?_strncmp+1)^0,c
  2152  0037B0  0E00               	movlw	0
  2153  0037B2  6E01               	movwf	?_strncmp^0,c
  2154  0037B4  EF31  F01C         	goto	l1128
  2155  0037B8                     l3934:
  2156  0037B8  4A08               	infsnz	strncmp@l^0,f,c
  2157  0037BA  2A09               	incf	(strncmp@l+1)^0,f,c
  2158  0037BC  4A0A               	infsnz	strncmp@r^0,f,c
  2159  0037BE  2A0B               	incf	(strncmp@r+1)^0,f,c
  2160  0037C0  0605               	decf	strncmp@n^0,f,c
  2161  0037C2  A0D8               	btfss	status,0,c
  2162  0037C4  0606               	decf	(strncmp@n+1)^0,f,c
  2163  0037C6                     l3936:
  2164  0037C6  C008  FFD9         	movff	strncmp@l,fsr2l
  2165  0037CA  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2166  0037CE  50DF               	movf	indf2,w,c
  2167  0037D0  B4D8               	btfsc	status,2,c
  2168  0037D2  EFED  F01B         	goto	u4411
  2169  0037D6  EFEF  F01B         	goto	u4410
  2170  0037DA                     u4411:
  2171  0037DA  EF1E  F01C         	goto	l3944
  2172  0037DE                     u4410:
  2173  0037DE  C00A  FFF6         	movff	strncmp@r,tblptrl
  2174  0037E2  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2175  0037E6                     	if	0	;tblptru may be non-zero
  2176  0037E6                     	endif
  2177  0037E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2178  0037E6  0E00               	movlw	low (__mediumconst shr (0+16))
  2179  0037E8  6EF8               	movwf	tblptru,c
  2180  0037EA                     	endif
  2181  0037EA  0008               	tblrd		*
  2182  0037EC  50F5               	movf	tablat,w,c
  2183  0037EE  0900               	iorlw	0
  2184  0037F0  B4D8               	btfsc	status,2,c
  2185  0037F2  EFFD  F01B         	goto	u4421
  2186  0037F6  EFFF  F01B         	goto	u4420
  2187  0037FA                     u4421:
  2188  0037FA  EF1E  F01C         	goto	l3944
  2189  0037FE                     u4420:
  2190  0037FE  5005               	movf	strncmp@n^0,w,c
  2191  003800  1006               	iorwf	(strncmp@n+1)^0,w,c
  2192  003802  B4D8               	btfsc	status,2,c
  2193  003804  EF06  F01C         	goto	u4431
  2194  003808  EF08  F01C         	goto	u4430
  2195  00380C                     u4431:
  2196  00380C  EF1E  F01C         	goto	l3944
  2197  003810                     u4430:
  2198  003810  C008  FFD9         	movff	strncmp@l,fsr2l
  2199  003814  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2200  003818  50DF               	movf	indf2,w,c
  2201  00381A  6E07               	movwf	??_strncmp^0,c
  2202  00381C  C00A  FFF6         	movff	strncmp@r,tblptrl
  2203  003820  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2204  003824                     	if	0	;tblptru may be non-zero
  2205  003824                     	endif
  2206  003824                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2207  003824  0E00               	movlw	low (__mediumconst shr (0+16))
  2208  003826  6EF8               	movwf	tblptru,c
  2209  003828                     	endif
  2210  003828  0008               	tblrd		*
  2211  00382A  50F5               	movf	tablat,w,c
  2212  00382C  1807               	xorwf	??_strncmp^0,w,c
  2213  00382E  B4D8               	btfsc	status,2,c
  2214  003830  EF1C  F01C         	goto	u4441
  2215  003834  EF1E  F01C         	goto	u4440
  2216  003838                     u4441:
  2217  003838  EFDC  F01B         	goto	l3934
  2218  00383C                     u4440:
  2219  00383C                     l3944:
  2220  00383C  C008  FFD9         	movff	strncmp@l,fsr2l
  2221  003840  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2222  003844  50DF               	movf	indf2,w,c
  2223  003846  6E07               	movwf	??_strncmp^0,c
  2224  003848  C00A  FFF6         	movff	strncmp@r,tblptrl
  2225  00384C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2226  003850                     	if	0	;tblptru may be non-zero
  2227  003850                     	endif
  2228  003850                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2229  003850  0E00               	movlw	low (__mediumconst shr (0+16))
  2230  003852  6EF8               	movwf	tblptru,c
  2231  003854                     	endif
  2232  003854  0008               	tblrd		*
  2233  003856  50F5               	movf	tablat,w,c
  2234  003858  5C07               	subwf	??_strncmp^0,w,c
  2235  00385A  6E01               	movwf	?_strncmp^0,c
  2236  00385C  6A02               	clrf	(?_strncmp+1)^0,c
  2237  00385E  A0D8               	btfss	status,0,c
  2238  003860  0602               	decf	(?_strncmp+1)^0,f,c
  2239  003862                     l1128:
  2240  003862  0012               	return		;funcret
  2241  003864                     __end_of_strncmp:
  2242                           	callstack 0
  2243                           
  2244 ;; *************** function _efgtoa *****************
  2245 ;; Defined at:
  2246 ;;		line 332 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;  fp              2   84[COMRAM] PTR struct _IO_FILE
  2249 ;;		 -> sprintf@f(11), 
  2250 ;;  f               4   86[COMRAM] PTR struct _IO_FILE
  2251 ;;  c               1   90[COMRAM] unsigned char 
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;  u               4   51[BANK0 ] unsigned char 
  2254 ;;  g               4   43[BANK0 ] unsigned char 
  2255 ;;  l               4   37[BANK0 ] unsigned char 
  2256 ;;  h               4   33[BANK0 ] unsigned char 
  2257 ;;  ou              4   19[BANK0 ] unsigned char 
  2258 ;;  n               2   49[BANK0 ] int 
  2259 ;;  e               2   47[BANK0 ] int 
  2260 ;;  i               2   41[BANK0 ] int 
  2261 ;;  w               2   29[BANK0 ] int 
  2262 ;;  p               2   27[BANK0 ] int 
  2263 ;;  sign            2   25[BANK0 ] int 
  2264 ;;  d               2   23[BANK0 ] int 
  2265 ;;  m               2   17[BANK0 ] int 
  2266 ;;  ne              2   15[BANK0 ] int 
  2267 ;;  pp              2   13[BANK0 ] int 
  2268 ;;  t               2   11[BANK0 ] int 
  2269 ;;  mode            1   32[BANK0 ] unsigned char 
  2270 ;;  nmode           1   31[BANK0 ] unsigned char 
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  2   84[COMRAM] int 
  2273 ;; Registers used:
  2274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2280 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2281 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2282 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2283 ;;      Totals:         7      55       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2284 ;;Total ram usage:       62 bytes
  2285 ;; Hardware stack levels used: 1
  2286 ;; Hardware stack levels required when called: 4
  2287 ;; This function calls:
  2288 ;;		___awdiv
  2289 ;;		___awmod
  2290 ;;		___fladd
  2291 ;;		___fldiv
  2292 ;;		___fleq
  2293 ;;		___flge
  2294 ;;		___flmul
  2295 ;;		___flneg
  2296 ;;		___flsub
  2297 ;;		___fltol
  2298 ;;		___fpclassifyf
  2299 ;;		_floorf
  2300 ;;		_isupper
  2301 ;;		_pad
  2302 ;;		_strcpy
  2303 ;;		_tolower
  2304 ;; This function is called by:
  2305 ;;		_vfpfcnvrt
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           	psect	text6
  2310  001054                     __ptext6:
  2311                           	callstack 0
  2312  001054                     _efgtoa:
  2313                           	callstack 22
  2314  001054                     
  2315                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 332: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 333
      +                          : {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 334:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 335:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 336:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 3
      +                          39:     sign = 0;
  2316  001054  0E00               	movlw	0
  2317  001056  0100               	movlb	0	; () banked
  2318  001058  6F7A               	movwf	(efgtoa@sign+1)& (0+255),b
  2319  00105A  0E00               	movlw	0
  2320  00105C  6F79               	movwf	efgtoa@sign& (0+255),b
  2321  00105E                     
  2322                           ; BSR set to: 0
  2323                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 340:     g = f;
  2324  00105E  C057  F08B         	movff	efgtoa@f,efgtoa@g
  2325  001062  C058  F08C         	movff	efgtoa@f+1,efgtoa@g+1
  2326  001066  C059  F08D         	movff	efgtoa@f+2,efgtoa@g+2
  2327  00106A  C05A  F08E         	movff	efgtoa@f+3,efgtoa@g+3
  2328  00106E                     
  2329                           ; BSR set to: 0
  2330                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 341:     if (g < 0.0) {
  2331  00106E  BF8E               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2332  001070  EF3E  F008         	goto	u3880
  2333  001074  EF3C  F008         	goto	u3881
  2334  001078                     u3881:
  2335  001078  EF54  F008         	goto	l3600
  2336  00107C                     u3880:
  2337  00107C                     
  2338                           ; BSR set to: 0
  2339                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 342:         sign = 1;
  2340  00107C  0E00               	movlw	0
  2341  00107E  6F7A               	movwf	(efgtoa@sign+1)& (0+255),b
  2342  001080  0E01               	movlw	1
  2343  001082  6F79               	movwf	efgtoa@sign& (0+255),b
  2344  001084                     
  2345                           ; BSR set to: 0
  2346                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 343:         g = -g;
  2347  001084  C08B  F001         	movff	efgtoa@g,___flneg@f1
  2348  001088  C08C  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2349  00108C  C08D  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2350  001090  C08E  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2351  001094  ECDF  F020         	call	___flneg	;wreg free
  2352  001098  C001  F08B         	movff	?___flneg,efgtoa@g
  2353  00109C  C002  F08C         	movff	?___flneg+1,efgtoa@g+1
  2354  0010A0  C003  F08D         	movff	?___flneg+2,efgtoa@g+2
  2355  0010A4  C004  F08E         	movff	?___flneg+3,efgtoa@g+3
  2356  0010A8                     l3600:
  2357                           
  2358                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 347:     n = 0;
  2359  0010A8  0E00               	movlw	0
  2360  0010AA  0100               	movlb	0	; () banked
  2361  0010AC  6F92               	movwf	(efgtoa@n+1)& (0+255),b
  2362  0010AE  0E00               	movlw	0
  2363  0010B0  6F91               	movwf	efgtoa@n& (0+255),b
  2364  0010B2                     
  2365                           ; BSR set to: 0
  2366                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 348:     w = width;
  2367  0010B2  C0ED  F07D         	movff	_width,efgtoa@w
  2368  0010B6  C0EE  F07E         	movff	_width+1,efgtoa@w+1
  2369  0010BA                     
  2370                           ; BSR set to: 0
  2371                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 349:     if (sign || (flags &
      +                           (1 << 2))) {
  2372  0010BA  5179               	movf	efgtoa@sign& (0+255),w,b
  2373  0010BC  117A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2374  0010BE  A4D8               	btfss	status,2,c
  2375  0010C0  EF64  F008         	goto	u3891
  2376  0010C4  EF66  F008         	goto	u3890
  2377  0010C8                     u3891:
  2378  0010C8  EF6D  F008         	goto	l3608
  2379  0010CC                     u3890:
  2380  0010CC                     
  2381                           ; BSR set to: 0
  2382  0010CC  A5F1               	btfss	_flags& (0+255),2,b
  2383  0010CE  EF6B  F008         	goto	u3901
  2384  0010D2  EF6D  F008         	goto	u3900
  2385  0010D6                     u3901:
  2386  0010D6  EF87  F008         	goto	l3620
  2387  0010DA                     u3900:
  2388  0010DA                     l3608:
  2389                           
  2390                           ; BSR set to: 0
  2391                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 350:         dbuf[n] = sign ?
      +                           '-' : '+';
  2392  0010DA  5179               	movf	efgtoa@sign& (0+255),w,b
  2393  0010DC  117A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2394  0010DE  A4D8               	btfss	status,2,c
  2395  0010E0  EF74  F008         	goto	u3911
  2396  0010E4  EF76  F008         	goto	u3910
  2397  0010E8                     u3911:
  2398  0010E8  EF7C  F008         	goto	l3612
  2399  0010EC                     u3910:
  2400  0010EC                     
  2401                           ; BSR set to: 0
  2402  0010EC  0E00               	movlw	0
  2403  0010EE  6F66               	movwf	(_efgtoa$1435+1)& (0+255),b
  2404  0010F0  0E2B               	movlw	43
  2405  0010F2  6F65               	movwf	_efgtoa$1435& (0+255),b
  2406  0010F4  EF80  F008         	goto	l3614
  2407  0010F8                     l3612:
  2408                           
  2409                           ; BSR set to: 0
  2410  0010F8  0E00               	movlw	0
  2411  0010FA  6F66               	movwf	(_efgtoa$1435+1)& (0+255),b
  2412  0010FC  0E2D               	movlw	45
  2413  0010FE  6F65               	movwf	_efgtoa$1435& (0+255),b
  2414  001100                     l3614:
  2415                           
  2416                           ; BSR set to: 0
  2417  001100  C065  F100         	movff	_efgtoa$1435,_dbuf
  2418  001104                     
  2419                           ; BSR set to: 0
  2420                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 351:         ++n;
  2421  001104  4B91               	infsnz	efgtoa@n& (0+255),f,b
  2422  001106  2B92               	incf	(efgtoa@n+1)& (0+255),f,b
  2423  001108                     
  2424                           ; BSR set to: 0
  2425                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 352:         --w;
  2426  001108  077D               	decf	efgtoa@w& (0+255),f,b
  2427  00110A  A0D8               	btfss	status,0,c
  2428  00110C  077E               	decf	(efgtoa@w+1)& (0+255),f,b
  2429  00110E                     l3620:
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 356:     if (( __fpclassifyf(
      +                          g) == 1 )) {
  2433  00110E  C08B  F001         	movff	efgtoa@g,___fpclassifyf@x
  2434  001112  C08C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2435  001116  C08D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2436  00111A  C08E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2437  00111E  EC42  F01B         	call	___fpclassifyf	;wreg free
  2438  001122  0401               	decf	?___fpclassifyf^0,w,c
  2439  001124  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2440  001126  A4D8               	btfss	status,2,c
  2441  001128  EF98  F008         	goto	u3921
  2442  00112C  EF9A  F008         	goto	u3920
  2443  001130                     u3921:
  2444  001130  EFE4  F008         	goto	l3638
  2445  001134                     u3920:
  2446  001134  0EBF               	movlw	191
  2447  001136  0100               	movlb	0	; () banked
  2448  001138  6F60               	movwf	??_efgtoa& (0+255),b
  2449  00113A  0EFF               	movlw	255
  2450  00113C  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  2451  00113E  505B               	movf	efgtoa@c^0,w,c
  2452  001140  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  2453  001142  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  2454  001144  5160               	movf	??_efgtoa& (0+255),w,b
  2455  001146  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  2456  001148  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  2457  00114A  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2458  00114C  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  2459  00114E  E107               	bnz	u3931
  2460  001150  0E1A               	movlw	26
  2461  001152  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  2462  001154  B0D8               	btfsc	status,0,c
  2463  001156  EFAF  F008         	goto	u3931
  2464  00115A  EFB1  F008         	goto	u3930
  2465  00115E                     u3931:
  2466  00115E  EFBF  F008         	goto	l3630
  2467  001162                     u3930:
  2468  001162                     
  2469                           ; BSR set to: 0
  2470                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 358:             strcpy(&dbuf
      +                          [n], "INF");
  2471  001162  0E00               	movlw	low _dbuf
  2472  001164  2591               	addwf	efgtoa@n& (0+255),w,b
  2473  001166  6E01               	movwf	strcpy@dest^0,c
  2474  001168  0E01               	movlw	high _dbuf
  2475  00116A  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2476  00116C  6E02               	movwf	(strcpy@dest+1)^0,c
  2477  00116E  0E40               	movlw	low STR_5
  2478  001170  6E03               	movwf	strcpy@src^0,c
  2479  001172  0E10               	movlw	high STR_5
  2480  001174  6E04               	movwf	(strcpy@src+1)^0,c
  2481  001176  ECDA  F01F         	call	_strcpy	;wreg free
  2482                           
  2483                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 359:         } else {
  2484  00117A  EFCB  F008         	goto	l3632
  2485  00117E                     l3630:
  2486                           
  2487                           ; BSR set to: 0
  2488                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 360:             strcpy(&dbuf
      +                          [n], "inf");
  2489  00117E  0E00               	movlw	low _dbuf
  2490  001180  2591               	addwf	efgtoa@n& (0+255),w,b
  2491  001182  6E01               	movwf	strcpy@dest^0,c
  2492  001184  0E01               	movlw	high _dbuf
  2493  001186  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2494  001188  6E02               	movwf	(strcpy@dest+1)^0,c
  2495  00118A  0E48               	movlw	low STR_6
  2496  00118C  6E03               	movwf	strcpy@src^0,c
  2497  00118E  0E10               	movlw	high STR_6
  2498  001190  6E04               	movwf	(strcpy@src+1)^0,c
  2499  001192  ECDA  F01F         	call	_strcpy	;wreg free
  2500  001196                     l3632:
  2501                           
  2502                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 362:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  2503  001196  0100               	movlb	0	; () banked
  2504  001198  0EFD               	movlw	253
  2505  00119A  277D               	addwf	efgtoa@w& (0+255),f,b
  2506  00119C  0EFF               	movlw	255
  2507  00119E  237E               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2508  0011A0                     l3634:
  2509                           
  2510                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 363:         return pad(fp, &
      +                          dbuf[0], w);
  2511  0011A0  C055  F011         	movff	efgtoa@fp,pad@fp
  2512  0011A4  C056  F012         	movff	efgtoa@fp+1,pad@fp+1
  2513  0011A8  0E00               	movlw	low _dbuf
  2514  0011AA  6E13               	movwf	pad@buf^0,c
  2515  0011AC  0E01               	movlw	high _dbuf
  2516  0011AE  6E14               	movwf	(pad@buf+1)^0,c
  2517  0011B0  C07D  F015         	movff	efgtoa@w,pad@p
  2518  0011B4  C07E  F016         	movff	efgtoa@w+1,pad@p+1
  2519  0011B8  EC97  F01C         	call	_pad	;wreg free
  2520  0011BC  C011  F055         	movff	?_pad,?_efgtoa
  2521  0011C0  C012  F056         	movff	?_pad+1,?_efgtoa+1
  2522  0011C4  EF2E  F00E         	goto	l914
  2523  0011C8                     l3638:
  2524                           
  2525                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 365:     if (( __fpclassifyf(
      +                          g) == 0 )) {
  2526  0011C8  C08B  F001         	movff	efgtoa@g,___fpclassifyf@x
  2527  0011CC  C08C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2528  0011D0  C08D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2529  0011D4  C08E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2530  0011D8  EC42  F01B         	call	___fpclassifyf	;wreg free
  2531  0011DC  5001               	movf	?___fpclassifyf^0,w,c
  2532  0011DE  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2533  0011E0  A4D8               	btfss	status,2,c
  2534  0011E2  EFF5  F008         	goto	u3941
  2535  0011E6  EFF7  F008         	goto	u3940
  2536  0011EA                     u3941:
  2537  0011EA  EF2A  F009         	goto	l3656
  2538  0011EE                     u3940:
  2539  0011EE  0EBF               	movlw	191
  2540  0011F0  0100               	movlb	0	; () banked
  2541  0011F2  6F60               	movwf	??_efgtoa& (0+255),b
  2542  0011F4  0EFF               	movlw	255
  2543  0011F6  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  2544  0011F8  505B               	movf	efgtoa@c^0,w,c
  2545  0011FA  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  2546  0011FC  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  2547  0011FE  5160               	movf	??_efgtoa& (0+255),w,b
  2548  001200  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  2549  001202  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  2550  001204  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2551  001206  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  2552  001208  E107               	bnz	u3951
  2553  00120A  0E1A               	movlw	26
  2554  00120C  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  2555  00120E  B0D8               	btfsc	status,0,c
  2556  001210  EF0C  F009         	goto	u3951
  2557  001214  EF0E  F009         	goto	u3950
  2558  001218                     u3951:
  2559  001218  EF1C  F009         	goto	l3648
  2560  00121C                     u3950:
  2561  00121C                     
  2562                           ; BSR set to: 0
  2563                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 367:             strcpy(&dbuf
      +                          [n], "NAN");
  2564  00121C  0E00               	movlw	low _dbuf
  2565  00121E  2591               	addwf	efgtoa@n& (0+255),w,b
  2566  001220  6E01               	movwf	strcpy@dest^0,c
  2567  001222  0E01               	movlw	high _dbuf
  2568  001224  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2569  001226  6E02               	movwf	(strcpy@dest+1)^0,c
  2570  001228  0E44               	movlw	low STR_9
  2571  00122A  6E03               	movwf	strcpy@src^0,c
  2572  00122C  0E10               	movlw	high STR_9
  2573  00122E  6E04               	movwf	(strcpy@src+1)^0,c
  2574  001230  ECDA  F01F         	call	_strcpy	;wreg free
  2575                           
  2576                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 368:         } else {
  2577  001234  EFCB  F008         	goto	l3632
  2578  001238                     l3648:
  2579                           
  2580                           ; BSR set to: 0
  2581                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 369:             strcpy(&dbuf
      +                          [n], "nan");
  2582  001238  0E00               	movlw	low _dbuf
  2583  00123A  2591               	addwf	efgtoa@n& (0+255),w,b
  2584  00123C  6E01               	movwf	strcpy@dest^0,c
  2585  00123E  0E01               	movlw	high _dbuf
  2586  001240  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2587  001242  6E02               	movwf	(strcpy@dest+1)^0,c
  2588  001244  0E4C               	movlw	low STR_10
  2589  001246  6E03               	movwf	strcpy@src^0,c
  2590  001248  0E10               	movlw	high STR_10
  2591  00124A  6E04               	movwf	(strcpy@src+1)^0,c
  2592  00124C  ECDA  F01F         	call	_strcpy	;wreg free
  2593  001250  EFCB  F008         	goto	l3632
  2594  001254                     l3656:
  2595                           
  2596                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 376:     u = 1.0;
  2597  001254  0E00               	movlw	0
  2598  001256  0100               	movlb	0	; () banked
  2599  001258  6F93               	movwf	efgtoa@u& (0+255),b
  2600  00125A  0E00               	movlw	0
  2601  00125C  6F94               	movwf	(efgtoa@u+1)& (0+255),b
  2602  00125E  0E80               	movlw	128
  2603  001260  6F95               	movwf	(efgtoa@u+2)& (0+255),b
  2604  001262  0E3F               	movlw	63
  2605  001264  6F96               	movwf	(efgtoa@u+3)& (0+255),b
  2606                           
  2607                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 377:     e = 0;
  2608  001266  0E00               	movlw	0
  2609  001268  6F90               	movwf	(efgtoa@e+1)& (0+255),b
  2610  00126A  0E00               	movlw	0
  2611  00126C  6F8F               	movwf	efgtoa@e& (0+255),b
  2612  00126E                     
  2613                           ; BSR set to: 0
  2614                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 378:     if (!(g == 0.0)) {
  2615  00126E  C08B  F001         	movff	efgtoa@g,___fleq@ff1
  2616  001272  C08C  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2617  001276  C08D  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2618  00127A  C08E  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2619  00127E  0E00               	movlw	0
  2620  001280  6E05               	movwf	___fleq@ff2^0,c
  2621  001282  0E00               	movlw	0
  2622  001284  6E06               	movwf	(___fleq@ff2+1)^0,c
  2623  001286  0E00               	movlw	0
  2624  001288  6E07               	movwf	(___fleq@ff2+2)^0,c
  2625  00128A  0E00               	movlw	0
  2626  00128C  6E08               	movwf	(___fleq@ff2+3)^0,c
  2627  00128E  ECB4  F01D         	call	___fleq	;wreg free
  2628  001292  B0D8               	btfsc	status,0,c
  2629  001294  EF4E  F009         	goto	u3961
  2630  001298  EF50  F009         	goto	u3960
  2631  00129C                     u3961:
  2632  00129C  EFD3  F009         	goto	l3674
  2633  0012A0                     u3960:
  2634  0012A0  EF6F  F009         	goto	l3666
  2635  0012A4                     l3662:
  2636                           
  2637                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 380:             u = u*10.0;
  2638  0012A4  C093  F00F         	movff	efgtoa@u,___flmul@b
  2639  0012A8  C094  F010         	movff	efgtoa@u+1,___flmul@b+1
  2640  0012AC  C095  F011         	movff	efgtoa@u+2,___flmul@b+2
  2641  0012B0  C096  F012         	movff	efgtoa@u+3,___flmul@b+3
  2642  0012B4  0E00               	movlw	0
  2643  0012B6  6E13               	movwf	___flmul@a^0,c
  2644  0012B8  0E00               	movlw	0
  2645  0012BA  6E14               	movwf	(___flmul@a+1)^0,c
  2646  0012BC  0E20               	movlw	32
  2647  0012BE  6E15               	movwf	(___flmul@a+2)^0,c
  2648  0012C0  0E41               	movlw	65
  2649  0012C2  6E16               	movwf	(___flmul@a+3)^0,c
  2650  0012C4  EC38  F013         	call	___flmul	;wreg free
  2651  0012C8  C00F  F093         	movff	?___flmul,efgtoa@u
  2652  0012CC  C010  F094         	movff	?___flmul+1,efgtoa@u+1
  2653  0012D0  C011  F095         	movff	?___flmul+2,efgtoa@u+2
  2654  0012D4  C012  F096         	movff	?___flmul+3,efgtoa@u+3
  2655  0012D8                     
  2656                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 381:             ++e;
  2657  0012D8  0100               	movlb	0	; () banked
  2658  0012DA  4B8F               	infsnz	efgtoa@e& (0+255),f,b
  2659  0012DC  2B90               	incf	(efgtoa@e+1)& (0+255),f,b
  2660  0012DE                     l3666:
  2661                           
  2662                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 379:         while (!(g < (u*
      +                          10.0))) {
  2663  0012DE  C08B  F028         	movff	efgtoa@g,___flge@ff1
  2664  0012E2  C08C  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2665  0012E6  C08D  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2666  0012EA  C08E  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2667  0012EE  0E00               	movlw	0
  2668  0012F0  6E13               	movwf	___flmul@a^0,c
  2669  0012F2  0E00               	movlw	0
  2670  0012F4  6E14               	movwf	(___flmul@a+1)^0,c
  2671  0012F6  0E20               	movlw	32
  2672  0012F8  6E15               	movwf	(___flmul@a+2)^0,c
  2673  0012FA  0E41               	movlw	65
  2674  0012FC  6E16               	movwf	(___flmul@a+3)^0,c
  2675  0012FE  C093  F00F         	movff	efgtoa@u,___flmul@b
  2676  001302  C094  F010         	movff	efgtoa@u+1,___flmul@b+1
  2677  001306  C095  F011         	movff	efgtoa@u+2,___flmul@b+2
  2678  00130A  C096  F012         	movff	efgtoa@u+3,___flmul@b+3
  2679  00130E  EC38  F013         	call	___flmul	;wreg free
  2680  001312  C00F  F02C         	movff	?___flmul,___flge@ff2
  2681  001316  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  2682  00131A  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  2683  00131E  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  2684  001322  ECC0  F01A         	call	___flge	;wreg free
  2685  001326  B0D8               	btfsc	status,0,c
  2686  001328  EF98  F009         	goto	u3971
  2687  00132C  EF9A  F009         	goto	u3970
  2688  001330                     u3971:
  2689  001330  EF52  F009         	goto	l3662
  2690  001334                     u3970:
  2691  001334  EFBA  F009         	goto	l3672
  2692  001338                     l3668:
  2693                           
  2694                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 384:             u = u/10.0;
  2695  001338  C093  F028         	movff	efgtoa@u,___fldiv@b
  2696  00133C  C094  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2697  001340  C095  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2698  001344  C096  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2699  001348  0E00               	movlw	0
  2700  00134A  6E2C               	movwf	___fldiv@a^0,c
  2701  00134C  0E00               	movlw	0
  2702  00134E  6E2D               	movwf	(___fldiv@a+1)^0,c
  2703  001350  0E20               	movlw	32
  2704  001352  6E2E               	movwf	(___fldiv@a+2)^0,c
  2705  001354  0E41               	movlw	65
  2706  001356  6E2F               	movwf	(___fldiv@a+3)^0,c
  2707  001358  EC4D  F015         	call	___fldiv	;wreg free
  2708  00135C  C028  F093         	movff	?___fldiv,efgtoa@u
  2709  001360  C029  F094         	movff	?___fldiv+1,efgtoa@u+1
  2710  001364  C02A  F095         	movff	?___fldiv+2,efgtoa@u+2
  2711  001368  C02B  F096         	movff	?___fldiv+3,efgtoa@u+3
  2712  00136C                     
  2713                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 385:             --e;
  2714  00136C  0100               	movlb	0	; () banked
  2715  00136E  078F               	decf	efgtoa@e& (0+255),f,b
  2716  001370  A0D8               	btfss	status,0,c
  2717  001372  0790               	decf	(efgtoa@e+1)& (0+255),f,b
  2718  001374                     l3672:
  2719                           
  2720                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 383:         while (g < u) {
  2721  001374  C08B  F028         	movff	efgtoa@g,___flge@ff1
  2722  001378  C08C  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2723  00137C  C08D  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2724  001380  C08E  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2725  001384  C093  F02C         	movff	efgtoa@u,___flge@ff2
  2726  001388  C094  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  2727  00138C  C095  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  2728  001390  C096  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  2729  001394  ECC0  F01A         	call	___flge	;wreg free
  2730  001398  A0D8               	btfss	status,0,c
  2731  00139A  EFD1  F009         	goto	u3981
  2732  00139E  EFD3  F009         	goto	u3980
  2733  0013A2                     u3981:
  2734  0013A2  EF9C  F009         	goto	l3668
  2735  0013A6                     u3980:
  2736  0013A6                     l3674:
  2737                           
  2738                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 390:     mode = (char)tolower
      +                          ((int)c);
  2739  0013A6  C05B  F007         	movff	efgtoa@c,tolower@c
  2740  0013AA  6A08               	clrf	(tolower@c+1)^0,c
  2741  0013AC  EC5B  F020         	call	_tolower	;wreg free
  2742  0013B0  5007               	movf	?_tolower^0,w,c
  2743  0013B2  0100               	movlb	0	; () banked
  2744  0013B4  6F80               	movwf	efgtoa@mode& (0+255),b
  2745  0013B6                     
  2746                           ; BSR set to: 0
  2747                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 391:     nmode = mode;
  2748  0013B6  C080  F07F         	movff	efgtoa@mode,efgtoa@nmode
  2749  0013BA                     
  2750                           ; BSR set to: 0
  2751                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 392:     if (mode == 'g') {
  2752  0013BA  0E67               	movlw	103
  2753  0013BC  1980               	xorwf	efgtoa@mode& (0+255),w,b
  2754  0013BE  A4D8               	btfss	status,2,c
  2755  0013C0  EFE4  F009         	goto	u3991
  2756  0013C4  EFE6  F009         	goto	u3990
  2757  0013C8                     u3991:
  2758  0013C8  EF0C  F00A         	goto	l3688
  2759  0013CC                     u3990:
  2760  0013CC                     
  2761                           ; BSR set to: 0
  2762                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 393:   if (prec == 0) {
  2763  0013CC  51EF               	movf	_prec& (0+255),w,b
  2764  0013CE  11F0               	iorwf	(_prec+1)& (0+255),w,b
  2765  0013D0  A4D8               	btfss	status,2,c
  2766  0013D2  EFED  F009         	goto	u4001
  2767  0013D6  EFEF  F009         	goto	u4000
  2768  0013DA                     u4001:
  2769  0013DA  EFF3  F009         	goto	l3684
  2770  0013DE                     u4000:
  2771  0013DE                     
  2772                           ; BSR set to: 0
  2773                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 394:    prec = 1;
  2774  0013DE  0E00               	movlw	0
  2775  0013E0  6FF0               	movwf	(_prec+1)& (0+255),b
  2776  0013E2  0E01               	movlw	1
  2777  0013E4  6FEF               	movwf	_prec& (0+255),b
  2778  0013E6                     l3684:
  2779                           
  2780                           ; BSR set to: 0
  2781                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 396:         p = (0 < prec) ?
      +                           prec : 6;
  2782  0013E6  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  2783  0013E8  EF00  F00A         	goto	u4010
  2784  0013EC  51F0               	movf	(_prec+1)& (0+255),w,b
  2785  0013EE  E106               	bnz	u4011
  2786  0013F0  05EF               	decf	_prec& (0+255),w,b
  2787  0013F2  B0D8               	btfsc	status,0,c
  2788  0013F4  EFFE  F009         	goto	u4011
  2789  0013F8  EF00  F00A         	goto	u4010
  2790  0013FC                     u4011:
  2791  0013FC  EF06  F00A         	goto	l930
  2792  001400                     u4010:
  2793  001400                     l3686:
  2794                           
  2795                           ; BSR set to: 0
  2796  001400  0E00               	movlw	0
  2797  001402  6F7C               	movwf	(efgtoa@p+1)& (0+255),b
  2798  001404  0E06               	movlw	6
  2799  001406  6F7B               	movwf	efgtoa@p& (0+255),b
  2800  001408  EF15  F00A         	goto	l3694
  2801  00140C                     l930:
  2802                           
  2803                           ; BSR set to: 0
  2804  00140C  C0EF  F07B         	movff	_prec,efgtoa@p
  2805  001410  C0F0  F07C         	movff	_prec+1,efgtoa@p+1
  2806  001414  EF15  F00A         	goto	l3694
  2807  001418                     l3688:
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 398:         p = (prec < 0) ?
      +                           6 : prec;
  2811  001418  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  2812  00141A  EF11  F00A         	goto	u4021
  2813  00141E  EF13  F00A         	goto	u4020
  2814  001422                     u4021:
  2815  001422  EF00  F00A         	goto	l3686
  2816  001426                     u4020:
  2817  001426  EF06  F00A         	goto	l930
  2818  00142A                     l3694:
  2819                           
  2820                           ; BSR set to: 0
  2821                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 402:     if (mode == 'g') {
  2822  00142A  0E67               	movlw	103
  2823  00142C  1980               	xorwf	efgtoa@mode& (0+255),w,b
  2824  00142E  A4D8               	btfss	status,2,c
  2825  001430  EF1C  F00A         	goto	u4031
  2826  001434  EF1E  F00A         	goto	u4030
  2827  001438                     u4031:
  2828  001438  EF4D  F00A         	goto	l3704
  2829  00143C                     u4030:
  2830  00143C                     
  2831                           ; BSR set to: 0
  2832                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 403:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  2833  00143C  AF90               	btfss	(efgtoa@e+1)& (0+255),7,b
  2834  00143E  EF2C  F00A         	goto	u4040
  2835  001442  0EFC               	movlw	252
  2836  001444  5D8F               	subwf	efgtoa@e& (0+255),w,b
  2837  001446  0EFF               	movlw	255
  2838  001448  5990               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2839  00144A  A0D8               	btfss	status,0,c
  2840  00144C  EF2A  F00A         	goto	u4041
  2841  001450  EF2C  F00A         	goto	u4040
  2842  001454                     u4041:
  2843  001454  EF4B  F00A         	goto	l3702
  2844  001458                     u4040:
  2845  001458                     
  2846                           ; BSR set to: 0
  2847  001458  0EFF               	movlw	255
  2848  00145A  6F60               	movwf	??_efgtoa& (0+255),b
  2849  00145C  0EFF               	movlw	255
  2850  00145E  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  2851  001460  C07B  F062         	movff	efgtoa@p,??_efgtoa+2
  2852  001464  C07C  F063         	movff	efgtoa@p+1,??_efgtoa+3
  2853  001468  5160               	movf	??_efgtoa& (0+255),w,b
  2854  00146A  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  2855  00146C  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  2856  00146E  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2857  001470  518F               	movf	efgtoa@e& (0+255),w,b
  2858  001472  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  2859  001474  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  2860  001476  0A80               	xorlw	128
  2861  001478  6F64               	movwf	(??_efgtoa+4)& (0+255),b
  2862  00147A  5190               	movf	(efgtoa@e+1)& (0+255),w,b
  2863  00147C  0A80               	xorlw	128
  2864  00147E  5964               	subwfb	(??_efgtoa+4)& (0+255),w,b
  2865  001480  A0D8               	btfss	status,0,c
  2866  001482  EF45  F00A         	goto	u4051
  2867  001486  EF47  F00A         	goto	u4050
  2868  00148A                     u4051:
  2869  00148A  EF4B  F00A         	goto	l3702
  2870  00148E                     u4050:
  2871  00148E                     
  2872                           ; BSR set to: 0
  2873                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 404:             nmode = 'f';
  2874  00148E  0E66               	movlw	102
  2875  001490  6F7F               	movwf	efgtoa@nmode& (0+255),b
  2876                           
  2877                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 405:         } else {
  2878  001492  EF4D  F00A         	goto	l3704
  2879  001496                     l3702:
  2880                           
  2881                           ; BSR set to: 0
  2882                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 406:             nmode = 'e';
  2883  001496  0E65               	movlw	101
  2884  001498  6F7F               	movwf	efgtoa@nmode& (0+255),b
  2885  00149A                     l3704:
  2886                           
  2887                           ; BSR set to: 0
  2888                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 411:     m = p;
  2889  00149A  C07B  F071         	movff	efgtoa@p,efgtoa@m
  2890  00149E  C07C  F072         	movff	efgtoa@p+1,efgtoa@m+1
  2891  0014A2                     
  2892                           ; BSR set to: 0
  2893                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 412:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  2894  0014A2  0E67               	movlw	103
  2895  0014A4  1980               	xorwf	efgtoa@mode& (0+255),w,b
  2896  0014A6  A4D8               	btfss	status,2,c
  2897  0014A8  EF58  F00A         	goto	u4061
  2898  0014AC  EF5A  F00A         	goto	u4060
  2899  0014B0                     u4061:
  2900  0014B0  EF6A  F00A         	goto	l3712
  2901  0014B4                     u4060:
  2902  0014B4                     
  2903                           ; BSR set to: 0
  2904  0014B4  0E66               	movlw	102
  2905  0014B6  197F               	xorwf	efgtoa@nmode& (0+255),w,b
  2906  0014B8  A4D8               	btfss	status,2,c
  2907  0014BA  EF61  F00A         	goto	u4071
  2908  0014BE  EF63  F00A         	goto	u4070
  2909  0014C2                     u4071:
  2910  0014C2  EF6C  F00A         	goto	l3714
  2911  0014C6                     u4070:
  2912  0014C6                     
  2913                           ; BSR set to: 0
  2914  0014C6  BF90               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2915  0014C8  EF6A  F00A         	goto	u4080
  2916  0014CC  EF68  F00A         	goto	u4081
  2917  0014D0                     u4081:
  2918  0014D0  EF6C  F00A         	goto	l3714
  2919  0014D4                     u4080:
  2920  0014D4                     l3712:
  2921                           
  2922                           ; BSR set to: 0
  2923                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 413:         ++m;
  2924  0014D4  4B71               	infsnz	efgtoa@m& (0+255),f,b
  2925  0014D6  2B72               	incf	(efgtoa@m+1)& (0+255),f,b
  2926  0014D8                     l3714:
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 417:     if (nmode == 'f') {
  2930  0014D8  0E66               	movlw	102
  2931  0014DA  197F               	xorwf	efgtoa@nmode& (0+255),w,b
  2932  0014DC  A4D8               	btfss	status,2,c
  2933  0014DE  EF73  F00A         	goto	u4091
  2934  0014E2  EF75  F00A         	goto	u4090
  2935  0014E6                     u4091:
  2936  0014E6  EF95  F00A         	goto	l3724
  2937  0014EA                     u4090:
  2938  0014EA                     
  2939                           ; BSR set to: 0
  2940                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 418:         if (e < 0) {
  2941  0014EA  BF90               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2942  0014EC  EF7C  F00A         	goto	u4100
  2943  0014F0  EF7A  F00A         	goto	u4101
  2944  0014F4                     u4101:
  2945  0014F4  EF88  F00A         	goto	l3720
  2946  0014F8                     u4100:
  2947  0014F8                     
  2948                           ; BSR set to: 0
  2949                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 419:             u = 1.0;
  2950  0014F8  0E00               	movlw	0
  2951  0014FA  6F93               	movwf	efgtoa@u& (0+255),b
  2952  0014FC  0E00               	movlw	0
  2953  0014FE  6F94               	movwf	(efgtoa@u+1)& (0+255),b
  2954  001500  0E80               	movlw	128
  2955  001502  6F95               	movwf	(efgtoa@u+2)& (0+255),b
  2956  001504  0E3F               	movlw	63
  2957  001506  6F96               	movwf	(efgtoa@u+3)& (0+255),b
  2958                           
  2959                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 420:             e = 0;
  2960  001508  0E00               	movlw	0
  2961  00150A  6F90               	movwf	(efgtoa@e+1)& (0+255),b
  2962  00150C  0E00               	movlw	0
  2963  00150E  6F8F               	movwf	efgtoa@e& (0+255),b
  2964  001510                     l3720:
  2965                           
  2966                           ; BSR set to: 0
  2967                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 422:         if (!(mode == 'g
      +                          ')) {
  2968  001510  0E67               	movlw	103
  2969  001512  1980               	xorwf	efgtoa@mode& (0+255),w,b
  2970  001514  B4D8               	btfsc	status,2,c
  2971  001516  EF8F  F00A         	goto	u4111
  2972  00151A  EF91  F00A         	goto	u4110
  2973  00151E                     u4111:
  2974  00151E  EF95  F00A         	goto	l3724
  2975  001522                     u4110:
  2976  001522                     
  2977                           ; BSR set to: 0
  2978                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 423:             m += e;
  2979  001522  518F               	movf	efgtoa@e& (0+255),w,b
  2980  001524  2771               	addwf	efgtoa@m& (0+255),f,b
  2981  001526  5190               	movf	(efgtoa@e+1)& (0+255),w,b
  2982  001528  2372               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2983  00152A                     l3724:
  2984                           
  2985                           ; BSR set to: 0
  2986                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 428:     i = 0;
  2987  00152A  0E00               	movlw	0
  2988  00152C  6F8A               	movwf	(efgtoa@i+1)& (0+255),b
  2989  00152E  0E00               	movlw	0
  2990  001530  6F89               	movwf	efgtoa@i& (0+255),b
  2991  001532                     
  2992                           ; BSR set to: 0
  2993                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 429:     h = g;
  2994  001532  C08B  F081         	movff	efgtoa@g,efgtoa@h
  2995  001536  C08C  F082         	movff	efgtoa@g+1,efgtoa@h+1
  2996  00153A  C08D  F083         	movff	efgtoa@g+2,efgtoa@h+2
  2997  00153E  C08E  F084         	movff	efgtoa@g+3,efgtoa@h+3
  2998  001542                     
  2999                           ; BSR set to: 0
  3000                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 430:     ou = u;
  3001  001542  C093  F073         	movff	efgtoa@u,efgtoa@ou
  3002  001546  C094  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  3003  00154A  C095  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  3004  00154E  C096  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  3005                           
  3006                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 431:     while (i < m) {
  3007  001552  EF26  F00B         	goto	l3738
  3008  001556                     l3730:
  3009                           
  3010                           ; BSR set to: 0
  3011                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 432:         l = floorf(h/u);
  3012  001556  C081  F028         	movff	efgtoa@h,___fldiv@b
  3013  00155A  C082  F029         	movff	efgtoa@h+1,___fldiv@b+1
  3014  00155E  C083  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  3015  001562  C084  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  3016  001566  C093  F02C         	movff	efgtoa@u,___fldiv@a
  3017  00156A  C094  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  3018  00156E  C095  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  3019  001572  C096  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  3020  001576  EC4D  F015         	call	___fldiv	;wreg free
  3021  00157A  C028  F041         	movff	?___fldiv,floorf@x
  3022  00157E  C029  F042         	movff	?___fldiv+1,floorf@x+1
  3023  001582  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  3024  001586  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  3025  00158A  EC1A  F017         	call	_floorf	;wreg free
  3026  00158E  C041  F085         	movff	?_floorf,efgtoa@l
  3027  001592  C042  F086         	movff	?_floorf+1,efgtoa@l+1
  3028  001596  C043  F087         	movff	?_floorf+2,efgtoa@l+2
  3029  00159A  C044  F088         	movff	?_floorf+3,efgtoa@l+3
  3030                           
  3031                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 433:         d = (int)l;
  3032  00159E  C085  F001         	movff	efgtoa@l,___fltol@f1
  3033  0015A2  C086  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3034  0015A6  C087  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3035  0015AA  C088  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3036  0015AE  EC3D  F01A         	call	___fltol	;wreg free
  3037  0015B2  C001  F077         	movff	?___fltol,efgtoa@d
  3038  0015B6  C002  F078         	movff	?___fltol+1,efgtoa@d+1
  3039  0015BA                     
  3040                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 434:         h -= l*u;
  3041  0015BA  C081  F028         	movff	efgtoa@h,___flsub@b
  3042  0015BE  C082  F029         	movff	efgtoa@h+1,___flsub@b+1
  3043  0015C2  C083  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3044  0015C6  C084  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3045  0015CA  C093  F013         	movff	efgtoa@u,___flmul@a
  3046  0015CE  C094  F014         	movff	efgtoa@u+1,___flmul@a+1
  3047  0015D2  C095  F015         	movff	efgtoa@u+2,___flmul@a+2
  3048  0015D6  C096  F016         	movff	efgtoa@u+3,___flmul@a+3
  3049  0015DA  C085  F00F         	movff	efgtoa@l,___flmul@b
  3050  0015DE  C086  F010         	movff	efgtoa@l+1,___flmul@b+1
  3051  0015E2  C087  F011         	movff	efgtoa@l+2,___flmul@b+2
  3052  0015E6  C088  F012         	movff	efgtoa@l+3,___flmul@b+3
  3053  0015EA  EC38  F013         	call	___flmul	;wreg free
  3054  0015EE  C00F  F02C         	movff	?___flmul,___flsub@a
  3055  0015F2  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3056  0015F6  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3057  0015FA  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3058  0015FE  EC7E  F020         	call	___flsub	;wreg free
  3059  001602  C028  F081         	movff	?___flsub,efgtoa@h
  3060  001606  C029  F082         	movff	?___flsub+1,efgtoa@h+1
  3061  00160A  C02A  F083         	movff	?___flsub+2,efgtoa@h+2
  3062  00160E  C02B  F084         	movff	?___flsub+3,efgtoa@h+3
  3063  001612                     
  3064                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 435:         u = u/10.0;
  3065  001612  C093  F028         	movff	efgtoa@u,___fldiv@b
  3066  001616  C094  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3067  00161A  C095  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3068  00161E  C096  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3069  001622  0E00               	movlw	0
  3070  001624  6E2C               	movwf	___fldiv@a^0,c
  3071  001626  0E00               	movlw	0
  3072  001628  6E2D               	movwf	(___fldiv@a+1)^0,c
  3073  00162A  0E20               	movlw	32
  3074  00162C  6E2E               	movwf	(___fldiv@a+2)^0,c
  3075  00162E  0E41               	movlw	65
  3076  001630  6E2F               	movwf	(___fldiv@a+3)^0,c
  3077  001632  EC4D  F015         	call	___fldiv	;wreg free
  3078  001636  C028  F093         	movff	?___fldiv,efgtoa@u
  3079  00163A  C029  F094         	movff	?___fldiv+1,efgtoa@u+1
  3080  00163E  C02A  F095         	movff	?___fldiv+2,efgtoa@u+2
  3081  001642  C02B  F096         	movff	?___fldiv+3,efgtoa@u+3
  3082  001646                     
  3083                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 436:         ++i;
  3084  001646  0100               	movlb	0	; () banked
  3085  001648  4B89               	infsnz	efgtoa@i& (0+255),f,b
  3086  00164A  2B8A               	incf	(efgtoa@i+1)& (0+255),f,b
  3087  00164C                     l3738:
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 431:     while (i < m) {
  3091  00164C  5171               	movf	efgtoa@m& (0+255),w,b
  3092  00164E  5D89               	subwf	efgtoa@i& (0+255),w,b
  3093  001650  518A               	movf	(efgtoa@i+1)& (0+255),w,b
  3094  001652  0A80               	xorlw	128
  3095  001654  6F60               	movwf	??_efgtoa& (0+255),b
  3096  001656  5172               	movf	(efgtoa@m+1)& (0+255),w,b
  3097  001658  0A80               	xorlw	128
  3098  00165A  5960               	subwfb	??_efgtoa& (0+255),w,b
  3099  00165C  A0D8               	btfss	status,0,c
  3100  00165E  EF33  F00B         	goto	u4121
  3101  001662  EF35  F00B         	goto	u4120
  3102  001666                     u4121:
  3103  001666  EFAB  F00A         	goto	l3730
  3104  00166A                     u4120:
  3105  00166A                     
  3106                           ; BSR set to: 0
  3107                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 440:     l = u*5.0;
  3108  00166A  C093  F00F         	movff	efgtoa@u,___flmul@b
  3109  00166E  C094  F010         	movff	efgtoa@u+1,___flmul@b+1
  3110  001672  C095  F011         	movff	efgtoa@u+2,___flmul@b+2
  3111  001676  C096  F012         	movff	efgtoa@u+3,___flmul@b+3
  3112  00167A  0E00               	movlw	0
  3113  00167C  6E13               	movwf	___flmul@a^0,c
  3114  00167E  0E00               	movlw	0
  3115  001680  6E14               	movwf	(___flmul@a+1)^0,c
  3116  001682  0EA0               	movlw	160
  3117  001684  6E15               	movwf	(___flmul@a+2)^0,c
  3118  001686  0E40               	movlw	64
  3119  001688  6E16               	movwf	(___flmul@a+3)^0,c
  3120  00168A  EC38  F013         	call	___flmul	;wreg free
  3121  00168E  C00F  F085         	movff	?___flmul,efgtoa@l
  3122  001692  C010  F086         	movff	?___flmul+1,efgtoa@l+1
  3123  001696  C011  F087         	movff	?___flmul+2,efgtoa@l+2
  3124  00169A  C012  F088         	movff	?___flmul+3,efgtoa@l+3
  3125  00169E                     
  3126                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 441:     if (h < l) {
  3127  00169E  C081  F028         	movff	efgtoa@h,___flge@ff1
  3128  0016A2  C082  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3129  0016A6  C083  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3130  0016AA  C084  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3131  0016AE  C085  F02C         	movff	efgtoa@l,___flge@ff2
  3132  0016B2  C086  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  3133  0016B6  C087  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  3134  0016BA  C088  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  3135  0016BE  ECC0  F01A         	call	___flge	;wreg free
  3136  0016C2  B0D8               	btfsc	status,0,c
  3137  0016C4  EF66  F00B         	goto	u4131
  3138  0016C8  EF68  F00B         	goto	u4130
  3139  0016CC                     u4131:
  3140  0016CC  EF73  F00B         	goto	l3746
  3141  0016D0                     u4130:
  3142  0016D0                     
  3143                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 442:         l = 0.0;
  3144  0016D0  0E00               	movlw	0
  3145  0016D2  0100               	movlb	0	; () banked
  3146  0016D4  6F85               	movwf	efgtoa@l& (0+255),b
  3147  0016D6  0E00               	movlw	0
  3148  0016D8  6F86               	movwf	(efgtoa@l+1)& (0+255),b
  3149  0016DA  0E00               	movlw	0
  3150  0016DC  6F87               	movwf	(efgtoa@l+2)& (0+255),b
  3151  0016DE  0E00               	movlw	0
  3152  0016E0  6F88               	movwf	(efgtoa@l+3)& (0+255),b
  3153                           
  3154                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 443:     } else {
  3155  0016E2  EF9C  F00B         	goto	l3752
  3156  0016E6                     l3746:
  3157                           
  3158                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 445:         if ((h == l) && 
      +                          !(d % 2)) {
  3159  0016E6  C081  F001         	movff	efgtoa@h,___fleq@ff1
  3160  0016EA  C082  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3161  0016EE  C083  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3162  0016F2  C084  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3163  0016F6  C085  F005         	movff	efgtoa@l,___fleq@ff2
  3164  0016FA  C086  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3165  0016FE  C087  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3166  001702  C088  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3167  001706  ECB4  F01D         	call	___fleq	;wreg free
  3168  00170A  A0D8               	btfss	status,0,c
  3169  00170C  EF8A  F00B         	goto	u4141
  3170  001710  EF8C  F00B         	goto	u4140
  3171  001714                     u4141:
  3172  001714  EF9C  F00B         	goto	l3752
  3173  001718                     u4140:
  3174  001718  0100               	movlb	0	; () banked
  3175  00171A  B177               	btfsc	efgtoa@d& (0+255),0,b
  3176  00171C  EF92  F00B         	goto	u4151
  3177  001720  EF94  F00B         	goto	u4150
  3178  001724                     u4151:
  3179  001724  EF9C  F00B         	goto	l3752
  3180  001728                     u4150:
  3181  001728                     
  3182                           ; BSR set to: 0
  3183                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 446:             l = 0.0;
  3184  001728  0E00               	movlw	0
  3185  00172A  6F85               	movwf	efgtoa@l& (0+255),b
  3186  00172C  0E00               	movlw	0
  3187  00172E  6F86               	movwf	(efgtoa@l+1)& (0+255),b
  3188  001730  0E00               	movlw	0
  3189  001732  6F87               	movwf	(efgtoa@l+2)& (0+255),b
  3190  001734  0E00               	movlw	0
  3191  001736  6F88               	movwf	(efgtoa@l+3)& (0+255),b
  3192  001738                     l3752:
  3193                           
  3194                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 451:     h = g + l;
  3195  001738  C08B  F001         	movff	efgtoa@g,___fladd@b
  3196  00173C  C08C  F002         	movff	efgtoa@g+1,___fladd@b+1
  3197  001740  C08D  F003         	movff	efgtoa@g+2,___fladd@b+2
  3198  001744  C08E  F004         	movff	efgtoa@g+3,___fladd@b+3
  3199  001748  C085  F005         	movff	efgtoa@l,___fladd@a
  3200  00174C  C086  F006         	movff	efgtoa@l+1,___fladd@a+1
  3201  001750  C087  F007         	movff	efgtoa@l+2,___fladd@a+2
  3202  001754  C088  F008         	movff	efgtoa@l+3,___fladd@a+3
  3203  001758  ECD8  F010         	call	___fladd	;wreg free
  3204  00175C  C001  F081         	movff	?___fladd,efgtoa@h
  3205  001760  C002  F082         	movff	?___fladd+1,efgtoa@h+1
  3206  001764  C003  F083         	movff	?___fladd+2,efgtoa@h+2
  3207  001768  C004  F084         	movff	?___fladd+3,efgtoa@h+3
  3208  00176C                     
  3209                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 453:  if (h >= (ou*10.0)) {
  3210  00176C  C081  F028         	movff	efgtoa@h,___flge@ff1
  3211  001770  C082  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3212  001774  C083  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3213  001778  C084  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3214  00177C  0E00               	movlw	0
  3215  00177E  6E13               	movwf	___flmul@a^0,c
  3216  001780  0E00               	movlw	0
  3217  001782  6E14               	movwf	(___flmul@a+1)^0,c
  3218  001784  0E20               	movlw	32
  3219  001786  6E15               	movwf	(___flmul@a+2)^0,c
  3220  001788  0E41               	movlw	65
  3221  00178A  6E16               	movwf	(___flmul@a+3)^0,c
  3222  00178C  C073  F00F         	movff	efgtoa@ou,___flmul@b
  3223  001790  C074  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3224  001794  C075  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3225  001798  C076  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3226  00179C  EC38  F013         	call	___flmul	;wreg free
  3227  0017A0  C00F  F02C         	movff	?___flmul,___flge@ff2
  3228  0017A4  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  3229  0017A8  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  3230  0017AC  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  3231  0017B0  ECC0  F01A         	call	___flge	;wreg free
  3232  0017B4  A0D8               	btfss	status,0,c
  3233  0017B6  EFDF  F00B         	goto	u4161
  3234  0017BA  EFE1  F00B         	goto	u4160
  3235  0017BE                     u4161:
  3236  0017BE  EF0A  F00C         	goto	l3764
  3237  0017C2                     u4160:
  3238  0017C2                     
  3239                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 454:   e++;
  3240  0017C2  0100               	movlb	0	; () banked
  3241  0017C4  4B8F               	infsnz	efgtoa@e& (0+255),f,b
  3242  0017C6  2B90               	incf	(efgtoa@e+1)& (0+255),f,b
  3243  0017C8                     
  3244                           ; BSR set to: 0
  3245                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 455:   ou *= 10.0;
  3246  0017C8  C073  F00F         	movff	efgtoa@ou,___flmul@b
  3247  0017CC  C074  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3248  0017D0  C075  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3249  0017D4  C076  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3250  0017D8  0E00               	movlw	0
  3251  0017DA  6E13               	movwf	___flmul@a^0,c
  3252  0017DC  0E00               	movlw	0
  3253  0017DE  6E14               	movwf	(___flmul@a+1)^0,c
  3254  0017E0  0E20               	movlw	32
  3255  0017E2  6E15               	movwf	(___flmul@a+2)^0,c
  3256  0017E4  0E41               	movlw	65
  3257  0017E6  6E16               	movwf	(___flmul@a+3)^0,c
  3258  0017E8  EC38  F013         	call	___flmul	;wreg free
  3259  0017EC  C00F  F073         	movff	?___flmul,efgtoa@ou
  3260  0017F0  C010  F074         	movff	?___flmul+1,efgtoa@ou+1
  3261  0017F4  C011  F075         	movff	?___flmul+2,efgtoa@ou+2
  3262  0017F8  C012  F076         	movff	?___flmul+3,efgtoa@ou+3
  3263  0017FC                     
  3264                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 456:   if (nmode == 'f') {
  3265  0017FC  0E66               	movlw	102
  3266  0017FE  0100               	movlb	0	; () banked
  3267  001800  197F               	xorwf	efgtoa@nmode& (0+255),w,b
  3268  001802  A4D8               	btfss	status,2,c
  3269  001804  EF06  F00C         	goto	u4171
  3270  001808  EF08  F00C         	goto	u4170
  3271  00180C                     u4171:
  3272  00180C  EF0A  F00C         	goto	l3764
  3273  001810                     u4170:
  3274  001810                     
  3275                           ; BSR set to: 0
  3276                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 458:    m++;
  3277  001810  4B71               	infsnz	efgtoa@m& (0+255),f,b
  3278  001812  2B72               	incf	(efgtoa@m+1)& (0+255),f,b
  3279  001814                     l3764:
  3280                           
  3281                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 463:     u = ou;
  3282  001814  C073  F093         	movff	efgtoa@ou,efgtoa@u
  3283  001818  C074  F094         	movff	efgtoa@ou+1,efgtoa@u+1
  3284  00181C  C075  F095         	movff	efgtoa@ou+2,efgtoa@u+2
  3285  001820  C076  F096         	movff	efgtoa@ou+3,efgtoa@u+3
  3286  001824                     
  3287                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 464:     ne = (nmode == 'e') 
      +                          ? 0 : e;
  3288  001824  0E65               	movlw	101
  3289  001826  0100               	movlb	0	; () banked
  3290  001828  197F               	xorwf	efgtoa@nmode& (0+255),w,b
  3291  00182A  B4D8               	btfsc	status,2,c
  3292  00182C  EF1A  F00C         	goto	u4181
  3293  001830  EF1C  F00C         	goto	u4180
  3294  001834                     u4181:
  3295  001834  EF22  F00C         	goto	l3770
  3296  001838                     u4180:
  3297  001838                     
  3298                           ; BSR set to: 0
  3299  001838  C08F  F06F         	movff	efgtoa@e,efgtoa@ne
  3300  00183C  C090  F070         	movff	efgtoa@e+1,efgtoa@ne+1
  3301  001840  EF26  F00C         	goto	l958
  3302  001844                     l3770:
  3303                           
  3304                           ; BSR set to: 0
  3305  001844  0E00               	movlw	0
  3306  001846  6F70               	movwf	(efgtoa@ne+1)& (0+255),b
  3307  001848  0E00               	movlw	0
  3308  00184A  6F6F               	movwf	efgtoa@ne& (0+255),b
  3309  00184C                     l958:
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 465:     pp = 0;
  3313  00184C  0E00               	movlw	0
  3314  00184E  6F6E               	movwf	(efgtoa@pp+1)& (0+255),b
  3315  001850  0E00               	movlw	0
  3316  001852  6F6D               	movwf	efgtoa@pp& (0+255),b
  3317                           
  3318                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 466:     t = 0;
  3319  001854  0E00               	movlw	0
  3320  001856  6F6C               	movwf	(efgtoa@t+1)& (0+255),b
  3321  001858  0E00               	movlw	0
  3322  00185A  6F6B               	movwf	efgtoa@t& (0+255),b
  3323                           
  3324                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 467:     i = 0;
  3325  00185C  0E00               	movlw	0
  3326  00185E  6F8A               	movwf	(efgtoa@i+1)& (0+255),b
  3327  001860  0E00               	movlw	0
  3328  001862  6F89               	movwf	efgtoa@i& (0+255),b
  3329                           
  3330                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 468:     while ((i < m) && (n
      +                           < (80 - 5))) {
  3331  001864  EF21  F00D         	goto	l3820
  3332  001868                     l3772:
  3333                           
  3334                           ; BSR set to: 0
  3335                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 469:         l = floorf(h/u);
  3336  001868  C081  F028         	movff	efgtoa@h,___fldiv@b
  3337  00186C  C082  F029         	movff	efgtoa@h+1,___fldiv@b+1
  3338  001870  C083  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  3339  001874  C084  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  3340  001878  C093  F02C         	movff	efgtoa@u,___fldiv@a
  3341  00187C  C094  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  3342  001880  C095  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  3343  001884  C096  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  3344  001888  EC4D  F015         	call	___fldiv	;wreg free
  3345  00188C  C028  F041         	movff	?___fldiv,floorf@x
  3346  001890  C029  F042         	movff	?___fldiv+1,floorf@x+1
  3347  001894  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  3348  001898  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  3349  00189C  EC1A  F017         	call	_floorf	;wreg free
  3350  0018A0  C041  F085         	movff	?_floorf,efgtoa@l
  3351  0018A4  C042  F086         	movff	?_floorf+1,efgtoa@l+1
  3352  0018A8  C043  F087         	movff	?_floorf+2,efgtoa@l+2
  3353  0018AC  C044  F088         	movff	?_floorf+3,efgtoa@l+3
  3354                           
  3355                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 470:         d = (int)l;
  3356  0018B0  C085  F001         	movff	efgtoa@l,___fltol@f1
  3357  0018B4  C086  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3358  0018B8  C087  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3359  0018BC  C088  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3360  0018C0  EC3D  F01A         	call	___fltol	;wreg free
  3361  0018C4  C001  F077         	movff	?___fltol,efgtoa@d
  3362  0018C8  C002  F078         	movff	?___fltol+1,efgtoa@d+1
  3363  0018CC                     
  3364                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 471:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3365  0018CC  0100               	movlb	0	; () banked
  3366  0018CE  B9F1               	btfsc	_flags& (0+255),4,b
  3367  0018D0  EF6C  F00C         	goto	u4191
  3368  0018D4  EF6E  F00C         	goto	u4190
  3369  0018D8                     u4191:
  3370  0018D8  EF8B  F00C         	goto	l3784
  3371  0018DC                     u4190:
  3372  0018DC                     
  3373                           ; BSR set to: 0
  3374  0018DC  5177               	movf	efgtoa@d& (0+255),w,b
  3375  0018DE  1178               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3376  0018E0  A4D8               	btfss	status,2,c
  3377  0018E2  EF75  F00C         	goto	u4201
  3378  0018E6  EF77  F00C         	goto	u4200
  3379  0018EA                     u4201:
  3380  0018EA  EF8B  F00C         	goto	l3784
  3381  0018EE                     u4200:
  3382  0018EE                     
  3383                           ; BSR set to: 0
  3384  0018EE  0E67               	movlw	103
  3385  0018F0  1980               	xorwf	efgtoa@mode& (0+255),w,b
  3386  0018F2  A4D8               	btfss	status,2,c
  3387  0018F4  EF7E  F00C         	goto	u4211
  3388  0018F8  EF80  F00C         	goto	u4210
  3389  0018FC                     u4211:
  3390  0018FC  EF8B  F00C         	goto	l3784
  3391  001900                     u4210:
  3392  001900                     
  3393                           ; BSR set to: 0
  3394  001900  BF70               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3395  001902  EF87  F00C         	goto	u4220
  3396  001906  EF85  F00C         	goto	u4221
  3397  00190A                     u4221:
  3398  00190A  EF8B  F00C         	goto	l3784
  3399  00190E                     u4220:
  3400  00190E                     
  3401                           ; BSR set to: 0
  3402                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 472:             ++t;
  3403  00190E  4B6B               	infsnz	efgtoa@t& (0+255),f,b
  3404  001910  2B6C               	incf	(efgtoa@t+1)& (0+255),f,b
  3405                           
  3406                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 473:         } else {
  3407  001912  EFD5  F00C         	goto	l3812
  3408  001916                     l3784:
  3409                           
  3410                           ; BSR set to: 0
  3411                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 474:             if (!pp && (
      +                          ne < 0)) {
  3412  001916  516D               	movf	efgtoa@pp& (0+255),w,b
  3413  001918  116E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3414  00191A  A4D8               	btfss	status,2,c
  3415  00191C  EF92  F00C         	goto	u4231
  3416  001920  EF94  F00C         	goto	u4230
  3417  001924                     u4231:
  3418  001924  EFBE  F00C         	goto	l3804
  3419  001928                     u4230:
  3420  001928                     
  3421                           ; BSR set to: 0
  3422  001928  BF70               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3423  00192A  EF9B  F00C         	goto	u4240
  3424  00192E  EF99  F00C         	goto	u4241
  3425  001932                     u4241:
  3426  001932  EFBE  F00C         	goto	l3804
  3427  001936                     u4240:
  3428  001936                     
  3429                           ; BSR set to: 0
  3430                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 475:                 dbuf[n++
      +                          ] = '.';
  3431  001936  0E00               	movlw	low _dbuf
  3432  001938  2591               	addwf	efgtoa@n& (0+255),w,b
  3433  00193A  6ED9               	movwf	fsr2l,c
  3434  00193C  0E01               	movlw	high _dbuf
  3435  00193E  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3436  001940  6EDA               	movwf	fsr2h,c
  3437  001942  0E2E               	movlw	46
  3438  001944  6EDF               	movwf	indf2,c
  3439  001946                     
  3440                           ; BSR set to: 0
  3441  001946  4B91               	infsnz	efgtoa@n& (0+255),f,b
  3442  001948  2B92               	incf	(efgtoa@n+1)& (0+255),f,b
  3443  00194A                     
  3444                           ; BSR set to: 0
  3445                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 476:                 --w;
  3446  00194A  077D               	decf	efgtoa@w& (0+255),f,b
  3447  00194C  A0D8               	btfss	status,0,c
  3448  00194E  077E               	decf	(efgtoa@w+1)& (0+255),f,b
  3449  001950                     
  3450                           ; BSR set to: 0
  3451                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 477:                 pp = 1;
  3452  001950  0E00               	movlw	0
  3453  001952  6F6E               	movwf	(efgtoa@pp+1)& (0+255),b
  3454  001954  0E01               	movlw	1
  3455  001956  6F6D               	movwf	efgtoa@pp& (0+255),b
  3456  001958  EFBE  F00C         	goto	l3804
  3457  00195C                     l3796:
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 480:                 dbuf[n++
      +                          ] = '0';
  3461  00195C  0E00               	movlw	low _dbuf
  3462  00195E  2591               	addwf	efgtoa@n& (0+255),w,b
  3463  001960  6ED9               	movwf	fsr2l,c
  3464  001962  0E01               	movlw	high _dbuf
  3465  001964  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3466  001966  6EDA               	movwf	fsr2h,c
  3467  001968  0E30               	movlw	48
  3468  00196A  6EDF               	movwf	indf2,c
  3469  00196C                     
  3470                           ; BSR set to: 0
  3471  00196C  4B91               	infsnz	efgtoa@n& (0+255),f,b
  3472  00196E  2B92               	incf	(efgtoa@n+1)& (0+255),f,b
  3473  001970                     
  3474                           ; BSR set to: 0
  3475                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 481:                 --w;
  3476  001970  077D               	decf	efgtoa@w& (0+255),f,b
  3477  001972  A0D8               	btfss	status,0,c
  3478  001974  077E               	decf	(efgtoa@w+1)& (0+255),f,b
  3479  001976                     
  3480                           ; BSR set to: 0
  3481                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 482:                 --t;
  3482  001976  076B               	decf	efgtoa@t& (0+255),f,b
  3483  001978  A0D8               	btfss	status,0,c
  3484  00197A  076C               	decf	(efgtoa@t+1)& (0+255),f,b
  3485  00197C                     l3804:
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 479:             while (t) {
  3489  00197C  516B               	movf	efgtoa@t& (0+255),w,b
  3490  00197E  116C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3491  001980  A4D8               	btfss	status,2,c
  3492  001982  EFC5  F00C         	goto	u4251
  3493  001986  EFC7  F00C         	goto	u4250
  3494  00198A                     u4251:
  3495  00198A  EFAE  F00C         	goto	l3796
  3496  00198E                     u4250:
  3497  00198E                     
  3498                           ; BSR set to: 0
  3499                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 484:             dbuf[n++] = 
      +                          (char)((int)'0' + d);
  3500  00198E  0E00               	movlw	low _dbuf
  3501  001990  2591               	addwf	efgtoa@n& (0+255),w,b
  3502  001992  6ED9               	movwf	fsr2l,c
  3503  001994  0E01               	movlw	high _dbuf
  3504  001996  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3505  001998  6EDA               	movwf	fsr2h,c
  3506  00199A  5177               	movf	efgtoa@d& (0+255),w,b
  3507  00199C  0F30               	addlw	48
  3508  00199E  6EDF               	movwf	indf2,c
  3509  0019A0                     
  3510                           ; BSR set to: 0
  3511  0019A0  4B91               	infsnz	efgtoa@n& (0+255),f,b
  3512  0019A2  2B92               	incf	(efgtoa@n+1)& (0+255),f,b
  3513  0019A4                     
  3514                           ; BSR set to: 0
  3515                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 485:             --w;
  3516  0019A4  077D               	decf	efgtoa@w& (0+255),f,b
  3517  0019A6  A0D8               	btfss	status,0,c
  3518  0019A8  077E               	decf	(efgtoa@w+1)& (0+255),f,b
  3519  0019AA                     l3812:
  3520                           
  3521                           ; BSR set to: 0
  3522                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 487:         h -= l*u;
  3523  0019AA  C081  F028         	movff	efgtoa@h,___flsub@b
  3524  0019AE  C082  F029         	movff	efgtoa@h+1,___flsub@b+1
  3525  0019B2  C083  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3526  0019B6  C084  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3527  0019BA  C093  F013         	movff	efgtoa@u,___flmul@a
  3528  0019BE  C094  F014         	movff	efgtoa@u+1,___flmul@a+1
  3529  0019C2  C095  F015         	movff	efgtoa@u+2,___flmul@a+2
  3530  0019C6  C096  F016         	movff	efgtoa@u+3,___flmul@a+3
  3531  0019CA  C085  F00F         	movff	efgtoa@l,___flmul@b
  3532  0019CE  C086  F010         	movff	efgtoa@l+1,___flmul@b+1
  3533  0019D2  C087  F011         	movff	efgtoa@l+2,___flmul@b+2
  3534  0019D6  C088  F012         	movff	efgtoa@l+3,___flmul@b+3
  3535  0019DA  EC38  F013         	call	___flmul	;wreg free
  3536  0019DE  C00F  F02C         	movff	?___flmul,___flsub@a
  3537  0019E2  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3538  0019E6  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3539  0019EA  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3540  0019EE  EC7E  F020         	call	___flsub	;wreg free
  3541  0019F2  C028  F081         	movff	?___flsub,efgtoa@h
  3542  0019F6  C029  F082         	movff	?___flsub+1,efgtoa@h+1
  3543  0019FA  C02A  F083         	movff	?___flsub+2,efgtoa@h+2
  3544  0019FE  C02B  F084         	movff	?___flsub+3,efgtoa@h+3
  3545  001A02                     
  3546                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 488:         u = u/10.0;
  3547  001A02  C093  F028         	movff	efgtoa@u,___fldiv@b
  3548  001A06  C094  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3549  001A0A  C095  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3550  001A0E  C096  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3551  001A12  0E00               	movlw	0
  3552  001A14  6E2C               	movwf	___fldiv@a^0,c
  3553  001A16  0E00               	movlw	0
  3554  001A18  6E2D               	movwf	(___fldiv@a+1)^0,c
  3555  001A1A  0E20               	movlw	32
  3556  001A1C  6E2E               	movwf	(___fldiv@a+2)^0,c
  3557  001A1E  0E41               	movlw	65
  3558  001A20  6E2F               	movwf	(___fldiv@a+3)^0,c
  3559  001A22  EC4D  F015         	call	___fldiv	;wreg free
  3560  001A26  C028  F093         	movff	?___fldiv,efgtoa@u
  3561  001A2A  C029  F094         	movff	?___fldiv+1,efgtoa@u+1
  3562  001A2E  C02A  F095         	movff	?___fldiv+2,efgtoa@u+2
  3563  001A32  C02B  F096         	movff	?___fldiv+3,efgtoa@u+3
  3564  001A36                     
  3565                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 489:         --ne;
  3566  001A36  0100               	movlb	0	; () banked
  3567  001A38  076F               	decf	efgtoa@ne& (0+255),f,b
  3568  001A3A  A0D8               	btfss	status,0,c
  3569  001A3C  0770               	decf	(efgtoa@ne+1)& (0+255),f,b
  3570  001A3E                     
  3571                           ; BSR set to: 0
  3572                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 490:         ++i;
  3573  001A3E  4B89               	infsnz	efgtoa@i& (0+255),f,b
  3574  001A40  2B8A               	incf	(efgtoa@i+1)& (0+255),f,b
  3575  001A42                     l3820:
  3576                           
  3577                           ; BSR set to: 0
  3578                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 468:     while ((i < m) && (n
      +                           < (80 - 5))) {
  3579  001A42  5171               	movf	efgtoa@m& (0+255),w,b
  3580  001A44  5D89               	subwf	efgtoa@i& (0+255),w,b
  3581  001A46  518A               	movf	(efgtoa@i+1)& (0+255),w,b
  3582  001A48  0A80               	xorlw	128
  3583  001A4A  6F60               	movwf	??_efgtoa& (0+255),b
  3584  001A4C  5172               	movf	(efgtoa@m+1)& (0+255),w,b
  3585  001A4E  0A80               	xorlw	128
  3586  001A50  5960               	subwfb	??_efgtoa& (0+255),w,b
  3587  001A52  B0D8               	btfsc	status,0,c
  3588  001A54  EF2E  F00D         	goto	u4261
  3589  001A58  EF30  F00D         	goto	u4260
  3590  001A5C                     u4261:
  3591  001A5C  EF3E  F00D         	goto	l3824
  3592  001A60                     u4260:
  3593  001A60                     
  3594                           ; BSR set to: 0
  3595  001A60  BF92               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3596  001A62  EF3C  F00D         	goto	u4271
  3597  001A66  5192               	movf	(efgtoa@n+1)& (0+255),w,b
  3598  001A68  E109               	bnz	u4270
  3599  001A6A  0E4B               	movlw	75
  3600  001A6C  5D91               	subwf	efgtoa@n& (0+255),w,b
  3601  001A6E  A0D8               	btfss	status,0,c
  3602  001A70  EF3C  F00D         	goto	u4271
  3603  001A74  EF3E  F00D         	goto	u4270
  3604  001A78                     u4271:
  3605  001A78  EF34  F00C         	goto	l3772
  3606  001A7C                     u4270:
  3607  001A7C                     l3824:
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 492:     if (!pp && (flags & 
      +                          (1 << 4))) {
  3611  001A7C  516D               	movf	efgtoa@pp& (0+255),w,b
  3612  001A7E  116E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3613  001A80  A4D8               	btfss	status,2,c
  3614  001A82  EF45  F00D         	goto	u4281
  3615  001A86  EF47  F00D         	goto	u4280
  3616  001A8A                     u4281:
  3617  001A8A  EF58  F00D         	goto	l3832
  3618  001A8E                     u4280:
  3619  001A8E                     
  3620                           ; BSR set to: 0
  3621  001A8E  A9F1               	btfss	_flags& (0+255),4,b
  3622  001A90  EF4C  F00D         	goto	u4291
  3623  001A94  EF4E  F00D         	goto	u4290
  3624  001A98                     u4291:
  3625  001A98  EF58  F00D         	goto	l3832
  3626  001A9C                     u4290:
  3627  001A9C                     
  3628                           ; BSR set to: 0
  3629                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 493:         dbuf[n++] = '.';
  3630  001A9C  0E00               	movlw	low _dbuf
  3631  001A9E  2591               	addwf	efgtoa@n& (0+255),w,b
  3632  001AA0  6ED9               	movwf	fsr2l,c
  3633  001AA2  0E01               	movlw	high _dbuf
  3634  001AA4  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3635  001AA6  6EDA               	movwf	fsr2h,c
  3636  001AA8  0E2E               	movlw	46
  3637  001AAA  6EDF               	movwf	indf2,c
  3638  001AAC                     
  3639                           ; BSR set to: 0
  3640  001AAC  4B91               	infsnz	efgtoa@n& (0+255),f,b
  3641  001AAE  2B92               	incf	(efgtoa@n+1)& (0+255),f,b
  3642  001AB0                     l3832:
  3643                           
  3644                           ; BSR set to: 0
  3645                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 495:     dbuf[n] = '\0';
  3646  001AB0  0E00               	movlw	low _dbuf
  3647  001AB2  2591               	addwf	efgtoa@n& (0+255),w,b
  3648  001AB4  6ED9               	movwf	fsr2l,c
  3649  001AB6  0E01               	movlw	high _dbuf
  3650  001AB8  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3651  001ABA  6EDA               	movwf	fsr2h,c
  3652  001ABC  0E00               	movlw	0
  3653  001ABE  6EDF               	movwf	indf2,c
  3654  001AC0                     
  3655                           ; BSR set to: 0
  3656                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 498:     if (nmode == 'e') {
  3657  001AC0  0E65               	movlw	101
  3658  001AC2  197F               	xorwf	efgtoa@nmode& (0+255),w,b
  3659  001AC4  A4D8               	btfss	status,2,c
  3660  001AC6  EF67  F00D         	goto	u4301
  3661  001ACA  EF69  F00D         	goto	u4300
  3662  001ACE                     u4301:
  3663  001ACE  EFD0  F008         	goto	l3634
  3664  001AD2                     u4300:
  3665  001AD2                     
  3666                           ; BSR set to: 0
  3667                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 499:         i = sizeof(dbuf)
      +                           - 1;
  3668  001AD2  0E00               	movlw	0
  3669  001AD4  6F8A               	movwf	(efgtoa@i+1)& (0+255),b
  3670  001AD6  0E4F               	movlw	79
  3671  001AD8  6F89               	movwf	efgtoa@i& (0+255),b
  3672  001ADA                     
  3673                           ; BSR set to: 0
  3674                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 500:         dbuf[i] = '\0';
  3675  001ADA  0E00               	movlw	low _dbuf
  3676  001ADC  2589               	addwf	efgtoa@i& (0+255),w,b
  3677  001ADE  6ED9               	movwf	fsr2l,c
  3678  001AE0  0E01               	movlw	high _dbuf
  3679  001AE2  218A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3680  001AE4  6EDA               	movwf	fsr2h,c
  3681  001AE6  0E00               	movlw	0
  3682  001AE8  6EDF               	movwf	indf2,c
  3683  001AEA                     
  3684                           ; BSR set to: 0
  3685                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 501:         sign = 0;
  3686  001AEA  0E00               	movlw	0
  3687  001AEC  6F7A               	movwf	(efgtoa@sign+1)& (0+255),b
  3688  001AEE  0E00               	movlw	0
  3689  001AF0  6F79               	movwf	efgtoa@sign& (0+255),b
  3690  001AF2                     
  3691                           ; BSR set to: 0
  3692                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 502:         if (e < 0) {
  3693  001AF2  BF90               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3694  001AF4  EF80  F00D         	goto	u4310
  3695  001AF8  EF7E  F00D         	goto	u4311
  3696  001AFC                     u4311:
  3697  001AFC  EF88  F00D         	goto	l3848
  3698  001B00                     u4310:
  3699  001B00                     
  3700                           ; BSR set to: 0
  3701                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 503:             sign = 1;
  3702  001B00  0E00               	movlw	0
  3703  001B02  6F7A               	movwf	(efgtoa@sign+1)& (0+255),b
  3704  001B04  0E01               	movlw	1
  3705  001B06  6F79               	movwf	efgtoa@sign& (0+255),b
  3706  001B08                     
  3707                           ; BSR set to: 0
  3708                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 504:             e = -e;
  3709  001B08  6D8F               	negf	efgtoa@e& (0+255),b
  3710  001B0A  1F90               	comf	(efgtoa@e+1)& (0+255),f,b
  3711  001B0C  B0D8               	btfsc	status,0,c
  3712  001B0E  2B90               	incf	(efgtoa@e+1)& (0+255),f,b
  3713  001B10                     l3848:
  3714                           
  3715                           ; BSR set to: 0
  3716                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 506:         p = 2;
  3717  001B10  0E00               	movlw	0
  3718  001B12  6F7C               	movwf	(efgtoa@p+1)& (0+255),b
  3719  001B14  0E02               	movlw	2
  3720  001B16  6F7B               	movwf	efgtoa@p& (0+255),b
  3721                           
  3722                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 507:         while (e || (0 <
      +                           p)) {
  3723  001B18  EFB9  F00D         	goto	l3860
  3724  001B1C                     l3850:
  3725                           
  3726                           ; BSR set to: 0
  3727                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 508:             --i;
  3728  001B1C  0789               	decf	efgtoa@i& (0+255),f,b
  3729  001B1E  A0D8               	btfss	status,0,c
  3730  001B20  078A               	decf	(efgtoa@i+1)& (0+255),f,b
  3731  001B22                     
  3732                           ; BSR set to: 0
  3733                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 509:             dbuf[i] = '0
      +                          ' + (e % 10);
  3734  001B22  0E00               	movlw	low _dbuf
  3735  001B24  2589               	addwf	efgtoa@i& (0+255),w,b
  3736  001B26  6ED9               	movwf	fsr2l,c
  3737  001B28  0E01               	movlw	high _dbuf
  3738  001B2A  218A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3739  001B2C  6EDA               	movwf	fsr2h,c
  3740  001B2E  C08F  F001         	movff	efgtoa@e,___awmod@dividend
  3741  001B32  C090  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3742  001B36  0E00               	movlw	0
  3743  001B38  6E04               	movwf	(___awmod@divisor+1)^0,c
  3744  001B3A  0E0A               	movlw	10
  3745  001B3C  6E03               	movwf	___awmod@divisor^0,c
  3746  001B3E  EC5C  F01D         	call	___awmod	;wreg free
  3747  001B42  5001               	movf	?___awmod^0,w,c
  3748  001B44  0F30               	addlw	48
  3749  001B46  6EDF               	movwf	indf2,c
  3750  001B48                     
  3751                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 510:             e = e / 10;
  3752  001B48  C08F  F001         	movff	efgtoa@e,___awdiv@dividend
  3753  001B4C  C090  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3754  001B50  0E00               	movlw	0
  3755  001B52  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3756  001B54  0E0A               	movlw	10
  3757  001B56  6E03               	movwf	___awdiv@divisor^0,c
  3758  001B58  ECFA  F01C         	call	___awdiv	;wreg free
  3759  001B5C  C001  F08F         	movff	?___awdiv,efgtoa@e
  3760  001B60  C002  F090         	movff	?___awdiv+1,efgtoa@e+1
  3761  001B64                     
  3762                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 511:             --p;
  3763  001B64  0100               	movlb	0	; () banked
  3764  001B66  077B               	decf	efgtoa@p& (0+255),f,b
  3765  001B68  A0D8               	btfss	status,0,c
  3766  001B6A  077C               	decf	(efgtoa@p+1)& (0+255),f,b
  3767  001B6C                     
  3768                           ; BSR set to: 0
  3769                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 512:             --w;
  3770  001B6C  077D               	decf	efgtoa@w& (0+255),f,b
  3771  001B6E  A0D8               	btfss	status,0,c
  3772  001B70  077E               	decf	(efgtoa@w+1)& (0+255),f,b
  3773  001B72                     l3860:
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 507:         while (e || (0 <
      +                           p)) {
  3777  001B72  518F               	movf	efgtoa@e& (0+255),w,b
  3778  001B74  1190               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3779  001B76  A4D8               	btfss	status,2,c
  3780  001B78  EFC0  F00D         	goto	u4321
  3781  001B7C  EFC2  F00D         	goto	u4320
  3782  001B80                     u4321:
  3783  001B80  EF8E  F00D         	goto	l3850
  3784  001B84                     u4320:
  3785  001B84                     
  3786                           ; BSR set to: 0
  3787  001B84  BF7C               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3788  001B86  EFCF  F00D         	goto	u4330
  3789  001B8A  517C               	movf	(efgtoa@p+1)& (0+255),w,b
  3790  001B8C  E106               	bnz	u4331
  3791  001B8E  057B               	decf	efgtoa@p& (0+255),w,b
  3792  001B90  B0D8               	btfsc	status,0,c
  3793  001B92  EFCD  F00D         	goto	u4331
  3794  001B96  EFCF  F00D         	goto	u4330
  3795  001B9A                     u4331:
  3796  001B9A  EF8E  F00D         	goto	l3850
  3797  001B9E                     u4330:
  3798  001B9E                     
  3799                           ; BSR set to: 0
  3800                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 514:         --i;
  3801  001B9E  0789               	decf	efgtoa@i& (0+255),f,b
  3802  001BA0  A0D8               	btfss	status,0,c
  3803  001BA2  078A               	decf	(efgtoa@i+1)& (0+255),f,b
  3804  001BA4                     
  3805                           ; BSR set to: 0
  3806                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 515:         dbuf[i] = sign ?
      +                           '-' : '+';
  3807  001BA4  5179               	movf	efgtoa@sign& (0+255),w,b
  3808  001BA6  117A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3809  001BA8  A4D8               	btfss	status,2,c
  3810  001BAA  EFD9  F00D         	goto	u4341
  3811  001BAE  EFDB  F00D         	goto	u4340
  3812  001BB2                     u4341:
  3813  001BB2  EFE1  F00D         	goto	l3870
  3814  001BB6                     u4340:
  3815  001BB6                     
  3816                           ; BSR set to: 0
  3817  001BB6  0E00               	movlw	0
  3818  001BB8  6F68               	movwf	(_efgtoa$1443+1)& (0+255),b
  3819  001BBA  0E2B               	movlw	43
  3820  001BBC  6F67               	movwf	_efgtoa$1443& (0+255),b
  3821  001BBE  EFE5  F00D         	goto	l3872
  3822  001BC2                     l3870:
  3823                           
  3824                           ; BSR set to: 0
  3825  001BC2  0E00               	movlw	0
  3826  001BC4  6F68               	movwf	(_efgtoa$1443+1)& (0+255),b
  3827  001BC6  0E2D               	movlw	45
  3828  001BC8  6F67               	movwf	_efgtoa$1443& (0+255),b
  3829  001BCA                     l3872:
  3830                           
  3831                           ; BSR set to: 0
  3832  001BCA  0E00               	movlw	low _dbuf
  3833  001BCC  2589               	addwf	efgtoa@i& (0+255),w,b
  3834  001BCE  6ED9               	movwf	fsr2l,c
  3835  001BD0  0E01               	movlw	high _dbuf
  3836  001BD2  218A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3837  001BD4  6EDA               	movwf	fsr2h,c
  3838  001BD6  C067  FFDF         	movff	_efgtoa$1443,indf2
  3839  001BDA                     
  3840                           ; BSR set to: 0
  3841                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 516:         --w;
  3842  001BDA  077D               	decf	efgtoa@w& (0+255),f,b
  3843  001BDC  A0D8               	btfss	status,0,c
  3844  001BDE  077E               	decf	(efgtoa@w+1)& (0+255),f,b
  3845  001BE0                     
  3846                           ; BSR set to: 0
  3847                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 517:         --i;
  3848  001BE0  0789               	decf	efgtoa@i& (0+255),f,b
  3849  001BE2  A0D8               	btfss	status,0,c
  3850  001BE4  078A               	decf	(efgtoa@i+1)& (0+255),f,b
  3851  001BE6                     
  3852                           ; BSR set to: 0
  3853  001BE6  0EBF               	movlw	191
  3854  001BE8  6F60               	movwf	??_efgtoa& (0+255),b
  3855  001BEA  0EFF               	movlw	255
  3856  001BEC  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  3857  001BEE  505B               	movf	efgtoa@c^0,w,c
  3858  001BF0  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  3859  001BF2  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  3860  001BF4  5160               	movf	??_efgtoa& (0+255),w,b
  3861  001BF6  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  3862  001BF8  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  3863  001BFA  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3864  001BFC  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  3865  001BFE  E109               	bnz	u4350
  3866  001C00  0E1A               	movlw	26
  3867  001C02  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  3868  001C04  A0D8               	btfss	status,0,c
  3869  001C06  EF07  F00E         	goto	u4351
  3870  001C0A  EF09  F00E         	goto	u4350
  3871  001C0E                     u4351:
  3872  001C0E  EF0F  F00E         	goto	l3884
  3873  001C12                     u4350:
  3874  001C12                     
  3875                           ; BSR set to: 0
  3876  001C12  0E00               	movlw	0
  3877  001C14  6F6A               	movwf	(_efgtoa$1444+1)& (0+255),b
  3878  001C16  0E65               	movlw	101
  3879  001C18  6F69               	movwf	_efgtoa$1444& (0+255),b
  3880  001C1A  EF13  F00E         	goto	l3886
  3881  001C1E                     l3884:
  3882                           
  3883                           ; BSR set to: 0
  3884  001C1E  0E00               	movlw	0
  3885  001C20  6F6A               	movwf	(_efgtoa$1444+1)& (0+255),b
  3886  001C22  0E45               	movlw	69
  3887  001C24  6F69               	movwf	_efgtoa$1444& (0+255),b
  3888  001C26                     l3886:
  3889                           
  3890                           ; BSR set to: 0
  3891  001C26  0E00               	movlw	low _dbuf
  3892  001C28  2589               	addwf	efgtoa@i& (0+255),w,b
  3893  001C2A  6ED9               	movwf	fsr2l,c
  3894  001C2C  0E01               	movlw	high _dbuf
  3895  001C2E  218A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3896  001C30  6EDA               	movwf	fsr2h,c
  3897  001C32  C069  FFDF         	movff	_efgtoa$1444,indf2
  3898  001C36                     
  3899                           ; BSR set to: 0
  3900                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 519:         --w;
  3901  001C36  077D               	decf	efgtoa@w& (0+255),f,b
  3902  001C38  A0D8               	btfss	status,0,c
  3903  001C3A  077E               	decf	(efgtoa@w+1)& (0+255),f,b
  3904  001C3C                     
  3905                           ; BSR set to: 0
  3906                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 520:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
  3907  001C3C  0E00               	movlw	low _dbuf
  3908  001C3E  2591               	addwf	efgtoa@n& (0+255),w,b
  3909  001C40  6E01               	movwf	strcpy@dest^0,c
  3910  001C42  0E01               	movlw	high _dbuf
  3911  001C44  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3912  001C46  6E02               	movwf	(strcpy@dest+1)^0,c
  3913  001C48  0E00               	movlw	low _dbuf
  3914  001C4A  2589               	addwf	efgtoa@i& (0+255),w,b
  3915  001C4C  6E03               	movwf	strcpy@src^0,c
  3916  001C4E  0E01               	movlw	high _dbuf
  3917  001C50  218A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3918  001C52  6E04               	movwf	(strcpy@src+1)^0,c
  3919  001C54  ECDA  F01F         	call	_strcpy	;wreg free
  3920  001C58  EFD0  F008         	goto	l3634
  3921  001C5C                     l914:
  3922  001C5C  0012               	return		;funcret
  3923  001C5E                     __end_of_efgtoa:
  3924                           	callstack 0
  3925                           
  3926 ;; *************** function _tolower *****************
  3927 ;; Defined at:
  3928 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/tolower.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;  c               2    6[COMRAM] int 
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;		None
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  2    6[COMRAM] int 
  3935 ;; Registers used:
  3936 ;;		wreg, status,2, status,0
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3942 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3944 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3945 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3946 ;;Total ram usage:        6 bytes
  3947 ;; Hardware stack levels used: 1
  3948 ;; Hardware stack levels required when called: 1
  3949 ;; This function calls:
  3950 ;;		_isupper
  3951 ;; This function is called by:
  3952 ;;		_efgtoa
  3953 ;;		_vfpfcnvrt
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           	psect	text7
  3958  0040B6                     __ptext7:
  3959                           	callstack 0
  3960  0040B6                     _tolower:
  3961                           	callstack 25
  3962  0040B6  0EBF               	movlw	191
  3963  0040B8  6E09               	movwf	??_tolower^0,c
  3964  0040BA  0EFF               	movlw	255
  3965  0040BC  6E0A               	movwf	(??_tolower+1)^0,c
  3966  0040BE  C007  F00B         	movff	tolower@c,??_tolower+2
  3967  0040C2  C008  F00C         	movff	tolower@c+1,??_tolower+3
  3968  0040C6  5009               	movf	??_tolower^0,w,c
  3969  0040C8  260B               	addwf	(??_tolower+2)^0,f,c
  3970  0040CA  500A               	movf	(??_tolower+1)^0,w,c
  3971  0040CC  220C               	addwfc	(??_tolower+3)^0,f,c
  3972  0040CE  500C               	movf	(??_tolower+3)^0,w,c
  3973  0040D0  E107               	bnz	u3731
  3974  0040D2  0E1A               	movlw	26
  3975  0040D4  5C0B               	subwf	(??_tolower+2)^0,w,c
  3976  0040D6  B0D8               	btfsc	status,0,c
  3977  0040D8  EF70  F020         	goto	u3731
  3978  0040DC  EF72  F020         	goto	u3730
  3979  0040E0                     u3731:
  3980  0040E0  EF79  F020         	goto	l1138
  3981  0040E4                     u3730:
  3982  0040E4  0E20               	movlw	32
  3983  0040E6  1007               	iorwf	tolower@c^0,w,c
  3984  0040E8  6E07               	movwf	?_tolower^0,c
  3985  0040EA  5008               	movf	(tolower@c+1)^0,w,c
  3986  0040EC  6E08               	movwf	(?_tolower+1)^0,c
  3987  0040EE  EF7D  F020         	goto	l1141
  3988  0040F2                     l1138:
  3989  0040F2  C007  F007         	movff	tolower@c,?_tolower
  3990  0040F6  C008  F008         	movff	tolower@c+1,?_tolower+1
  3991  0040FA                     l1141:
  3992  0040FA  0012               	return		;funcret
  3993  0040FC                     __end_of_tolower:
  3994                           	callstack 0
  3995                           
  3996 ;; *************** function _isupper *****************
  3997 ;; Defined at:
  3998 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isupper.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;  c               2    0[COMRAM] int 
  4001 ;; Auto vars:     Size  Location     Type
  4002 ;;		None
  4003 ;; Return value:  Size  Location     Type
  4004 ;;                  2    0[COMRAM] int 
  4005 ;; Registers used:
  4006 ;;		wreg, status,2, status,0
  4007 ;; Tracked objects:
  4008 ;;		On entry : 0/0
  4009 ;;		On exit  : 0/0
  4010 ;;		Unchanged: 0/0
  4011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4012 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4014 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4015 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4016 ;;Total ram usage:        6 bytes
  4017 ;; Hardware stack levels used: 1
  4018 ;; This function calls:
  4019 ;;		Nothing
  4020 ;; This function is called by:
  4021 ;;		_efgtoa
  4022 ;;		_vfpfcnvrt
  4023 ;;		_tolower
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text8
  4028  004186                     __ptext8:
  4029                           	callstack 0
  4030  004186                     _isupper:
  4031                           	callstack 25
  4032  004186  0EBF               	movlw	191
  4033  004188  6E03               	movwf	??_isupper^0,c
  4034  00418A  0EFF               	movlw	255
  4035  00418C  6E04               	movwf	(??_isupper+1)^0,c
  4036  00418E  C001  F005         	movff	isupper@c,??_isupper+2
  4037  004192  C002  F006         	movff	isupper@c+1,??_isupper+3
  4038  004196  5003               	movf	??_isupper^0,w,c
  4039  004198  2605               	addwf	(??_isupper+2)^0,f,c
  4040  00419A  5004               	movf	(??_isupper+1)^0,w,c
  4041  00419C  2206               	addwfc	(??_isupper+3)^0,f,c
  4042  00419E  5006               	movf	(??_isupper+3)^0,w,c
  4043  0041A0  E10A               	bnz	u2850
  4044  0041A2  0E1A               	movlw	26
  4045  0041A4  5C05               	subwf	(??_isupper+2)^0,w,c
  4046  0041A6  A0D8               	btfss	status,0,c
  4047  0041A8  EFD8  F020         	goto	u2851
  4048  0041AC  EFDB  F020         	goto	u2850
  4049  0041B0                     u2851:
  4050  0041B0  0E01               	movlw	1
  4051  0041B2  EFDC  F020         	goto	u2860
  4052  0041B6                     u2850:
  4053  0041B6  0E00               	movlw	0
  4054  0041B8                     u2860:
  4055  0041B8  6E01               	movwf	?_isupper^0,c
  4056  0041BA  6A02               	clrf	(?_isupper+1)^0,c
  4057  0041BC  0012               	return		;funcret
  4058  0041BE                     __end_of_isupper:
  4059                           	callstack 0
  4060                           
  4061 ;; *************** function _strcpy *****************
  4062 ;; Defined at:
  4063 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strcpy.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4066 ;;		 -> dbuf(80), 
  4067 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4068 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4069 ;;		 -> dbuf(80), 
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;  d               2    8[COMRAM] PTR unsigned char 
  4072 ;;		 -> dbuf(80), 
  4073 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4074 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4075 ;;		 -> dbuf(80), 
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  2    0[COMRAM] PTR unsigned char 
  4078 ;; Registers used:
  4079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4085 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4088 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4089 ;;Total ram usage:       10 bytes
  4090 ;; Hardware stack levels used: 1
  4091 ;; This function calls:
  4092 ;;		Nothing
  4093 ;; This function is called by:
  4094 ;;		_efgtoa
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           	psect	text9
  4099  003FB4                     __ptext9:
  4100                           	callstack 0
  4101  003FB4                     _strcpy:
  4102                           	callstack 25
  4103  003FB4  C003  F007         	movff	strcpy@src,strcpy@s
  4104  003FB8  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4105  003FBC  C001  F009         	movff	strcpy@dest,strcpy@d
  4106  003FC0  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4107  003FC4                     l3528:
  4108  003FC4  5007               	movf	strcpy@s^0,w,c
  4109  003FC6  6E05               	movwf	??_strcpy^0,c
  4110  003FC8  5008               	movf	(strcpy@s+1)^0,w,c
  4111  003FCA  6E06               	movwf	(??_strcpy+1)^0,c
  4112  003FCC  4A07               	infsnz	strcpy@s^0,f,c
  4113  003FCE  2A08               	incf	(strcpy@s+1)^0,f,c
  4114  003FD0  C005  FFF6         	movff	??_strcpy,tblptrl
  4115  003FD4  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4116  003FD8  0E00               	movlw	low (__smallconst shr (0+16))
  4117  003FDA  6EF8               	movwf	tblptru,c
  4118  003FDC  C009  FFD9         	movff	strcpy@d,fsr2l
  4119  003FE0  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4120  003FE4  4A09               	infsnz	strcpy@d^0,f,c
  4121  003FE6  2A0A               	incf	(strcpy@d+1)^0,f,c
  4122  003FE8  0E0F               	movlw	(high __ramtop+-1)
  4123  003FEA  64F7               	cpfsgt	tblptrh,c
  4124  003FEC  D003               	bra	u3717
  4125  003FEE  0008               	tblrd		*
  4126  003FF0  50F5               	movf	tablat,w,c
  4127  003FF2  D005               	bra	u3710
  4128  003FF4                     u3717:
  4129  003FF4  CFF6 FFE1          	movff	tblptrl,fsr1l
  4130  003FF8  CFF7 FFE2          	movff	tblptrh,fsr1h
  4131  003FFC  50E7               	movf	indf1,w,c
  4132  003FFE                     u3710:
  4133  003FFE  6EDF               	movwf	indf2,c
  4134  004000  50DF               	movf	indf2,w,c
  4135  004002  A4D8               	btfss	status,2,c
  4136  004004  EF06  F020         	goto	u3721
  4137  004008  EF08  F020         	goto	u3720
  4138  00400C                     u3721:
  4139  00400C  EFE2  F01F         	goto	l3528
  4140  004010                     u3720:
  4141  004010  0012               	return		;funcret
  4142  004012                     __end_of_strcpy:
  4143                           	callstack 0
  4144                           
  4145 ;; *************** function _pad *****************
  4146 ;; Defined at:
  4147 ;;		line 72 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4150 ;;		 -> sprintf@f(11), 
  4151 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4152 ;;		 -> dbuf(80), 
  4153 ;;  p               2   20[COMRAM] int 
  4154 ;; Auto vars:     Size  Location     Type
  4155 ;;  w               2   25[COMRAM] int 
  4156 ;;  i               2   23[COMRAM] int 
  4157 ;; Return value:  Size  Location     Type
  4158 ;;                  2   16[COMRAM] int 
  4159 ;; Registers used:
  4160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/0
  4163 ;;		On exit  : 0/0
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4166 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4167 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4168 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4169 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4170 ;;Total ram usage:       11 bytes
  4171 ;; Hardware stack levels used: 1
  4172 ;; Hardware stack levels required when called: 3
  4173 ;; This function calls:
  4174 ;;		_fputc
  4175 ;;		_fputs
  4176 ;;		_strlen
  4177 ;; This function is called by:
  4178 ;;		_efgtoa
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182                           	psect	text10
  4183  00392E                     __ptext10:
  4184                           	callstack 0
  4185  00392E                     _pad:
  4186                           	callstack 22
  4187  00392E                     
  4188                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.36/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  4189  00392E  0100               	movlb	0	; () banked
  4190  003930  A1F1               	btfss	_flags& (0+255),0,b
  4191  003932  EF9D  F01C         	goto	u3601
  4192  003936  EF9F  F01C         	goto	u3600
  4193  00393A                     u3601:
  4194  00393A  EFA9  F01C         	goto	l3486
  4195  00393E                     u3600:
  4196  00393E                     
  4197                           ; BSR set to: 0
  4198                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  4199  00393E  C013  F00A         	movff	pad@buf,fputs@s
  4200  003942  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4201  003946  C011  F00C         	movff	pad@fp,fputs@fp
  4202  00394A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4203  00394E  ECA1  F020         	call	_fputs	;wreg free
  4204  003952                     l3486:
  4205                           
  4206                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  4207  003952  BE16               	btfsc	(pad@p+1)^0,7,c
  4208  003954  EFAE  F01C         	goto	u3611
  4209  003958  EFB0  F01C         	goto	u3610
  4210  00395C                     u3611:
  4211  00395C  EFB6  F01C         	goto	l3490
  4212  003960                     u3610:
  4213  003960  C015  F01A         	movff	pad@p,pad@w
  4214  003964  C016  F01B         	movff	pad@p+1,pad@w+1
  4215  003968  EFBA  F01C         	goto	l893
  4216  00396C                     l3490:
  4217  00396C  0E00               	movlw	0
  4218  00396E  6E1B               	movwf	(pad@w+1)^0,c
  4219  003970  0E00               	movlw	0
  4220  003972  6E1A               	movwf	pad@w^0,c
  4221  003974                     l893:
  4222                           
  4223                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  4224  003974  0E00               	movlw	0
  4225  003976  6E19               	movwf	(pad@i+1)^0,c
  4226  003978  0E00               	movlw	0
  4227  00397A  6E18               	movwf	pad@i^0,c
  4228                           
  4229                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  4230  00397C  EFCC  F01C         	goto	l3496
  4231  003980                     l3492:
  4232                           
  4233                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  4234  003980  0E00               	movlw	0
  4235  003982  6E02               	movwf	(fputc@c+1)^0,c
  4236  003984  0E20               	movlw	32
  4237  003986  6E01               	movwf	fputc@c^0,c
  4238  003988  C011  F003         	movff	pad@fp,fputc@fp
  4239  00398C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4240  003990  EC32  F01C         	call	_fputc	;wreg free
  4241  003994                     
  4242                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 86:         ++i;
  4243  003994  4A18               	infsnz	pad@i^0,f,c
  4244  003996  2A19               	incf	(pad@i+1)^0,f,c
  4245  003998                     l3496:
  4246                           
  4247                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  4248  003998  501A               	movf	pad@w^0,w,c
  4249  00399A  5C18               	subwf	pad@i^0,w,c
  4250  00399C  5019               	movf	(pad@i+1)^0,w,c
  4251  00399E  0A80               	xorlw	128
  4252  0039A0  6E17               	movwf	??_pad^0,c
  4253  0039A2  501B               	movf	(pad@w+1)^0,w,c
  4254  0039A4  0A80               	xorlw	128
  4255  0039A6  5817               	subwfb	??_pad^0,w,c
  4256  0039A8  A0D8               	btfss	status,0,c
  4257  0039AA  EFD9  F01C         	goto	u3621
  4258  0039AE  EFDB  F01C         	goto	u3620
  4259  0039B2                     u3621:
  4260  0039B2  EFC0  F01C         	goto	l3492
  4261  0039B6                     u3620:
  4262  0039B6                     
  4263                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  4264  0039B6  0100               	movlb	0	; () banked
  4265  0039B8  B1F1               	btfsc	_flags& (0+255),0,b
  4266  0039BA  EFE1  F01C         	goto	u3631
  4267  0039BE  EFE3  F01C         	goto	u3630
  4268  0039C2                     u3631:
  4269  0039C2  EFED  F01C         	goto	l3500
  4270  0039C6                     u3630:
  4271  0039C6                     
  4272                           ; BSR set to: 0
  4273                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  4274  0039C6  C013  F00A         	movff	pad@buf,fputs@s
  4275  0039CA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4276  0039CE  C011  F00C         	movff	pad@fp,fputs@fp
  4277  0039D2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4278  0039D6  ECA1  F020         	call	_fputs	;wreg free
  4279  0039DA                     l3500:
  4280                           
  4281                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
  4282  0039DA  C013  F001         	movff	pad@buf,strlen@s
  4283  0039DE  C014  F002         	movff	pad@buf+1,strlen@s+1
  4284  0039E2  EC32  F021         	call	_strlen	;wreg free
  4285  0039E6  501A               	movf	pad@w^0,w,c
  4286  0039E8  2401               	addwf	?_strlen^0,w,c
  4287  0039EA  6E11               	movwf	?_pad^0,c
  4288  0039EC  501B               	movf	(pad@w+1)^0,w,c
  4289  0039EE  2002               	addwfc	(?_strlen+1)^0,w,c
  4290  0039F0  6E12               	movwf	(?_pad+1)^0,c
  4291  0039F2  0012               	return		;funcret
  4292  0039F4                     __end_of_pad:
  4293                           	callstack 0
  4294                           
  4295 ;; *************** function _strlen *****************
  4296 ;; Defined at:
  4297 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strlen.c"
  4298 ;; Parameters:    Size  Location     Type
  4299 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4300 ;;		 -> dbuf(80), 
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4303 ;;		 -> dbuf(80), 
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  2    0[COMRAM] unsigned int 
  4306 ;; Registers used:
  4307 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4314 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4316 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4317 ;;Total ram usage:        4 bytes
  4318 ;; Hardware stack levels used: 1
  4319 ;; This function calls:
  4320 ;;		Nothing
  4321 ;; This function is called by:
  4322 ;;		_pad
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           
  4326                           	psect	text11
  4327  004264                     __ptext11:
  4328                           	callstack 0
  4329  004264                     _strlen:
  4330                           	callstack 24
  4331  004264  C001  F003         	movff	strlen@s,strlen@a
  4332  004268  C002  F004         	movff	strlen@s+1,strlen@a+1
  4333  00426C  EF3A  F021         	goto	l2976
  4334  004270                     l2974:
  4335  004270  4A01               	infsnz	strlen@s^0,f,c
  4336  004272  2A02               	incf	(strlen@s+1)^0,f,c
  4337  004274                     l2976:
  4338  004274  C001  FFD9         	movff	strlen@s,fsr2l
  4339  004278  C002  FFDA         	movff	strlen@s+1,fsr2h
  4340  00427C  50DF               	movf	indf2,w,c
  4341  00427E  A4D8               	btfss	status,2,c
  4342  004280  EF44  F021         	goto	u2841
  4343  004284  EF46  F021         	goto	u2840
  4344  004288                     u2841:
  4345  004288  EF38  F021         	goto	l2974
  4346  00428C                     u2840:
  4347  00428C  5003               	movf	strlen@a^0,w,c
  4348  00428E  5C01               	subwf	strlen@s^0,w,c
  4349  004290  6E01               	movwf	?_strlen^0,c
  4350  004292  5004               	movf	(strlen@a+1)^0,w,c
  4351  004294  5802               	subwfb	(strlen@s+1)^0,w,c
  4352  004296  6E02               	movwf	(?_strlen+1)^0,c
  4353  004298  0012               	return		;funcret
  4354  00429A                     __end_of_strlen:
  4355                           	callstack 0
  4356                           
  4357 ;; *************** function _fputs *****************
  4358 ;; Defined at:
  4359 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputs.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4362 ;;		 -> dbuf(80), 
  4363 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4364 ;;		 -> sprintf@f(11), 
  4365 ;; Auto vars:     Size  Location     Type
  4366 ;;  i               2   14[COMRAM] int 
  4367 ;;  c               1   13[COMRAM] unsigned char 
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  2    9[COMRAM] int 
  4370 ;; Registers used:
  4371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4377 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4378 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4380 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4381 ;;Total ram usage:        7 bytes
  4382 ;; Hardware stack levels used: 1
  4383 ;; Hardware stack levels required when called: 2
  4384 ;; This function calls:
  4385 ;;		_fputc
  4386 ;; This function is called by:
  4387 ;;		_pad
  4388 ;; This function uses a non-reentrant model
  4389 ;;
  4390                           
  4391                           	psect	text12
  4392  004142                     __ptext12:
  4393                           	callstack 0
  4394  004142                     _fputs:
  4395                           	callstack 22
  4396  004142  0E00               	movlw	0
  4397  004144  6E10               	movwf	(fputs@i+1)^0,c
  4398  004146  0E00               	movlw	0
  4399  004148  6E0F               	movwf	fputs@i^0,c
  4400  00414A  EFB2  F020         	goto	l2970
  4401  00414E                     l2966:
  4402  00414E  C00E  F001         	movff	fputs@c,fputc@c
  4403  004152  6A02               	clrf	(fputc@c+1)^0,c
  4404  004154  C00C  F003         	movff	fputs@fp,fputc@fp
  4405  004158  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4406  00415C  EC32  F01C         	call	_fputc	;wreg free
  4407  004160  4A0F               	infsnz	fputs@i^0,f,c
  4408  004162  2A10               	incf	(fputs@i+1)^0,f,c
  4409  004164                     l2970:
  4410  004164  500F               	movf	fputs@i^0,w,c
  4411  004166  240A               	addwf	fputs@s^0,w,c
  4412  004168  6ED9               	movwf	fsr2l,c
  4413  00416A  5010               	movf	(fputs@i+1)^0,w,c
  4414  00416C  200B               	addwfc	(fputs@s+1)^0,w,c
  4415  00416E  6EDA               	movwf	fsr2h,c
  4416  004170  50DF               	movf	indf2,w,c
  4417  004172  6E0E               	movwf	fputs@c^0,c
  4418  004174  500E               	movf	fputs@c^0,w,c
  4419  004176  A4D8               	btfss	status,2,c
  4420  004178  EFC0  F020         	goto	u2831
  4421  00417C  EFC2  F020         	goto	u2830
  4422  004180                     u2831:
  4423  004180  EFA7  F020         	goto	l2966
  4424  004184                     u2830:
  4425  004184  0012               	return		;funcret
  4426  004186                     __end_of_fputs:
  4427                           	callstack 0
  4428                           
  4429 ;; *************** function _fputc *****************
  4430 ;; Defined at:
  4431 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputc.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;  c               2    0[COMRAM] int 
  4434 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4435 ;;		 -> sprintf@f(11), 
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;		None
  4438 ;; Return value:  Size  Location     Type
  4439 ;;                  2    0[COMRAM] int 
  4440 ;; Registers used:
  4441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4442 ;; Tracked objects:
  4443 ;;		On entry : 0/0
  4444 ;;		On exit  : 0/0
  4445 ;;		Unchanged: 0/0
  4446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4447 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4449 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4450 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4451 ;;Total ram usage:        9 bytes
  4452 ;; Hardware stack levels used: 1
  4453 ;; Hardware stack levels required when called: 1
  4454 ;; This function calls:
  4455 ;;		_putch
  4456 ;; This function is called by:
  4457 ;;		_pad
  4458 ;;		_vfpfcnvrt
  4459 ;;		_fputs
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           
  4463                           	psect	text13
  4464  003864                     __ptext13:
  4465                           	callstack 0
  4466  003864                     _fputc:
  4467                           	callstack 25
  4468  003864  5003               	movf	fputc@fp^0,w,c
  4469  003866  1004               	iorwf	(fputc@fp+1)^0,w,c
  4470  003868  B4D8               	btfsc	status,2,c
  4471  00386A  EF39  F01C         	goto	u2401
  4472  00386E  EF3B  F01C         	goto	u2400
  4473  003872                     u2401:
  4474  003872  EF44  F01C         	goto	l2752
  4475  003876                     u2400:
  4476  003876  5003               	movf	fputc@fp^0,w,c
  4477  003878  1004               	iorwf	(fputc@fp+1)^0,w,c
  4478  00387A  A4D8               	btfss	status,2,c
  4479  00387C  EF42  F01C         	goto	u2411
  4480  003880  EF44  F01C         	goto	u2410
  4481  003884                     u2411:
  4482  003884  EF49  F01C         	goto	l2754
  4483  003888                     u2410:
  4484  003888                     l2752:
  4485  003888  5001               	movf	fputc@c^0,w,c
  4486  00388A  ECA1  F021         	call	_putch
  4487  00388E  EF96  F01C         	goto	l1101
  4488  003892                     l2754:
  4489  003892  EE20 F009          	lfsr	2,9
  4490  003896  5003               	movf	fputc@fp^0,w,c
  4491  003898  26D9               	addwf	fsr2l,f,c
  4492  00389A  5004               	movf	(fputc@fp+1)^0,w,c
  4493  00389C  22DA               	addwfc	fsr2h,f,c
  4494  00389E  50DE               	movf	postinc2,w,c
  4495  0038A0  10DE               	iorwf	postinc2,w,c
  4496  0038A2  B4D8               	btfsc	status,2,c
  4497  0038A4  EF56  F01C         	goto	u2421
  4498  0038A8  EF58  F01C         	goto	u2420
  4499  0038AC                     u2421:
  4500  0038AC  EF73  F01C         	goto	l2758
  4501  0038B0                     u2420:
  4502  0038B0  EE20 F009          	lfsr	2,9
  4503  0038B4  5003               	movf	fputc@fp^0,w,c
  4504  0038B6  26D9               	addwf	fsr2l,f,c
  4505  0038B8  5004               	movf	(fputc@fp+1)^0,w,c
  4506  0038BA  22DA               	addwfc	fsr2h,f,c
  4507  0038BC  EE10 F003          	lfsr	1,3
  4508  0038C0  5003               	movf	fputc@fp^0,w,c
  4509  0038C2  26E1               	addwf	fsr1l,f,c
  4510  0038C4  5004               	movf	(fputc@fp+1)^0,w,c
  4511  0038C6  22E2               	addwfc	fsr1h,f,c
  4512  0038C8  50DE               	movf	postinc2,w,c
  4513  0038CA  5CE6               	subwf	postinc1,w,c
  4514  0038CC  50E6               	movf	postinc1,w,c
  4515  0038CE  0A80               	xorlw	128
  4516  0038D0  6E09               	movwf	(??_fputc+4)^0,c
  4517  0038D2  50DE               	movf	postinc2,w,c
  4518  0038D4  0A80               	xorlw	128
  4519  0038D6  5809               	subwfb	(??_fputc+4)^0,w,c
  4520  0038D8  B0D8               	btfsc	status,0,c
  4521  0038DA  EF71  F01C         	goto	u2431
  4522  0038DE  EF73  F01C         	goto	u2430
  4523  0038E2                     u2431:
  4524  0038E2  EF96  F01C         	goto	l1101
  4525  0038E6                     u2430:
  4526  0038E6                     l2758:
  4527  0038E6  EE20 F003          	lfsr	2,3
  4528  0038EA  5003               	movf	fputc@fp^0,w,c
  4529  0038EC  26D9               	addwf	fsr2l,f,c
  4530  0038EE  5004               	movf	(fputc@fp+1)^0,w,c
  4531  0038F0  22DA               	addwfc	fsr2h,f,c
  4532  0038F2  CFDE F005          	movff	postinc2,??_fputc
  4533  0038F6  CFDD F006          	movff	postdec2,??_fputc+1
  4534  0038FA  C003  FFD9         	movff	fputc@fp,fsr2l
  4535  0038FE  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4536  003902  CFDE F007          	movff	postinc2,??_fputc+2
  4537  003906  CFDD F008          	movff	postdec2,??_fputc+3
  4538  00390A  5005               	movf	??_fputc^0,w,c
  4539  00390C  2407               	addwf	(??_fputc+2)^0,w,c
  4540  00390E  6ED9               	movwf	fsr2l,c
  4541  003910  5006               	movf	(??_fputc+1)^0,w,c
  4542  003912  2008               	addwfc	(??_fputc+3)^0,w,c
  4543  003914  6EDA               	movwf	fsr2h,c
  4544  003916  C001  FFDF         	movff	fputc@c,indf2
  4545  00391A  EE20 F003          	lfsr	2,3
  4546  00391E  5003               	movf	fputc@fp^0,w,c
  4547  003920  26D9               	addwf	fsr2l,f,c
  4548  003922  5004               	movf	(fputc@fp+1)^0,w,c
  4549  003924  22DA               	addwfc	fsr2h,f,c
  4550  003926  2ADE               	incf	postinc2,f,c
  4551  003928  0E00               	movlw	0
  4552  00392A  22DD               	addwfc	postdec2,f,c
  4553  00392C                     l1101:
  4554  00392C  0012               	return		;funcret
  4555  00392E                     __end_of_fputc:
  4556                           	callstack 0
  4557                           
  4558 ;; *************** function _putch *****************
  4559 ;; Defined at:
  4560 ;;		line 7 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/putch.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;  c               1    wreg     unsigned char 
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;  c               1    0[COMRAM] unsigned char 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  1    wreg      void 
  4567 ;; Registers used:
  4568 ;;		wreg
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4578 ;;Total ram usage:        0 bytes
  4579 ;; Hardware stack levels used: 1
  4580 ;; This function calls:
  4581 ;;		Nothing
  4582 ;; This function is called by:
  4583 ;;		_fputc
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587                           	psect	text14
  4588  004342                     __ptext14:
  4589                           	callstack 0
  4590  004342                     _putch:
  4591                           	callstack 25
  4592  004342  0012               	return		;funcret
  4593  004344                     __end_of_putch:
  4594                           	callstack 0
  4595                           
  4596 ;; *************** function _floorf *****************
  4597 ;; Defined at:
  4598 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/floorf.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;  x               4   64[COMRAM] float 
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;  u               4   80[COMRAM] struct .
  4603 ;;  m               4   74[COMRAM] unsigned long 
  4604 ;;  e               2   78[COMRAM] int 
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  4   64[COMRAM] float 
  4607 ;; Registers used:
  4608 ;;		wreg, status,2, status,0
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4614 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4615 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4616 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4617 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4618 ;;Total ram usage:       20 bytes
  4619 ;; Hardware stack levels used: 1
  4620 ;; This function calls:
  4621 ;;		Nothing
  4622 ;; This function is called by:
  4623 ;;		_efgtoa
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           	psect	text15
  4628  002E34                     __ptext15:
  4629                           	callstack 0
  4630  002E34                     _floorf:
  4631                           	callstack 25
  4632  002E34  C0E3  F051         	movff	floorf@F526,floorf@u
  4633  002E38  C0E4  F052         	movff	floorf@F526+1,floorf@u+1
  4634  002E3C  C0E5  F053         	movff	floorf@F526+2,floorf@u+2
  4635  002E40  C0E6  F054         	movff	floorf@F526+3,floorf@u+3
  4636  002E44  C041  F051         	movff	floorf@x,floorf@u
  4637  002E48  C042  F052         	movff	floorf@x+1,floorf@u+1
  4638  002E4C  C043  F053         	movff	floorf@x+2,floorf@u+2
  4639  002E50  C044  F054         	movff	floorf@x+3,floorf@u+3
  4640  002E54  0E81               	movlw	129
  4641  002E56  6E45               	movwf	??_floorf^0,c
  4642  002E58  0EFF               	movlw	255
  4643  002E5A  6E46               	movwf	(??_floorf+1)^0,c
  4644  002E5C  C051  F047         	movff	floorf@u,??_floorf+2
  4645  002E60  C052  F048         	movff	floorf@u+1,??_floorf+3
  4646  002E64  C053  F049         	movff	floorf@u+2,??_floorf+4
  4647  002E68  C054  F04A         	movff	floorf@u+3,??_floorf+5
  4648  002E6C  0E18               	movlw	24
  4649  002E6E  EF3E  F017         	goto	u3740
  4650  002E72                     u3745:
  4651  002E72  90D8               	bcf	status,0,c
  4652  002E74  324A               	rrcf	(??_floorf+5)^0,f,c
  4653  002E76  3249               	rrcf	(??_floorf+4)^0,f,c
  4654  002E78  3248               	rrcf	(??_floorf+3)^0,f,c
  4655  002E7A  3247               	rrcf	(??_floorf+2)^0,f,c
  4656  002E7C                     u3740:
  4657  002E7C  2EE8               	decfsz	wreg,f,c
  4658  002E7E  EF39  F017         	goto	u3745
  4659  002E82  5047               	movf	(??_floorf+2)^0,w,c
  4660  002E84  2445               	addwf	??_floorf^0,w,c
  4661  002E86  6E4F               	movwf	floorf@e^0,c
  4662  002E88  0E00               	movlw	0
  4663  002E8A  2046               	addwfc	(??_floorf+1)^0,w,c
  4664  002E8C  6E50               	movwf	(floorf@e+1)^0,c
  4665  002E8E  BE50               	btfsc	(floorf@e+1)^0,7,c
  4666  002E90  EF53  F017         	goto	u3751
  4667  002E94  5050               	movf	(floorf@e+1)^0,w,c
  4668  002E96  E109               	bnz	u3750
  4669  002E98  0E17               	movlw	23
  4670  002E9A  5C4F               	subwf	floorf@e^0,w,c
  4671  002E9C  A0D8               	btfss	status,0,c
  4672  002E9E  EF53  F017         	goto	u3751
  4673  002EA2  EF55  F017         	goto	u3750
  4674  002EA6                     u3751:
  4675  002EA6  EF5F  F017         	goto	l3546
  4676  002EAA                     u3750:
  4677  002EAA                     l3544:
  4678  002EAA  C041  F041         	movff	floorf@x,?_floorf
  4679  002EAE  C042  F042         	movff	floorf@x+1,?_floorf+1
  4680  002EB2  C043  F043         	movff	floorf@x+2,?_floorf+2
  4681  002EB6  C044  F044         	movff	floorf@x+3,?_floorf+3
  4682  002EBA  EF22  F018         	goto	l1062
  4683  002EBE                     l3546:
  4684  002EBE  BE50               	btfsc	(floorf@e+1)^0,7,c
  4685  002EC0  EF64  F017         	goto	u3761
  4686  002EC4  EF66  F017         	goto	u3760
  4687  002EC8                     u3761:
  4688  002EC8  EFD6  F017         	goto	l3556
  4689  002ECC                     u3760:
  4690  002ECC  C04F  F045         	movff	floorf@e,??_floorf
  4691  002ED0  0EFF               	movlw	255
  4692  002ED2  6E46               	movwf	(??_floorf+1)^0,c
  4693  002ED4  0EFF               	movlw	255
  4694  002ED6  6E47               	movwf	(??_floorf+2)^0,c
  4695  002ED8  0E7F               	movlw	127
  4696  002EDA  6E48               	movwf	(??_floorf+3)^0,c
  4697  002EDC  0E00               	movlw	0
  4698  002EDE  6E49               	movwf	(??_floorf+4)^0,c
  4699  002EE0                     u3775:
  4700  002EE0  6645               	tstfsz	??_floorf^0,c
  4701  002EE2  EF75  F017         	goto	u3776
  4702  002EE6  EF7D  F017         	goto	u3777
  4703  002EEA                     u3776:
  4704  002EEA  3449               	rlcf	(??_floorf+4)^0,w,c
  4705  002EEC  3249               	rrcf	(??_floorf+4)^0,f,c
  4706  002EEE  3248               	rrcf	(??_floorf+3)^0,f,c
  4707  002EF0  3247               	rrcf	(??_floorf+2)^0,f,c
  4708  002EF2  3246               	rrcf	(??_floorf+1)^0,f,c
  4709  002EF4  2E45               	decfsz	??_floorf^0,f,c
  4710  002EF6  EF70  F017         	goto	u3775
  4711  002EFA                     u3777:
  4712  002EFA  C046  F04B         	movff	??_floorf+1,floorf@m
  4713  002EFE  C047  F04C         	movff	??_floorf+2,floorf@m+1
  4714  002F02  C048  F04D         	movff	??_floorf+3,floorf@m+2
  4715  002F06  C049  F04E         	movff	??_floorf+4,floorf@m+3
  4716  002F0A  504B               	movf	floorf@m^0,w,c
  4717  002F0C  1451               	andwf	floorf@u^0,w,c
  4718  002F0E  6E45               	movwf	??_floorf^0,c
  4719  002F10  504C               	movf	(floorf@m+1)^0,w,c
  4720  002F12  1452               	andwf	(floorf@u+1)^0,w,c
  4721  002F14  6E46               	movwf	(??_floorf+1)^0,c
  4722  002F16  504D               	movf	(floorf@m+2)^0,w,c
  4723  002F18  1453               	andwf	(floorf@u+2)^0,w,c
  4724  002F1A  6E47               	movwf	(??_floorf+2)^0,c
  4725  002F1C  504E               	movf	(floorf@m+3)^0,w,c
  4726  002F1E  1454               	andwf	(floorf@u+3)^0,w,c
  4727  002F20  6E48               	movwf	(??_floorf+3)^0,c
  4728  002F22  5045               	movf	??_floorf^0,w,c
  4729  002F24  1046               	iorwf	(??_floorf+1)^0,w,c
  4730  002F26  1047               	iorwf	(??_floorf+2)^0,w,c
  4731  002F28  1048               	iorwf	(??_floorf+3)^0,w,c
  4732  002F2A  A4D8               	btfss	status,2,c
  4733  002F2C  EF9A  F017         	goto	u3781
  4734  002F30  EF9C  F017         	goto	u3780
  4735  002F34                     u3781:
  4736  002F34  EF9E  F017         	goto	l3552
  4737  002F38                     u3780:
  4738  002F38  EF55  F017         	goto	l3544
  4739  002F3C                     l3552:
  4740  002F3C  C051  F045         	movff	floorf@u,??_floorf
  4741  002F40  C052  F046         	movff	floorf@u+1,??_floorf+1
  4742  002F44  C053  F047         	movff	floorf@u+2,??_floorf+2
  4743  002F48  C054  F048         	movff	floorf@u+3,??_floorf+3
  4744  002F4C  0E20               	movlw	32
  4745  002F4E  EFAE  F017         	goto	u3790
  4746  002F52                     u3795:
  4747  002F52  90D8               	bcf	status,0,c
  4748  002F54  3248               	rrcf	(??_floorf+3)^0,f,c
  4749  002F56  3247               	rrcf	(??_floorf+2)^0,f,c
  4750  002F58  3246               	rrcf	(??_floorf+1)^0,f,c
  4751  002F5A  3245               	rrcf	??_floorf^0,f,c
  4752  002F5C                     u3790:
  4753  002F5C  2EE8               	decfsz	wreg,f,c
  4754  002F5E  EFA9  F017         	goto	u3795
  4755  002F62  5045               	movf	??_floorf^0,w,c
  4756  002F64  1046               	iorwf	(??_floorf+1)^0,w,c
  4757  002F66  1047               	iorwf	(??_floorf+2)^0,w,c
  4758  002F68  1048               	iorwf	(??_floorf+3)^0,w,c
  4759  002F6A  B4D8               	btfsc	status,2,c
  4760  002F6C  EFBA  F017         	goto	u3801
  4761  002F70  EFBC  F017         	goto	u3800
  4762  002F74                     u3801:
  4763  002F74  EFC4  F017         	goto	l1065
  4764  002F78                     u3800:
  4765  002F78  504B               	movf	floorf@m^0,w,c
  4766  002F7A  2651               	addwf	floorf@u^0,f,c
  4767  002F7C  504C               	movf	(floorf@m+1)^0,w,c
  4768  002F7E  2252               	addwfc	(floorf@u+1)^0,f,c
  4769  002F80  504D               	movf	(floorf@m+2)^0,w,c
  4770  002F82  2253               	addwfc	(floorf@u+2)^0,f,c
  4771  002F84  504E               	movf	(floorf@m+3)^0,w,c
  4772  002F86  2254               	addwfc	(floorf@u+3)^0,f,c
  4773  002F88                     l1065:
  4774  002F88  1C4B               	comf	floorf@m^0,w,c
  4775  002F8A  6E45               	movwf	??_floorf^0,c
  4776  002F8C  1C4C               	comf	(floorf@m+1)^0,w,c
  4777  002F8E  6E46               	movwf	(??_floorf+1)^0,c
  4778  002F90  1C4D               	comf	(floorf@m+2)^0,w,c
  4779  002F92  6E47               	movwf	(??_floorf+2)^0,c
  4780  002F94  1C4E               	comf	(floorf@m+3)^0,w,c
  4781  002F96  6E48               	movwf	(??_floorf+3)^0,c
  4782  002F98  5045               	movf	??_floorf^0,w,c
  4783  002F9A  1651               	andwf	floorf@u^0,f,c
  4784  002F9C  5046               	movf	(??_floorf+1)^0,w,c
  4785  002F9E  1652               	andwf	(floorf@u+1)^0,f,c
  4786  002FA0  5047               	movf	(??_floorf+2)^0,w,c
  4787  002FA2  1653               	andwf	(floorf@u+2)^0,f,c
  4788  002FA4  5048               	movf	(??_floorf+3)^0,w,c
  4789  002FA6  1654               	andwf	(floorf@u+3)^0,f,c
  4790  002FA8  EF1A  F018         	goto	l3564
  4791  002FAC                     l3556:
  4792  002FAC  C051  F045         	movff	floorf@u,??_floorf
  4793  002FB0  C052  F046         	movff	floorf@u+1,??_floorf+1
  4794  002FB4  C053  F047         	movff	floorf@u+2,??_floorf+2
  4795  002FB8  C054  F048         	movff	floorf@u+3,??_floorf+3
  4796  002FBC  0E20               	movlw	32
  4797  002FBE  EFE6  F017         	goto	u3810
  4798  002FC2                     u3815:
  4799  002FC2  90D8               	bcf	status,0,c
  4800  002FC4  3248               	rrcf	(??_floorf+3)^0,f,c
  4801  002FC6  3247               	rrcf	(??_floorf+2)^0,f,c
  4802  002FC8  3246               	rrcf	(??_floorf+1)^0,f,c
  4803  002FCA  3245               	rrcf	??_floorf^0,f,c
  4804  002FCC                     u3810:
  4805  002FCC  2EE8               	decfsz	wreg,f,c
  4806  002FCE  EFE1  F017         	goto	u3815
  4807  002FD2  5045               	movf	??_floorf^0,w,c
  4808  002FD4  1046               	iorwf	(??_floorf+1)^0,w,c
  4809  002FD6  1047               	iorwf	(??_floorf+2)^0,w,c
  4810  002FD8  1048               	iorwf	(??_floorf+3)^0,w,c
  4811  002FDA  A4D8               	btfss	status,2,c
  4812  002FDC  EFF2  F017         	goto	u3821
  4813  002FE0  EFF4  F017         	goto	u3820
  4814  002FE4                     u3821:
  4815  002FE4  EFFE  F017         	goto	l3560
  4816  002FE8                     u3820:
  4817  002FE8  0E00               	movlw	0
  4818  002FEA  6E51               	movwf	floorf@u^0,c
  4819  002FEC  0E00               	movlw	0
  4820  002FEE  6E52               	movwf	(floorf@u+1)^0,c
  4821  002FF0  0E00               	movlw	0
  4822  002FF2  6E53               	movwf	(floorf@u+2)^0,c
  4823  002FF4  0E00               	movlw	0
  4824  002FF6  6E54               	movwf	(floorf@u+3)^0,c
  4825  002FF8  EF1A  F018         	goto	l3564
  4826  002FFC                     l3560:
  4827  002FFC  90D8               	bcf	status,0,c
  4828  002FFE  3451               	rlcf	floorf@u^0,w,c
  4829  003000  6E45               	movwf	??_floorf^0,c
  4830  003002  3452               	rlcf	(floorf@u+1)^0,w,c
  4831  003004  6E46               	movwf	(??_floorf+1)^0,c
  4832  003006  3453               	rlcf	(floorf@u+2)^0,w,c
  4833  003008  6E47               	movwf	(??_floorf+2)^0,c
  4834  00300A  3454               	rlcf	(floorf@u+3)^0,w,c
  4835  00300C  6E48               	movwf	(??_floorf+3)^0,c
  4836  00300E  5045               	movf	??_floorf^0,w,c
  4837  003010  1046               	iorwf	(??_floorf+1)^0,w,c
  4838  003012  1047               	iorwf	(??_floorf+2)^0,w,c
  4839  003014  1048               	iorwf	(??_floorf+3)^0,w,c
  4840  003016  B4D8               	btfsc	status,2,c
  4841  003018  EF10  F018         	goto	u3831
  4842  00301C  EF12  F018         	goto	u3830
  4843  003020                     u3831:
  4844  003020  EF1A  F018         	goto	l3564
  4845  003024                     u3830:
  4846  003024  0E00               	movlw	0
  4847  003026  6E51               	movwf	floorf@u^0,c
  4848  003028  0E00               	movlw	0
  4849  00302A  6E52               	movwf	(floorf@u+1)^0,c
  4850  00302C  0E80               	movlw	128
  4851  00302E  6E53               	movwf	(floorf@u+2)^0,c
  4852  003030  0EBF               	movlw	191
  4853  003032  6E54               	movwf	(floorf@u+3)^0,c
  4854  003034                     l3564:
  4855  003034  C051  F041         	movff	floorf@u,?_floorf
  4856  003038  C052  F042         	movff	floorf@u+1,?_floorf+1
  4857  00303C  C053  F043         	movff	floorf@u+2,?_floorf+2
  4858  003040  C054  F044         	movff	floorf@u+3,?_floorf+3
  4859  003044                     l1062:
  4860  003044  0012               	return		;funcret
  4861  003046                     __end_of_floorf:
  4862                           	callstack 0
  4863                           
  4864 ;; *************** function ___fpclassifyf *****************
  4865 ;; Defined at:
  4866 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/__fpclassifyf.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;  x               4    0[COMRAM] float 
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;  u               4   10[COMRAM] struct .
  4871 ;;  e               2    8[COMRAM] int 
  4872 ;; Return value:  Size  Location     Type
  4873 ;;                  2    0[COMRAM] int 
  4874 ;; Registers used:
  4875 ;;		wreg, status,2, status,0
  4876 ;; Tracked objects:
  4877 ;;		On entry : 0/0
  4878 ;;		On exit  : 0/0
  4879 ;;		Unchanged: 0/0
  4880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4881 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4882 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4883 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4884 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4885 ;;Total ram usage:       14 bytes
  4886 ;; Hardware stack levels used: 1
  4887 ;; This function calls:
  4888 ;;		Nothing
  4889 ;; This function is called by:
  4890 ;;		_efgtoa
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           	psect	text16
  4895  003684                     __ptext16:
  4896                           	callstack 0
  4897  003684                     ___fpclassifyf:
  4898                           	callstack 25
  4899  003684  C0E7  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4900  003688  C0E8  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4901  00368C  C0E9  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4902  003690  C0EA  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4903  003694  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4904  003698  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4905  00369C  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4906  0036A0  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4907  0036A4  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4908  0036A8  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4909  0036AC  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4910  0036B0  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4911  0036B4  0E18               	movlw	24
  4912  0036B6  EF62  F01B         	goto	u3640
  4913  0036BA                     u3645:
  4914  0036BA  90D8               	bcf	status,0,c
  4915  0036BC  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4916  0036BE  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4917  0036C0  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4918  0036C2  3205               	rrcf	??___fpclassifyf^0,f,c
  4919  0036C4                     u3640:
  4920  0036C4  2EE8               	decfsz	wreg,f,c
  4921  0036C6  EF5D  F01B         	goto	u3645
  4922  0036CA  5005               	movf	??___fpclassifyf^0,w,c
  4923  0036CC  6E09               	movwf	___fpclassifyf@e^0,c
  4924  0036CE  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4925  0036D0  5009               	movf	___fpclassifyf@e^0,w,c
  4926  0036D2  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4927  0036D4  A4D8               	btfss	status,2,c
  4928  0036D6  EF6F  F01B         	goto	u3651
  4929  0036DA  EF71  F01B         	goto	u3650
  4930  0036DE                     u3651:
  4931  0036DE  EF91  F01B         	goto	l3516
  4932  0036E2                     u3650:
  4933  0036E2  90D8               	bcf	status,0,c
  4934  0036E4  340B               	rlcf	___fpclassifyf@u^0,w,c
  4935  0036E6  6E05               	movwf	??___fpclassifyf^0,c
  4936  0036E8  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4937  0036EA  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4938  0036EC  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4939  0036EE  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4940  0036F0  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4941  0036F2  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4942  0036F4  5005               	movf	??___fpclassifyf^0,w,c
  4943  0036F6  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4944  0036F8  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4945  0036FA  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4946  0036FC  A4D8               	btfss	status,2,c
  4947  0036FE  EF83  F01B         	goto	u3661
  4948  003702  EF85  F01B         	goto	u3660
  4949  003706                     u3661:
  4950  003706  EF8B  F01B         	goto	l3512
  4951  00370A                     u3660:
  4952  00370A  0E00               	movlw	0
  4953  00370C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4954  00370E  0E02               	movlw	2
  4955  003710  6E01               	movwf	?___fpclassifyf^0,c
  4956  003712  EFC0  F01B         	goto	l1030
  4957  003716                     l3512:
  4958  003716  0E00               	movlw	0
  4959  003718  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4960  00371A  0E03               	movlw	3
  4961  00371C  6E01               	movwf	?___fpclassifyf^0,c
  4962  00371E  EFC0  F01B         	goto	l1030
  4963  003722                     l3516:
  4964  003722  2809               	incf	___fpclassifyf@e^0,w,c
  4965  003724  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4966  003726  A4D8               	btfss	status,2,c
  4967  003728  EF98  F01B         	goto	u3671
  4968  00372C  EF9A  F01B         	goto	u3670
  4969  003730                     u3671:
  4970  003730  EFBC  F01B         	goto	l3522
  4971  003734                     u3670:
  4972  003734  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4973  003738  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4974  00373C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4975  003740  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4976  003744  0E09               	movlw	9
  4977  003746                     u3685:
  4978  003746  90D8               	bcf	status,0,c
  4979  003748  3605               	rlcf	??___fpclassifyf^0,f,c
  4980  00374A  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4981  00374C  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4982  00374E  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4983  003750  2EE8               	decfsz	wreg,f,c
  4984  003752  EFA3  F01B         	goto	u3685
  4985  003756  5005               	movf	??___fpclassifyf^0,w,c
  4986  003758  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4987  00375A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4988  00375C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4989  00375E  B4D8               	btfsc	status,2,c
  4990  003760  EFB4  F01B         	goto	u3691
  4991  003764  EFB7  F01B         	goto	u3690
  4992  003768                     u3691:
  4993  003768  0E01               	movlw	1
  4994  00376A  EFB8  F01B         	goto	u3700
  4995  00376E                     u3690:
  4996  00376E  0E00               	movlw	0
  4997  003770                     u3700:
  4998  003770  6E01               	movwf	?___fpclassifyf^0,c
  4999  003772  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5000  003774  EFC0  F01B         	goto	l1030
  5001  003778                     l3522:
  5002  003778  0E00               	movlw	0
  5003  00377A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5004  00377C  0E04               	movlw	4
  5005  00377E  6E01               	movwf	?___fpclassifyf^0,c
  5006  003780                     l1030:
  5007  003780  0012               	return		;funcret
  5008  003782                     __end_of___fpclassifyf:
  5009                           	callstack 0
  5010                           
  5011 ;; *************** function ___fltol *****************
  5012 ;; Defined at:
  5013 ;;		line 43 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/fltol.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;  f1              4    0[COMRAM] int 
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;  exp1            1    9[COMRAM] unsigned char 
  5018 ;;  sign1           1    8[COMRAM] unsigned char 
  5019 ;; Return value:  Size  Location     Type
  5020 ;;                  4    0[COMRAM] long 
  5021 ;; Registers used:
  5022 ;;		wreg, status,2, status,0
  5023 ;; Tracked objects:
  5024 ;;		On entry : 0/0
  5025 ;;		On exit  : 0/0
  5026 ;;		Unchanged: 0/0
  5027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5028 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5029 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5030 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5031 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5032 ;;Total ram usage:       10 bytes
  5033 ;; Hardware stack levels used: 1
  5034 ;; This function calls:
  5035 ;;		Nothing
  5036 ;; This function is called by:
  5037 ;;		_efgtoa
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040                           
  5041                           	psect	text17
  5042  00347A                     __ptext17:
  5043                           	callstack 0
  5044  00347A                     ___fltol:
  5045                           	callstack 25
  5046  00347A  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5047  00347C  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5048  00347E  6E0A               	movwf	___fltol@exp1^0,c
  5049  003480  500A               	movf	___fltol@exp1^0,w,c
  5050  003482  A4D8               	btfss	status,2,c
  5051  003484  EF46  F01A         	goto	u3531
  5052  003488  EF48  F01A         	goto	u3530
  5053  00348C                     u3531:
  5054  00348C  EF52  F01A         	goto	l3444
  5055  003490                     u3530:
  5056  003490                     l3440:
  5057  003490  0E00               	movlw	0
  5058  003492  6E01               	movwf	?___fltol^0,c
  5059  003494  0E00               	movlw	0
  5060  003496  6E02               	movwf	(?___fltol+1)^0,c
  5061  003498  0E00               	movlw	0
  5062  00349A  6E03               	movwf	(?___fltol+2)^0,c
  5063  00349C  0E00               	movlw	0
  5064  00349E  6E04               	movwf	(?___fltol+3)^0,c
  5065  0034A0  EFBF  F01A         	goto	l471
  5066  0034A4                     l3444:
  5067  0034A4  C001  F005         	movff	___fltol@f1,??___fltol
  5068  0034A8  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5069  0034AC  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5070  0034B0  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5071  0034B4  0E20               	movlw	32
  5072  0034B6  EF62  F01A         	goto	u3540
  5073  0034BA                     u3545:
  5074  0034BA  90D8               	bcf	status,0,c
  5075  0034BC  3208               	rrcf	(??___fltol+3)^0,f,c
  5076  0034BE  3207               	rrcf	(??___fltol+2)^0,f,c
  5077  0034C0  3206               	rrcf	(??___fltol+1)^0,f,c
  5078  0034C2  3205               	rrcf	??___fltol^0,f,c
  5079  0034C4                     u3540:
  5080  0034C4  2EE8               	decfsz	wreg,f,c
  5081  0034C6  EF5D  F01A         	goto	u3545
  5082  0034CA  5005               	movf	??___fltol^0,w,c
  5083  0034CC  6E09               	movwf	___fltol@sign1^0,c
  5084  0034CE  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5085  0034D0  0EFF               	movlw	255
  5086  0034D2  1601               	andwf	___fltol@f1^0,f,c
  5087  0034D4  0EFF               	movlw	255
  5088  0034D6  1602               	andwf	(___fltol@f1+1)^0,f,c
  5089  0034D8  0EFF               	movlw	255
  5090  0034DA  1603               	andwf	(___fltol@f1+2)^0,f,c
  5091  0034DC  0E00               	movlw	0
  5092  0034DE  1604               	andwf	(___fltol@f1+3)^0,f,c
  5093  0034E0  0E96               	movlw	150
  5094  0034E2  5E0A               	subwf	___fltol@exp1^0,f,c
  5095  0034E4  BE0A               	btfsc	___fltol@exp1^0,7,c
  5096  0034E6  EF79  F01A         	goto	u3550
  5097  0034EA  EF77  F01A         	goto	u3551
  5098  0034EE                     u3551:
  5099  0034EE  EF8F  F01A         	goto	l3464
  5100  0034F2                     u3550:
  5101  0034F2  500A               	movf	___fltol@exp1^0,w,c
  5102  0034F4  0A80               	xorlw	128
  5103  0034F6  0F97               	addlw	151
  5104  0034F8  B0D8               	btfsc	status,0,c
  5105  0034FA  EF81  F01A         	goto	u3561
  5106  0034FE  EF83  F01A         	goto	u3560
  5107  003502                     u3561:
  5108  003502  EF85  F01A         	goto	l3460
  5109  003506                     u3560:
  5110  003506  EF48  F01A         	goto	l3440
  5111  00350A                     l3460:
  5112  00350A  90D8               	bcf	status,0,c
  5113  00350C  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5114  00350E  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5115  003510  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5116  003512  3201               	rrcf	___fltol@f1^0,f,c
  5117  003514  3E0A               	incfsz	___fltol@exp1^0,f,c
  5118  003516  EF85  F01A         	goto	l3460
  5119  00351A  EFA7  F01A         	goto	l3474
  5120  00351E                     l3464:
  5121  00351E  0E1F               	movlw	31
  5122  003520  640A               	cpfsgt	___fltol@exp1^0,c
  5123  003522  EF95  F01A         	goto	u3571
  5124  003526  EF97  F01A         	goto	u3570
  5125  00352A                     u3571:
  5126  00352A  EF9F  F01A         	goto	l3472
  5127  00352E                     u3570:
  5128  00352E  EF48  F01A         	goto	l3440
  5129  003532                     l3470:
  5130  003532  90D8               	bcf	status,0,c
  5131  003534  3601               	rlcf	___fltol@f1^0,f,c
  5132  003536  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5133  003538  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5134  00353A  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5135  00353C  060A               	decf	___fltol@exp1^0,f,c
  5136  00353E                     l3472:
  5137  00353E  500A               	movf	___fltol@exp1^0,w,c
  5138  003540  A4D8               	btfss	status,2,c
  5139  003542  EFA5  F01A         	goto	u3581
  5140  003546  EFA7  F01A         	goto	u3580
  5141  00354A                     u3581:
  5142  00354A  EF99  F01A         	goto	l3470
  5143  00354E                     u3580:
  5144  00354E                     l3474:
  5145  00354E  5009               	movf	___fltol@sign1^0,w,c
  5146  003550  B4D8               	btfsc	status,2,c
  5147  003552  EFAD  F01A         	goto	u3591
  5148  003556  EFAF  F01A         	goto	u3590
  5149  00355A                     u3591:
  5150  00355A  EFB7  F01A         	goto	l3478
  5151  00355E                     u3590:
  5152  00355E  1E04               	comf	(___fltol@f1+3)^0,f,c
  5153  003560  1E03               	comf	(___fltol@f1+2)^0,f,c
  5154  003562  1E02               	comf	(___fltol@f1+1)^0,f,c
  5155  003564  6C01               	negf	___fltol@f1^0,c
  5156  003566  0E00               	movlw	0
  5157  003568  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5158  00356A  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5159  00356C  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5160  00356E                     l3478:
  5161  00356E  C001  F001         	movff	___fltol@f1,?___fltol
  5162  003572  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5163  003576  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5164  00357A  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5165  00357E                     l471:
  5166  00357E  0012               	return		;funcret
  5167  003580                     __end_of___fltol:
  5168                           	callstack 0
  5169                           
  5170 ;; *************** function ___flsub *****************
  5171 ;; Defined at:
  5172 ;;		line 245 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
  5173 ;; Parameters:    Size  Location     Type
  5174 ;;  b               4   39[COMRAM] long 
  5175 ;;  a               4   43[COMRAM] long 
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;		None
  5178 ;; Return value:  Size  Location     Type
  5179 ;;                  4   39[COMRAM] long 
  5180 ;; Registers used:
  5181 ;;		wreg, status,2, status,0, cstack
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5187 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5190 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5191 ;;Total ram usage:        8 bytes
  5192 ;; Hardware stack levels used: 1
  5193 ;; Hardware stack levels required when called: 1
  5194 ;; This function calls:
  5195 ;;		___fladd
  5196 ;; This function is called by:
  5197 ;;		_efgtoa
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200                           
  5201                           	psect	text18
  5202  0040FC                     __ptext18:
  5203                           	callstack 0
  5204  0040FC                     ___flsub:
  5205                           	callstack 24
  5206  0040FC  0E00               	movlw	0
  5207  0040FE  1A2C               	xorwf	___flsub@a^0,f,c
  5208  004100  0E00               	movlw	0
  5209  004102  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  5210  004104  0E00               	movlw	0
  5211  004106  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  5212  004108  0E80               	movlw	128
  5213  00410A  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  5214  00410C  C028  F001         	movff	___flsub@b,___fladd@b
  5215  004110  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  5216  004114  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  5217  004118  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  5218  00411C  C02C  F005         	movff	___flsub@a,___fladd@a
  5219  004120  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  5220  004124  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  5221  004128  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  5222  00412C  ECD8  F010         	call	___fladd	;wreg free
  5223  004130  C001  F028         	movff	?___fladd,?___flsub
  5224  004134  C002  F029         	movff	?___fladd+1,?___flsub+1
  5225  004138  C003  F02A         	movff	?___fladd+2,?___flsub+2
  5226  00413C  C004  F02B         	movff	?___fladd+3,?___flsub+3
  5227  004140  0012               	return		;funcret
  5228  004142                     __end_of___flsub:
  5229                           	callstack 0
  5230                           
  5231 ;; *************** function ___fladd *****************
  5232 ;; Defined at:
  5233 ;;		line 10 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;  b               4    0[COMRAM] long 
  5236 ;;  a               4    4[COMRAM] long 
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;  grs             1   15[COMRAM] unsigned char 
  5239 ;;  bexp            1   14[COMRAM] unsigned char 
  5240 ;;  aexp            1   13[COMRAM] unsigned char 
  5241 ;;  signs           1   12[COMRAM] unsigned char 
  5242 ;; Return value:  Size  Location     Type
  5243 ;;                  4    0[COMRAM] unsigned char 
  5244 ;; Registers used:
  5245 ;;		wreg, status,2, status,0
  5246 ;; Tracked objects:
  5247 ;;		On entry : 0/0
  5248 ;;		On exit  : 0/0
  5249 ;;		Unchanged: 0/0
  5250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5251 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5252 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5253 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5254 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5255 ;;Total ram usage:       16 bytes
  5256 ;; Hardware stack levels used: 1
  5257 ;; This function calls:
  5258 ;;		Nothing
  5259 ;; This function is called by:
  5260 ;;		___flsub
  5261 ;;		_efgtoa
  5262 ;; This function uses a non-reentrant model
  5263 ;;
  5264                           
  5265                           	psect	text19
  5266  0021B0                     __ptext19:
  5267                           	callstack 0
  5268  0021B0                     ___fladd:
  5269                           	callstack 24
  5270  0021B0  5004               	movf	(___fladd@b+3)^0,w,c
  5271  0021B2  0B80               	andlw	128
  5272  0021B4  6E0D               	movwf	___fladd@signs^0,c
  5273  0021B6  5004               	movf	(___fladd@b+3)^0,w,c
  5274  0021B8  2404               	addwf	(___fladd@b+3)^0,w,c
  5275  0021BA  6E0F               	movwf	___fladd@bexp^0,c
  5276  0021BC  AE03               	btfss	(___fladd@b+2)^0,7,c
  5277  0021BE  EFE3  F010         	goto	u2441
  5278  0021C2  EFE5  F010         	goto	u2440
  5279  0021C6                     u2441:
  5280  0021C6  EFE6  F010         	goto	l2768
  5281  0021CA                     u2440:
  5282  0021CA  800F               	bsf	___fladd@bexp^0,0,c
  5283  0021CC                     l2768:
  5284  0021CC  500F               	movf	___fladd@bexp^0,w,c
  5285  0021CE  B4D8               	btfsc	status,2,c
  5286  0021D0  EFEC  F010         	goto	u2451
  5287  0021D4  EFEE  F010         	goto	u2450
  5288  0021D8                     u2451:
  5289  0021D8  EF03  F011         	goto	l2778
  5290  0021DC                     u2450:
  5291  0021DC  280F               	incf	___fladd@bexp^0,w,c
  5292  0021DE  A4D8               	btfss	status,2,c
  5293  0021E0  EFF4  F010         	goto	u2461
  5294  0021E4  EFF6  F010         	goto	u2460
  5295  0021E8                     u2461:
  5296  0021E8  EFFE  F010         	goto	l2774
  5297  0021EC                     u2460:
  5298  0021EC  0E00               	movlw	0
  5299  0021EE  6E01               	movwf	___fladd@b^0,c
  5300  0021F0  0E00               	movlw	0
  5301  0021F2  6E02               	movwf	(___fladd@b+1)^0,c
  5302  0021F4  0E00               	movlw	0
  5303  0021F6  6E03               	movwf	(___fladd@b+2)^0,c
  5304  0021F8  0E00               	movlw	0
  5305  0021FA  6E04               	movwf	(___fladd@b+3)^0,c
  5306  0021FC                     l2774:
  5307  0021FC  8E03               	bsf	(___fladd@b+2)^0,7,c
  5308  0021FE  0E00               	movlw	0
  5309  002200  6E04               	movwf	(___fladd@b+3)^0,c
  5310  002202  EF0B  F011         	goto	l2780
  5311  002206                     l2778:
  5312  002206  0E00               	movlw	0
  5313  002208  6E01               	movwf	___fladd@b^0,c
  5314  00220A  0E00               	movlw	0
  5315  00220C  6E02               	movwf	(___fladd@b+1)^0,c
  5316  00220E  0E00               	movlw	0
  5317  002210  6E03               	movwf	(___fladd@b+2)^0,c
  5318  002212  0E00               	movlw	0
  5319  002214  6E04               	movwf	(___fladd@b+3)^0,c
  5320  002216                     l2780:
  5321  002216  5008               	movf	(___fladd@a+3)^0,w,c
  5322  002218  0B80               	andlw	128
  5323  00221A  6E0E               	movwf	___fladd@aexp^0,c
  5324  00221C  500D               	movf	___fladd@signs^0,w,c
  5325  00221E  180E               	xorwf	___fladd@aexp^0,w,c
  5326  002220  B4D8               	btfsc	status,2,c
  5327  002222  EF15  F011         	goto	u2471
  5328  002226  EF17  F011         	goto	u2470
  5329  00222A                     u2471:
  5330  00222A  EF18  F011         	goto	l2786
  5331  00222E                     u2470:
  5332  00222E  8C0D               	bsf	___fladd@signs^0,6,c
  5333  002230                     l2786:
  5334  002230  5008               	movf	(___fladd@a+3)^0,w,c
  5335  002232  2408               	addwf	(___fladd@a+3)^0,w,c
  5336  002234  6E0E               	movwf	___fladd@aexp^0,c
  5337  002236  AE07               	btfss	(___fladd@a+2)^0,7,c
  5338  002238  EF20  F011         	goto	u2481
  5339  00223C  EF22  F011         	goto	u2480
  5340  002240                     u2481:
  5341  002240  EF23  F011         	goto	l2792
  5342  002244                     u2480:
  5343  002244  800E               	bsf	___fladd@aexp^0,0,c
  5344  002246                     l2792:
  5345  002246  500E               	movf	___fladd@aexp^0,w,c
  5346  002248  B4D8               	btfsc	status,2,c
  5347  00224A  EF29  F011         	goto	u2491
  5348  00224E  EF2B  F011         	goto	u2490
  5349  002252                     u2491:
  5350  002252  EF40  F011         	goto	l2802
  5351  002256                     u2490:
  5352  002256  280E               	incf	___fladd@aexp^0,w,c
  5353  002258  A4D8               	btfss	status,2,c
  5354  00225A  EF31  F011         	goto	u2501
  5355  00225E  EF33  F011         	goto	u2500
  5356  002262                     u2501:
  5357  002262  EF3B  F011         	goto	l2798
  5358  002266                     u2500:
  5359  002266  0E00               	movlw	0
  5360  002268  6E05               	movwf	___fladd@a^0,c
  5361  00226A  0E00               	movlw	0
  5362  00226C  6E06               	movwf	(___fladd@a+1)^0,c
  5363  00226E  0E00               	movlw	0
  5364  002270  6E07               	movwf	(___fladd@a+2)^0,c
  5365  002272  0E00               	movlw	0
  5366  002274  6E08               	movwf	(___fladd@a+3)^0,c
  5367  002276                     l2798:
  5368  002276  8E07               	bsf	(___fladd@a+2)^0,7,c
  5369  002278  0E00               	movlw	0
  5370  00227A  6E08               	movwf	(___fladd@a+3)^0,c
  5371  00227C  EF48  F011         	goto	l2804
  5372  002280                     l2802:
  5373  002280  0E00               	movlw	0
  5374  002282  6E05               	movwf	___fladd@a^0,c
  5375  002284  0E00               	movlw	0
  5376  002286  6E06               	movwf	(___fladd@a+1)^0,c
  5377  002288  0E00               	movlw	0
  5378  00228A  6E07               	movwf	(___fladd@a+2)^0,c
  5379  00228C  0E00               	movlw	0
  5380  00228E  6E08               	movwf	(___fladd@a+3)^0,c
  5381  002290                     l2804:
  5382  002290  500F               	movf	___fladd@bexp^0,w,c
  5383  002292  5C0E               	subwf	___fladd@aexp^0,w,c
  5384  002294  B0D8               	btfsc	status,0,c
  5385  002296  EF4F  F011         	goto	u2511
  5386  00229A  EF51  F011         	goto	u2510
  5387  00229E                     u2511:
  5388  00229E  EF78  F011         	goto	l2840
  5389  0022A2                     u2510:
  5390  0022A2  AC0D               	btfss	___fladd@signs^0,6,c
  5391  0022A4  EF56  F011         	goto	u2521
  5392  0022A8  EF58  F011         	goto	u2520
  5393  0022AC                     u2521:
  5394  0022AC  EF5A  F011         	goto	l2810
  5395  0022B0                     u2520:
  5396  0022B0  0E80               	movlw	128
  5397  0022B2  1A0D               	xorwf	___fladd@signs^0,f,c
  5398  0022B4                     l2810:
  5399  0022B4  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5400  0022B8  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5401  0022BC  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5402  0022C0  C001  F010         	movff	___fladd@b,___fladd@grs
  5403  0022C4  C005  F001         	movff	___fladd@a,___fladd@b
  5404  0022C8  C010  F005         	movff	___fladd@grs,___fladd@a
  5405  0022CC  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5406  0022D0  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5407  0022D4  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5408  0022D8  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5409  0022DC  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5410  0022E0  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5411  0022E4  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5412  0022E8  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5413  0022EC  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5414  0022F0                     l2840:
  5415  0022F0  0E00               	movlw	0
  5416  0022F2  6E10               	movwf	___fladd@grs^0,c
  5417  0022F4  500F               	movf	___fladd@bexp^0,w,c
  5418  0022F6  C00E  F009         	movff	___fladd@aexp,??___fladd
  5419  0022FA  6A0A               	clrf	(??___fladd+1)^0,c
  5420  0022FC  5E09               	subwf	??___fladd^0,f,c
  5421  0022FE  0E00               	movlw	0
  5422  002300  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5423  002302  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5424  002304  EF8D  F011         	goto	u2531
  5425  002308  500A               	movf	(??___fladd+1)^0,w,c
  5426  00230A  E109               	bnz	u2530
  5427  00230C  0E1A               	movlw	26
  5428  00230E  5C09               	subwf	??___fladd^0,w,c
  5429  002310  A0D8               	btfss	status,0,c
  5430  002312  EF8D  F011         	goto	u2531
  5431  002316  EF8F  F011         	goto	u2530
  5432  00231A                     u2531:
  5433  00231A  EFC6  F011         	goto	l703
  5434  00231E                     u2530:
  5435  00231E  5001               	movf	___fladd@b^0,w,c
  5436  002320  1002               	iorwf	(___fladd@b+1)^0,w,c
  5437  002322  1003               	iorwf	(___fladd@b+2)^0,w,c
  5438  002324  1004               	iorwf	(___fladd@b+3)^0,w,c
  5439  002326  A4D8               	btfss	status,2,c
  5440  002328  EF98  F011         	goto	u2541
  5441  00232C  EF9B  F011         	goto	u2540
  5442  002330                     u2541:
  5443  002330  0E01               	movlw	1
  5444  002332  EF9C  F011         	goto	u2550
  5445  002336                     u2540:
  5446  002336  0E00               	movlw	0
  5447  002338                     u2550:
  5448  002338  6E10               	movwf	___fladd@grs^0,c
  5449  00233A  0E00               	movlw	0
  5450  00233C  6E01               	movwf	___fladd@b^0,c
  5451  00233E  0E00               	movlw	0
  5452  002340  6E02               	movwf	(___fladd@b+1)^0,c
  5453  002342  0E00               	movlw	0
  5454  002344  6E03               	movwf	(___fladd@b+2)^0,c
  5455  002346  0E00               	movlw	0
  5456  002348  6E04               	movwf	(___fladd@b+3)^0,c
  5457  00234A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5458  00234E  EFCF  F011         	goto	l702
  5459  002352                     l704:
  5460  002352  A010               	btfss	___fladd@grs^0,0,c
  5461  002354  EFAE  F011         	goto	u2561
  5462  002358  EFB0  F011         	goto	u2560
  5463  00235C                     u2561:
  5464  00235C  EFB6  F011         	goto	l2852
  5465  002360                     u2560:
  5466  002360  90D8               	bcf	status,0,c
  5467  002362  3010               	rrcf	___fladd@grs^0,w,c
  5468  002364  0901               	iorlw	1
  5469  002366  6E10               	movwf	___fladd@grs^0,c
  5470  002368  EFB8  F011         	goto	l2854
  5471  00236C                     l2852:
  5472  00236C  90D8               	bcf	status,0,c
  5473  00236E  3210               	rrcf	___fladd@grs^0,f,c
  5474  002370                     l2854:
  5475  002370  A001               	btfss	___fladd@b^0,0,c
  5476  002372  EFBD  F011         	goto	u2571
  5477  002376  EFBF  F011         	goto	u2570
  5478  00237A                     u2571:
  5479  00237A  EFC0  F011         	goto	l2858
  5480  00237E                     u2570:
  5481  00237E  8E10               	bsf	___fladd@grs^0,7,c
  5482  002380                     l2858:
  5483  002380  3404               	rlcf	(___fladd@b+3)^0,w,c
  5484  002382  3204               	rrcf	(___fladd@b+3)^0,f,c
  5485  002384  3203               	rrcf	(___fladd@b+2)^0,f,c
  5486  002386  3202               	rrcf	(___fladd@b+1)^0,f,c
  5487  002388  3201               	rrcf	___fladd@b^0,f,c
  5488  00238A  2A0F               	incf	___fladd@bexp^0,f,c
  5489  00238C                     l703:
  5490  00238C  500E               	movf	___fladd@aexp^0,w,c
  5491  00238E  5C0F               	subwf	___fladd@bexp^0,w,c
  5492  002390  A0D8               	btfss	status,0,c
  5493  002392  EFCD  F011         	goto	u2581
  5494  002396  EFCF  F011         	goto	u2580
  5495  00239A                     u2581:
  5496  00239A  EFA9  F011         	goto	l704
  5497  00239E                     u2580:
  5498  00239E                     l702:
  5499  00239E  BC0D               	btfsc	___fladd@signs^0,6,c
  5500  0023A0  EFD4  F011         	goto	u2591
  5501  0023A4  EFD6  F011         	goto	u2590
  5502  0023A8                     u2591:
  5503  0023A8  EF16  F012         	goto	l2886
  5504  0023AC                     u2590:
  5505  0023AC  500F               	movf	___fladd@bexp^0,w,c
  5506  0023AE  A4D8               	btfss	status,2,c
  5507  0023B0  EFDC  F011         	goto	u2601
  5508  0023B4  EFDE  F011         	goto	u2600
  5509  0023B8                     u2601:
  5510  0023B8  EFE8  F011         	goto	l2868
  5511  0023BC                     u2600:
  5512  0023BC  0E00               	movlw	0
  5513  0023BE  6E01               	movwf	?___fladd^0,c
  5514  0023C0  0E00               	movlw	0
  5515  0023C2  6E02               	movwf	(?___fladd+1)^0,c
  5516  0023C4  0E00               	movlw	0
  5517  0023C6  6E03               	movwf	(?___fladd+2)^0,c
  5518  0023C8  0E00               	movlw	0
  5519  0023CA  6E04               	movwf	(?___fladd+3)^0,c
  5520  0023CC  EF37  F013         	goto	l711
  5521  0023D0                     l2868:
  5522  0023D0  5005               	movf	___fladd@a^0,w,c
  5523  0023D2  2601               	addwf	___fladd@b^0,f,c
  5524  0023D4  5006               	movf	(___fladd@a+1)^0,w,c
  5525  0023D6  2202               	addwfc	(___fladd@b+1)^0,f,c
  5526  0023D8  5007               	movf	(___fladd@a+2)^0,w,c
  5527  0023DA  2203               	addwfc	(___fladd@b+2)^0,f,c
  5528  0023DC  5008               	movf	(___fladd@a+3)^0,w,c
  5529  0023DE  2204               	addwfc	(___fladd@b+3)^0,f,c
  5530  0023E0  A004               	btfss	(___fladd@b+3)^0,0,c
  5531  0023E2  EFF5  F011         	goto	u2611
  5532  0023E6  EFF7  F011         	goto	u2610
  5533  0023EA                     u2611:
  5534  0023EA  EFA3  F012         	goto	l2922
  5535  0023EE                     u2610:
  5536  0023EE  A010               	btfss	___fladd@grs^0,0,c
  5537  0023F0  EFFC  F011         	goto	u2621
  5538  0023F4  EFFE  F011         	goto	u2620
  5539  0023F8                     u2621:
  5540  0023F8  EF04  F012         	goto	l2876
  5541  0023FC                     u2620:
  5542  0023FC  90D8               	bcf	status,0,c
  5543  0023FE  3010               	rrcf	___fladd@grs^0,w,c
  5544  002400  0901               	iorlw	1
  5545  002402  6E10               	movwf	___fladd@grs^0,c
  5546  002404  EF06  F012         	goto	l2878
  5547  002408                     l2876:
  5548  002408  90D8               	bcf	status,0,c
  5549  00240A  3210               	rrcf	___fladd@grs^0,f,c
  5550  00240C                     l2878:
  5551  00240C  A001               	btfss	___fladd@b^0,0,c
  5552  00240E  EF0B  F012         	goto	u2631
  5553  002412  EF0D  F012         	goto	u2630
  5554  002416                     u2631:
  5555  002416  EF0E  F012         	goto	l2882
  5556  00241A                     u2630:
  5557  00241A  8E10               	bsf	___fladd@grs^0,7,c
  5558  00241C                     l2882:
  5559  00241C  3404               	rlcf	(___fladd@b+3)^0,w,c
  5560  00241E  3204               	rrcf	(___fladd@b+3)^0,f,c
  5561  002420  3203               	rrcf	(___fladd@b+2)^0,f,c
  5562  002422  3202               	rrcf	(___fladd@b+1)^0,f,c
  5563  002424  3201               	rrcf	___fladd@b^0,f,c
  5564  002426  2A0F               	incf	___fladd@bexp^0,f,c
  5565  002428  EFA3  F012         	goto	l2922
  5566  00242C                     l2886:
  5567  00242C  5005               	movf	___fladd@a^0,w,c
  5568  00242E  5C01               	subwf	___fladd@b^0,w,c
  5569  002430  5006               	movf	(___fladd@a+1)^0,w,c
  5570  002432  5802               	subwfb	(___fladd@b+1)^0,w,c
  5571  002434  5007               	movf	(___fladd@a+2)^0,w,c
  5572  002436  5803               	subwfb	(___fladd@b+2)^0,w,c
  5573  002438  5004               	movf	(___fladd@b+3)^0,w,c
  5574  00243A  0A80               	xorlw	128
  5575  00243C  6E09               	movwf	??___fladd^0,c
  5576  00243E  5008               	movf	(___fladd@a+3)^0,w,c
  5577  002440  0A80               	xorlw	128
  5578  002442  5809               	subwfb	??___fladd^0,w,c
  5579  002444  B0D8               	btfsc	status,0,c
  5580  002446  EF27  F012         	goto	u2641
  5581  00244A  EF29  F012         	goto	u2640
  5582  00244E                     u2641:
  5583  00244E  EF54  F012         	goto	l2896
  5584  002452                     u2640:
  5585  002452  5001               	movf	___fladd@b^0,w,c
  5586  002454  5C05               	subwf	___fladd@a^0,w,c
  5587  002456  6E09               	movwf	??___fladd^0,c
  5588  002458  5002               	movf	(___fladd@b+1)^0,w,c
  5589  00245A  5806               	subwfb	(___fladd@a+1)^0,w,c
  5590  00245C  6E0A               	movwf	(??___fladd+1)^0,c
  5591  00245E  5003               	movf	(___fladd@b+2)^0,w,c
  5592  002460  5807               	subwfb	(___fladd@a+2)^0,w,c
  5593  002462  6E0B               	movwf	(??___fladd+2)^0,c
  5594  002464  5004               	movf	(___fladd@b+3)^0,w,c
  5595  002466  5808               	subwfb	(___fladd@a+3)^0,w,c
  5596  002468  6E0C               	movwf	(??___fladd+3)^0,c
  5597  00246A  0EFF               	movlw	255
  5598  00246C  2409               	addwf	??___fladd^0,w,c
  5599  00246E  6E01               	movwf	___fladd@b^0,c
  5600  002470  0EFF               	movlw	255
  5601  002472  200A               	addwfc	(??___fladd+1)^0,w,c
  5602  002474  6E02               	movwf	(___fladd@b+1)^0,c
  5603  002476  0EFF               	movlw	255
  5604  002478  200B               	addwfc	(??___fladd+2)^0,w,c
  5605  00247A  6E03               	movwf	(___fladd@b+2)^0,c
  5606  00247C  0EFF               	movlw	255
  5607  00247E  200C               	addwfc	(??___fladd+3)^0,w,c
  5608  002480  6E04               	movwf	(___fladd@b+3)^0,c
  5609  002482  0E80               	movlw	128
  5610  002484  1A0D               	xorwf	___fladd@signs^0,f,c
  5611  002486  6C10               	negf	___fladd@grs^0,c
  5612  002488  5010               	movf	___fladd@grs^0,w,c
  5613  00248A  A4D8               	btfss	status,2,c
  5614  00248C  EF4A  F012         	goto	u2651
  5615  002490  EF4C  F012         	goto	u2650
  5616  002494                     u2651:
  5617  002494  EF5C  F012         	goto	l719
  5618  002498                     u2650:
  5619  002498  0E01               	movlw	1
  5620  00249A  2601               	addwf	___fladd@b^0,f,c
  5621  00249C  0E00               	movlw	0
  5622  00249E  2202               	addwfc	(___fladd@b+1)^0,f,c
  5623  0024A0  2203               	addwfc	(___fladd@b+2)^0,f,c
  5624  0024A2  2204               	addwfc	(___fladd@b+3)^0,f,c
  5625  0024A4  EF5C  F012         	goto	l719
  5626  0024A8                     l2896:
  5627  0024A8  5005               	movf	___fladd@a^0,w,c
  5628  0024AA  5E01               	subwf	___fladd@b^0,f,c
  5629  0024AC  5006               	movf	(___fladd@a+1)^0,w,c
  5630  0024AE  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5631  0024B0  5007               	movf	(___fladd@a+2)^0,w,c
  5632  0024B2  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5633  0024B4  5008               	movf	(___fladd@a+3)^0,w,c
  5634  0024B6  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5635  0024B8                     l719:
  5636  0024B8  5001               	movf	___fladd@b^0,w,c
  5637  0024BA  1002               	iorwf	(___fladd@b+1)^0,w,c
  5638  0024BC  1003               	iorwf	(___fladd@b+2)^0,w,c
  5639  0024BE  1004               	iorwf	(___fladd@b+3)^0,w,c
  5640  0024C0  A4D8               	btfss	status,2,c
  5641  0024C2  EF65  F012         	goto	u2661
  5642  0024C6  EF67  F012         	goto	u2660
  5643  0024CA                     u2661:
  5644  0024CA  EF9C  F012         	goto	l2920
  5645  0024CE                     u2660:
  5646  0024CE  5010               	movf	___fladd@grs^0,w,c
  5647  0024D0  A4D8               	btfss	status,2,c
  5648  0024D2  EF6D  F012         	goto	u2671
  5649  0024D6  EF6F  F012         	goto	u2670
  5650  0024DA                     u2671:
  5651  0024DA  EF9C  F012         	goto	l2920
  5652  0024DE                     u2670:
  5653  0024DE  0E00               	movlw	0
  5654  0024E0  6E01               	movwf	?___fladd^0,c
  5655  0024E2  0E00               	movlw	0
  5656  0024E4  6E02               	movwf	(?___fladd+1)^0,c
  5657  0024E6  0E00               	movlw	0
  5658  0024E8  6E03               	movwf	(?___fladd+2)^0,c
  5659  0024EA  0E00               	movlw	0
  5660  0024EC  6E04               	movwf	(?___fladd+3)^0,c
  5661  0024EE  EF37  F013         	goto	l711
  5662  0024F2                     l2904:
  5663  0024F2  90D8               	bcf	status,0,c
  5664  0024F4  3601               	rlcf	___fladd@b^0,f,c
  5665  0024F6  3602               	rlcf	(___fladd@b+1)^0,f,c
  5666  0024F8  3603               	rlcf	(___fladd@b+2)^0,f,c
  5667  0024FA  3604               	rlcf	(___fladd@b+3)^0,f,c
  5668  0024FC  AE10               	btfss	___fladd@grs^0,7,c
  5669  0024FE  EF83  F012         	goto	u2681
  5670  002502  EF85  F012         	goto	u2680
  5671  002506                     u2681:
  5672  002506  EF86  F012         	goto	l2910
  5673  00250A                     u2680:
  5674  00250A  8001               	bsf	___fladd@b^0,0,c
  5675  00250C                     l2910:
  5676  00250C  A010               	btfss	___fladd@grs^0,0,c
  5677  00250E  EF8B  F012         	goto	u2691
  5678  002512  EF8D  F012         	goto	u2690
  5679  002516                     u2691:
  5680  002516  EF91  F012         	goto	l2914
  5681  00251A                     u2690:
  5682  00251A  80D8               	bsf	status,0,c
  5683  00251C  3610               	rlcf	___fladd@grs^0,f,c
  5684  00251E  EF93  F012         	goto	l2916
  5685  002522                     l2914:
  5686  002522  90D8               	bcf	status,0,c
  5687  002524  3610               	rlcf	___fladd@grs^0,f,c
  5688  002526                     l2916:
  5689  002526  500F               	movf	___fladd@bexp^0,w,c
  5690  002528  B4D8               	btfsc	status,2,c
  5691  00252A  EF99  F012         	goto	u2701
  5692  00252E  EF9B  F012         	goto	u2700
  5693  002532                     u2701:
  5694  002532  EF9C  F012         	goto	l2920
  5695  002536                     u2700:
  5696  002536  060F               	decf	___fladd@bexp^0,f,c
  5697  002538                     l2920:
  5698  002538  AE03               	btfss	(___fladd@b+2)^0,7,c
  5699  00253A  EFA1  F012         	goto	u2711
  5700  00253E  EFA3  F012         	goto	u2710
  5701  002542                     u2711:
  5702  002542  EF79  F012         	goto	l2904
  5703  002546                     u2710:
  5704  002546                     l2922:
  5705  002546  0E00               	movlw	0
  5706  002548  6E0E               	movwf	___fladd@aexp^0,c
  5707  00254A  AE10               	btfss	___fladd@grs^0,7,c
  5708  00254C  EFAA  F012         	goto	u2721
  5709  002550  EFAC  F012         	goto	u2720
  5710  002554                     u2721:
  5711  002554  EFC4  F012         	goto	l728
  5712  002558                     u2720:
  5713  002558  C010  F009         	movff	___fladd@grs,??___fladd
  5714  00255C  0E7F               	movlw	127
  5715  00255E  1609               	andwf	??___fladd^0,f,c
  5716  002560  B4D8               	btfsc	status,2,c
  5717  002562  EFB5  F012         	goto	u2731
  5718  002566  EFB7  F012         	goto	u2730
  5719  00256A                     u2731:
  5720  00256A  EFBB  F012         	goto	l729
  5721  00256E                     u2730:
  5722  00256E                     l2928:
  5723  00256E  0E01               	movlw	1
  5724  002570  6E0E               	movwf	___fladd@aexp^0,c
  5725  002572  EFC4  F012         	goto	l728
  5726  002576                     l729:
  5727  002576  A001               	btfss	___fladd@b^0,0,c
  5728  002578  EFC0  F012         	goto	u2741
  5729  00257C  EFC2  F012         	goto	u2740
  5730  002580                     u2741:
  5731  002580  EFC4  F012         	goto	l728
  5732  002584                     u2740:
  5733  002584  EFB7  F012         	goto	l2928
  5734  002588                     l728:
  5735  002588  500E               	movf	___fladd@aexp^0,w,c
  5736  00258A  B4D8               	btfsc	status,2,c
  5737  00258C  EFCA  F012         	goto	u2751
  5738  002590  EFCC  F012         	goto	u2750
  5739  002594                     u2751:
  5740  002594  EFF7  F012         	goto	l2940
  5741  002598                     u2750:
  5742  002598  0E01               	movlw	1
  5743  00259A  2601               	addwf	___fladd@b^0,f,c
  5744  00259C  0E00               	movlw	0
  5745  00259E  2202               	addwfc	(___fladd@b+1)^0,f,c
  5746  0025A0  2203               	addwfc	(___fladd@b+2)^0,f,c
  5747  0025A2  2204               	addwfc	(___fladd@b+3)^0,f,c
  5748  0025A4  A004               	btfss	(___fladd@b+3)^0,0,c
  5749  0025A6  EFD7  F012         	goto	u2761
  5750  0025AA  EFD9  F012         	goto	u2760
  5751  0025AE                     u2761:
  5752  0025AE  EFF7  F012         	goto	l2940
  5753  0025B2                     u2760:
  5754  0025B2  C001  F009         	movff	___fladd@b,??___fladd
  5755  0025B6  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5756  0025BA  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5757  0025BE  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5758  0025C2  340C               	rlcf	(??___fladd+3)^0,w,c
  5759  0025C4  320C               	rrcf	(??___fladd+3)^0,f,c
  5760  0025C6  320B               	rrcf	(??___fladd+2)^0,f,c
  5761  0025C8  320A               	rrcf	(??___fladd+1)^0,f,c
  5762  0025CA  3209               	rrcf	??___fladd^0,f,c
  5763  0025CC  C009  F001         	movff	??___fladd,___fladd@b
  5764  0025D0  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5765  0025D4  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5766  0025D8  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5767  0025DC  280F               	incf	___fladd@bexp^0,w,c
  5768  0025DE  B4D8               	btfsc	status,2,c
  5769  0025E0  EFF4  F012         	goto	u2771
  5770  0025E4  EFF6  F012         	goto	u2770
  5771  0025E8                     u2771:
  5772  0025E8  EFF7  F012         	goto	l2940
  5773  0025EC                     u2770:
  5774  0025EC  2A0F               	incf	___fladd@bexp^0,f,c
  5775  0025EE                     l2940:
  5776  0025EE  280F               	incf	___fladd@bexp^0,w,c
  5777  0025F0  B4D8               	btfsc	status,2,c
  5778  0025F2  EFFD  F012         	goto	u2781
  5779  0025F6  EFFF  F012         	goto	u2780
  5780  0025FA                     u2781:
  5781  0025FA  EF07  F013         	goto	l2944
  5782  0025FE                     u2780:
  5783  0025FE  500F               	movf	___fladd@bexp^0,w,c
  5784  002600  A4D8               	btfss	status,2,c
  5785  002602  EF05  F013         	goto	u2791
  5786  002606  EF07  F013         	goto	u2790
  5787  00260A                     u2791:
  5788  00260A  EF19  F013         	goto	l2948
  5789  00260E                     u2790:
  5790  00260E                     l2944:
  5791  00260E  0E00               	movlw	0
  5792  002610  6E01               	movwf	___fladd@b^0,c
  5793  002612  0E00               	movlw	0
  5794  002614  6E02               	movwf	(___fladd@b+1)^0,c
  5795  002616  0E00               	movlw	0
  5796  002618  6E03               	movwf	(___fladd@b+2)^0,c
  5797  00261A  0E00               	movlw	0
  5798  00261C  6E04               	movwf	(___fladd@b+3)^0,c
  5799  00261E  500F               	movf	___fladd@bexp^0,w,c
  5800  002620  A4D8               	btfss	status,2,c
  5801  002622  EF15  F013         	goto	u2801
  5802  002626  EF17  F013         	goto	u2800
  5803  00262A                     u2801:
  5804  00262A  EF19  F013         	goto	l2948
  5805  00262E                     u2800:
  5806  00262E  0E00               	movlw	0
  5807  002630  6E0D               	movwf	___fladd@signs^0,c
  5808  002632                     l2948:
  5809  002632  A00F               	btfss	___fladd@bexp^0,0,c
  5810  002634  EF1E  F013         	goto	u2811
  5811  002638  EF20  F013         	goto	u2810
  5812  00263C                     u2811:
  5813  00263C  EF23  F013         	goto	l2952
  5814  002640                     u2810:
  5815  002640  8E03               	bsf	(___fladd@b+2)^0,7,c
  5816  002642  EF24  F013         	goto	l2954
  5817  002646                     l2952:
  5818  002646  9E03               	bcf	(___fladd@b+2)^0,7,c
  5819  002648                     l2954:
  5820  002648  90D8               	bcf	status,0,c
  5821  00264A  300F               	rrcf	___fladd@bexp^0,w,c
  5822  00264C  6E04               	movwf	(___fladd@b+3)^0,c
  5823  00264E  AE0D               	btfss	___fladd@signs^0,7,c
  5824  002650  EF2C  F013         	goto	u2821
  5825  002654  EF2E  F013         	goto	u2820
  5826  002658                     u2821:
  5827  002658  EF2F  F013         	goto	l2960
  5828  00265C                     u2820:
  5829  00265C  8E04               	bsf	(___fladd@b+3)^0,7,c
  5830  00265E                     l2960:
  5831  00265E  C001  F001         	movff	___fladd@b,?___fladd
  5832  002662  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5833  002666  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5834  00266A  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5835  00266E                     l711:
  5836  00266E  0012               	return		;funcret
  5837  002670                     __end_of___fladd:
  5838                           	callstack 0
  5839                           
  5840 ;; *************** function ___flneg *****************
  5841 ;; Defined at:
  5842 ;;		line 15 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/flneg.c"
  5843 ;; Parameters:    Size  Location     Type
  5844 ;;  f1              4    0[COMRAM] unsigned char 
  5845 ;; Auto vars:     Size  Location     Type
  5846 ;;		None
  5847 ;; Return value:  Size  Location     Type
  5848 ;;                  4    0[COMRAM] unsigned char 
  5849 ;; Registers used:
  5850 ;;		wreg, status,2, status,0
  5851 ;; Tracked objects:
  5852 ;;		On entry : 0/0
  5853 ;;		On exit  : 0/0
  5854 ;;		Unchanged: 0/0
  5855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5856 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5859 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5860 ;;Total ram usage:        4 bytes
  5861 ;; Hardware stack levels used: 1
  5862 ;; This function calls:
  5863 ;;		Nothing
  5864 ;; This function is called by:
  5865 ;;		_efgtoa
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868                           
  5869                           	psect	text20
  5870  0041BE                     __ptext20:
  5871                           	callstack 0
  5872  0041BE                     ___flneg:
  5873                           	callstack 25
  5874  0041BE  5001               	movf	___flneg@f1^0,w,c
  5875  0041C0  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5876  0041C2  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5877  0041C4  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5878  0041C6  B4D8               	btfsc	status,2,c
  5879  0041C8  EFE8  F020         	goto	u3521
  5880  0041CC  EFEA  F020         	goto	u3520
  5881  0041D0                     u3521:
  5882  0041D0  EFF2  F020         	goto	l3434
  5883  0041D4                     u3520:
  5884  0041D4  0E00               	movlw	0
  5885  0041D6  1A01               	xorwf	___flneg@f1^0,f,c
  5886  0041D8  0E00               	movlw	0
  5887  0041DA  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5888  0041DC  0E00               	movlw	0
  5889  0041DE  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5890  0041E0  0E80               	movlw	128
  5891  0041E2  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5892  0041E4                     l3434:
  5893  0041E4  C001  F001         	movff	___flneg@f1,?___flneg
  5894  0041E8  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5895  0041EC  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5896  0041F0  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5897  0041F4  0012               	return		;funcret
  5898  0041F6                     __end_of___flneg:
  5899                           	callstack 0
  5900                           
  5901 ;; *************** function ___flmul *****************
  5902 ;; Defined at:
  5903 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcmul.c"
  5904 ;; Parameters:    Size  Location     Type
  5905 ;;  b               4   14[COMRAM] unsigned char 
  5906 ;;  a               4   18[COMRAM] unsigned char 
  5907 ;; Auto vars:     Size  Location     Type
  5908 ;;  prod            4   33[COMRAM] struct .
  5909 ;;  grs             4   27[COMRAM] unsigned long 
  5910 ;;  temp            2   37[COMRAM] struct .
  5911 ;;  bexp            1   32[COMRAM] unsigned char 
  5912 ;;  aexp            1   31[COMRAM] unsigned char 
  5913 ;;  sign            1   26[COMRAM] unsigned char 
  5914 ;; Return value:  Size  Location     Type
  5915 ;;                  4   14[COMRAM] unsigned char 
  5916 ;; Registers used:
  5917 ;;		wreg, status,2, status,0, prodl, prodh
  5918 ;; Tracked objects:
  5919 ;;		On entry : 0/0
  5920 ;;		On exit  : 0/0
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5923 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5924 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5925 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5926 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5927 ;;Total ram usage:       25 bytes
  5928 ;; Hardware stack levels used: 1
  5929 ;; This function calls:
  5930 ;;		Nothing
  5931 ;; This function is called by:
  5932 ;;		_ex3
  5933 ;;		_efgtoa
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937                           	psect	text21
  5938  002670                     __ptext21:
  5939                           	callstack 0
  5940  002670                     ___flmul:
  5941                           	callstack 25
  5942  002670  5012               	movf	(___flmul@b+3)^0,w,c
  5943  002672  0B80               	andlw	128
  5944  002674  6E1B               	movwf	___flmul@sign^0,c
  5945  002676  5012               	movf	(___flmul@b+3)^0,w,c
  5946  002678  2412               	addwf	(___flmul@b+3)^0,w,c
  5947  00267A  6E21               	movwf	___flmul@bexp^0,c
  5948  00267C  AE11               	btfss	(___flmul@b+2)^0,7,c
  5949  00267E  EF43  F013         	goto	u3131
  5950  002682  EF45  F013         	goto	u3130
  5951  002686                     u3131:
  5952  002686  EF46  F013         	goto	l3182
  5953  00268A                     u3130:
  5954  00268A  8021               	bsf	___flmul@bexp^0,0,c
  5955  00268C                     l3182:
  5956  00268C  5021               	movf	___flmul@bexp^0,w,c
  5957  00268E  B4D8               	btfsc	status,2,c
  5958  002690  EF4C  F013         	goto	u3141
  5959  002694  EF4E  F013         	goto	u3140
  5960  002698                     u3141:
  5961  002698  EF61  F013         	goto	l3190
  5962  00269C                     u3140:
  5963  00269C  2821               	incf	___flmul@bexp^0,w,c
  5964  00269E  A4D8               	btfss	status,2,c
  5965  0026A0  EF54  F013         	goto	u3151
  5966  0026A4  EF56  F013         	goto	u3150
  5967  0026A8                     u3151:
  5968  0026A8  EF5E  F013         	goto	l3188
  5969  0026AC                     u3150:
  5970  0026AC  0E00               	movlw	0
  5971  0026AE  6E0F               	movwf	___flmul@b^0,c
  5972  0026B0  0E00               	movlw	0
  5973  0026B2  6E10               	movwf	(___flmul@b+1)^0,c
  5974  0026B4  0E00               	movlw	0
  5975  0026B6  6E11               	movwf	(___flmul@b+2)^0,c
  5976  0026B8  0E00               	movlw	0
  5977  0026BA  6E12               	movwf	(___flmul@b+3)^0,c
  5978  0026BC                     l3188:
  5979  0026BC  8E11               	bsf	(___flmul@b+2)^0,7,c
  5980  0026BE  EF69  F013         	goto	l3192
  5981  0026C2                     l3190:
  5982  0026C2  0E00               	movlw	0
  5983  0026C4  6E0F               	movwf	___flmul@b^0,c
  5984  0026C6  0E00               	movlw	0
  5985  0026C8  6E10               	movwf	(___flmul@b+1)^0,c
  5986  0026CA  0E00               	movlw	0
  5987  0026CC  6E11               	movwf	(___flmul@b+2)^0,c
  5988  0026CE  0E00               	movlw	0
  5989  0026D0  6E12               	movwf	(___flmul@b+3)^0,c
  5990  0026D2                     l3192:
  5991  0026D2  5016               	movf	(___flmul@a+3)^0,w,c
  5992  0026D4  0B80               	andlw	128
  5993  0026D6  1A1B               	xorwf	___flmul@sign^0,f,c
  5994  0026D8  5016               	movf	(___flmul@a+3)^0,w,c
  5995  0026DA  2416               	addwf	(___flmul@a+3)^0,w,c
  5996  0026DC  6E20               	movwf	___flmul@aexp^0,c
  5997  0026DE  AE15               	btfss	(___flmul@a+2)^0,7,c
  5998  0026E0  EF74  F013         	goto	u3161
  5999  0026E4  EF76  F013         	goto	u3160
  6000  0026E8                     u3161:
  6001  0026E8  EF77  F013         	goto	l3200
  6002  0026EC                     u3160:
  6003  0026EC  8020               	bsf	___flmul@aexp^0,0,c
  6004  0026EE                     l3200:
  6005  0026EE  5020               	movf	___flmul@aexp^0,w,c
  6006  0026F0  B4D8               	btfsc	status,2,c
  6007  0026F2  EF7D  F013         	goto	u3171
  6008  0026F6  EF7F  F013         	goto	u3170
  6009  0026FA                     u3171:
  6010  0026FA  EF92  F013         	goto	l3208
  6011  0026FE                     u3170:
  6012  0026FE  2820               	incf	___flmul@aexp^0,w,c
  6013  002700  A4D8               	btfss	status,2,c
  6014  002702  EF85  F013         	goto	u3181
  6015  002706  EF87  F013         	goto	u3180
  6016  00270A                     u3181:
  6017  00270A  EF8F  F013         	goto	l3206
  6018  00270E                     u3180:
  6019  00270E  0E00               	movlw	0
  6020  002710  6E13               	movwf	___flmul@a^0,c
  6021  002712  0E00               	movlw	0
  6022  002714  6E14               	movwf	(___flmul@a+1)^0,c
  6023  002716  0E00               	movlw	0
  6024  002718  6E15               	movwf	(___flmul@a+2)^0,c
  6025  00271A  0E00               	movlw	0
  6026  00271C  6E16               	movwf	(___flmul@a+3)^0,c
  6027  00271E                     l3206:
  6028  00271E  8E15               	bsf	(___flmul@a+2)^0,7,c
  6029  002720  EF9A  F013         	goto	l788
  6030  002724                     l3208:
  6031  002724  0E00               	movlw	0
  6032  002726  6E13               	movwf	___flmul@a^0,c
  6033  002728  0E00               	movlw	0
  6034  00272A  6E14               	movwf	(___flmul@a+1)^0,c
  6035  00272C  0E00               	movlw	0
  6036  00272E  6E15               	movwf	(___flmul@a+2)^0,c
  6037  002730  0E00               	movlw	0
  6038  002732  6E16               	movwf	(___flmul@a+3)^0,c
  6039  002734                     l788:
  6040  002734  5020               	movf	___flmul@aexp^0,w,c
  6041  002736  B4D8               	btfsc	status,2,c
  6042  002738  EFA0  F013         	goto	u3191
  6043  00273C  EFA2  F013         	goto	u3190
  6044  002740                     u3191:
  6045  002740  EFAA  F013         	goto	l3212
  6046  002744                     u3190:
  6047  002744  5021               	movf	___flmul@bexp^0,w,c
  6048  002746  A4D8               	btfss	status,2,c
  6049  002748  EFA8  F013         	goto	u3201
  6050  00274C  EFAA  F013         	goto	u3200
  6051  002750                     u3201:
  6052  002750  EFB4  F013         	goto	l3216
  6053  002754                     u3200:
  6054  002754                     l3212:
  6055  002754  0E00               	movlw	0
  6056  002756  6E0F               	movwf	?___flmul^0,c
  6057  002758  0E00               	movlw	0
  6058  00275A  6E10               	movwf	(?___flmul+1)^0,c
  6059  00275C  0E00               	movlw	0
  6060  00275E  6E11               	movwf	(?___flmul+2)^0,c
  6061  002760  0E00               	movlw	0
  6062  002762  6E12               	movwf	(?___flmul+3)^0,c
  6063  002764  EF4C  F015         	goto	l792
  6064  002768                     l3216:
  6065  002768  5015               	movf	(___flmul@a+2)^0,w,c
  6066  00276A  020F               	mulwf	___flmul@b^0,c
  6067  00276C  CFF3 F026          	movff	prodl,___flmul@temp
  6068  002770  CFF4 F027          	movff	prodh,___flmul@temp+1
  6069  002774  5026               	movf	___flmul@temp^0,w,c
  6070  002776  6E1C               	movwf	___flmul@grs^0,c
  6071  002778  6A1D               	clrf	(___flmul@grs+1)^0,c
  6072  00277A  6A1E               	clrf	(___flmul@grs+2)^0,c
  6073  00277C  6A1F               	clrf	(___flmul@grs+3)^0,c
  6074  00277E  5027               	movf	(___flmul@temp+1)^0,w,c
  6075  002780  6E22               	movwf	___flmul@prod^0,c
  6076  002782  6A23               	clrf	(___flmul@prod+1)^0,c
  6077  002784  6A24               	clrf	(___flmul@prod+2)^0,c
  6078  002786  6A25               	clrf	(___flmul@prod+3)^0,c
  6079  002788  5014               	movf	(___flmul@a+1)^0,w,c
  6080  00278A  0210               	mulwf	(___flmul@b+1)^0,c
  6081  00278C  CFF3 F026          	movff	prodl,___flmul@temp
  6082  002790  CFF4 F027          	movff	prodh,___flmul@temp+1
  6083  002794  5026               	movf	___flmul@temp^0,w,c
  6084  002796  261C               	addwf	___flmul@grs^0,f,c
  6085  002798  0E00               	movlw	0
  6086  00279A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6087  00279C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6088  00279E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6089  0027A0  5027               	movf	(___flmul@temp+1)^0,w,c
  6090  0027A2  2622               	addwf	___flmul@prod^0,f,c
  6091  0027A4  0E00               	movlw	0
  6092  0027A6  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6093  0027A8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6094  0027AA  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6095  0027AC  5013               	movf	___flmul@a^0,w,c
  6096  0027AE  0211               	mulwf	(___flmul@b+2)^0,c
  6097  0027B0  CFF3 F026          	movff	prodl,___flmul@temp
  6098  0027B4  CFF4 F027          	movff	prodh,___flmul@temp+1
  6099  0027B8  5026               	movf	___flmul@temp^0,w,c
  6100  0027BA  261C               	addwf	___flmul@grs^0,f,c
  6101  0027BC  0E00               	movlw	0
  6102  0027BE  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6103  0027C0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6104  0027C2  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6105  0027C4  5027               	movf	(___flmul@temp+1)^0,w,c
  6106  0027C6  2622               	addwf	___flmul@prod^0,f,c
  6107  0027C8  0E00               	movlw	0
  6108  0027CA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6109  0027CC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6110  0027CE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6111  0027D0  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6112  0027D4  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6113  0027D8  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6114  0027DC  6A1C               	clrf	___flmul@grs^0,c
  6115  0027DE  5013               	movf	___flmul@a^0,w,c
  6116  0027E0  0210               	mulwf	(___flmul@b+1)^0,c
  6117  0027E2  CFF3 F026          	movff	prodl,___flmul@temp
  6118  0027E6  CFF4 F027          	movff	prodh,___flmul@temp+1
  6119  0027EA  5026               	movf	___flmul@temp^0,w,c
  6120  0027EC  261C               	addwf	___flmul@grs^0,f,c
  6121  0027EE  5027               	movf	(___flmul@temp+1)^0,w,c
  6122  0027F0  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6123  0027F2  0E00               	movlw	0
  6124  0027F4  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6125  0027F6  0E00               	movlw	0
  6126  0027F8  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6127  0027FA  5014               	movf	(___flmul@a+1)^0,w,c
  6128  0027FC  020F               	mulwf	___flmul@b^0,c
  6129  0027FE  CFF3 F026          	movff	prodl,___flmul@temp
  6130  002802  CFF4 F027          	movff	prodh,___flmul@temp+1
  6131  002806  5026               	movf	___flmul@temp^0,w,c
  6132  002808  261C               	addwf	___flmul@grs^0,f,c
  6133  00280A  5027               	movf	(___flmul@temp+1)^0,w,c
  6134  00280C  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6135  00280E  0E00               	movlw	0
  6136  002810  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6137  002812  0E00               	movlw	0
  6138  002814  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6139  002816  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6140  00281A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6141  00281E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6142  002822  6A1C               	clrf	___flmul@grs^0,c
  6143  002824  5013               	movf	___flmul@a^0,w,c
  6144  002826  020F               	mulwf	___flmul@b^0,c
  6145  002828  CFF3 F026          	movff	prodl,___flmul@temp
  6146  00282C  CFF4 F027          	movff	prodh,___flmul@temp+1
  6147  002830  5026               	movf	___flmul@temp^0,w,c
  6148  002832  261C               	addwf	___flmul@grs^0,f,c
  6149  002834  5027               	movf	(___flmul@temp+1)^0,w,c
  6150  002836  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6151  002838  0E00               	movlw	0
  6152  00283A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6153  00283C  0E00               	movlw	0
  6154  00283E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6155  002840  5015               	movf	(___flmul@a+2)^0,w,c
  6156  002842  0210               	mulwf	(___flmul@b+1)^0,c
  6157  002844  CFF3 F026          	movff	prodl,___flmul@temp
  6158  002848  CFF4 F027          	movff	prodh,___flmul@temp+1
  6159  00284C  5026               	movf	___flmul@temp^0,w,c
  6160  00284E  2622               	addwf	___flmul@prod^0,f,c
  6161  002850  5027               	movf	(___flmul@temp+1)^0,w,c
  6162  002852  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6163  002854  0E00               	movlw	0
  6164  002856  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6165  002858  0E00               	movlw	0
  6166  00285A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6167  00285C  5014               	movf	(___flmul@a+1)^0,w,c
  6168  00285E  0211               	mulwf	(___flmul@b+2)^0,c
  6169  002860  CFF3 F026          	movff	prodl,___flmul@temp
  6170  002864  CFF4 F027          	movff	prodh,___flmul@temp+1
  6171  002868  5026               	movf	___flmul@temp^0,w,c
  6172  00286A  2622               	addwf	___flmul@prod^0,f,c
  6173  00286C  5027               	movf	(___flmul@temp+1)^0,w,c
  6174  00286E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6175  002870  0E00               	movlw	0
  6176  002872  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6177  002874  0E00               	movlw	0
  6178  002876  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6179  002878  5015               	movf	(___flmul@a+2)^0,w,c
  6180  00287A  0211               	mulwf	(___flmul@b+2)^0,c
  6181  00287C  CFF3 F026          	movff	prodl,___flmul@temp
  6182  002880  CFF4 F027          	movff	prodh,___flmul@temp+1
  6183  002884  5026               	movf	___flmul@temp^0,w,c
  6184  002886  6E17               	movwf	??___flmul^0,c
  6185  002888  5027               	movf	(___flmul@temp+1)^0,w,c
  6186  00288A  6E18               	movwf	(??___flmul+1)^0,c
  6187  00288C  6A19               	clrf	(??___flmul+2)^0,c
  6188  00288E  6A1A               	clrf	(??___flmul+3)^0,c
  6189  002890  C019  F01A         	movff	??___flmul+2,??___flmul+3
  6190  002894  C018  F019         	movff	??___flmul+1,??___flmul+2
  6191  002898  C017  F018         	movff	??___flmul,??___flmul+1
  6192  00289C  6A17               	clrf	??___flmul^0,c
  6193  00289E  5017               	movf	??___flmul^0,w,c
  6194  0028A0  2622               	addwf	___flmul@prod^0,f,c
  6195  0028A2  5018               	movf	(??___flmul+1)^0,w,c
  6196  0028A4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6197  0028A6  5019               	movf	(??___flmul+2)^0,w,c
  6198  0028A8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6199  0028AA  501A               	movf	(??___flmul+3)^0,w,c
  6200  0028AC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6201  0028AE  C01C  F017         	movff	___flmul@grs,??___flmul
  6202  0028B2  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  6203  0028B6  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  6204  0028BA  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  6205  0028BE  0E19               	movlw	25
  6206  0028C0  EF67  F014         	goto	u3210
  6207  0028C4                     u3215:
  6208  0028C4  90D8               	bcf	status,0,c
  6209  0028C6  321A               	rrcf	(??___flmul+3)^0,f,c
  6210  0028C8  3219               	rrcf	(??___flmul+2)^0,f,c
  6211  0028CA  3218               	rrcf	(??___flmul+1)^0,f,c
  6212  0028CC  3217               	rrcf	??___flmul^0,f,c
  6213  0028CE                     u3210:
  6214  0028CE  2EE8               	decfsz	wreg,f,c
  6215  0028D0  EF62  F014         	goto	u3215
  6216  0028D4  5017               	movf	??___flmul^0,w,c
  6217  0028D6  2622               	addwf	___flmul@prod^0,f,c
  6218  0028D8  5018               	movf	(??___flmul+1)^0,w,c
  6219  0028DA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6220  0028DC  5019               	movf	(??___flmul+2)^0,w,c
  6221  0028DE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6222  0028E0  501A               	movf	(??___flmul+3)^0,w,c
  6223  0028E2  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6224  0028E4  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6225  0028E8  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6226  0028EC  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6227  0028F0  6A1C               	clrf	___flmul@grs^0,c
  6228  0028F2  5020               	movf	___flmul@aexp^0,w,c
  6229  0028F4  C021  F017         	movff	___flmul@bexp,??___flmul
  6230  0028F8  6A18               	clrf	(??___flmul+1)^0,c
  6231  0028FA  2617               	addwf	??___flmul^0,f,c
  6232  0028FC  0E00               	movlw	0
  6233  0028FE  2218               	addwfc	(??___flmul+1)^0,f,c
  6234  002900  0E82               	movlw	130
  6235  002902  2417               	addwf	??___flmul^0,w,c
  6236  002904  6E26               	movwf	___flmul@temp^0,c
  6237  002906  0EFF               	movlw	255
  6238  002908  2018               	addwfc	(??___flmul+1)^0,w,c
  6239  00290A  6E27               	movwf	(___flmul@temp+1)^0,c
  6240  00290C  EF9D  F014         	goto	l3264
  6241  002910                     l3258:
  6242  002910  90D8               	bcf	status,0,c
  6243  002912  3622               	rlcf	___flmul@prod^0,f,c
  6244  002914  3623               	rlcf	(___flmul@prod+1)^0,f,c
  6245  002916  3624               	rlcf	(___flmul@prod+2)^0,f,c
  6246  002918  3625               	rlcf	(___flmul@prod+3)^0,f,c
  6247  00291A  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6248  00291C  EF92  F014         	goto	u3221
  6249  002920  EF94  F014         	goto	u3220
  6250  002924                     u3221:
  6251  002924  EF95  F014         	goto	l795
  6252  002928                     u3220:
  6253  002928  8022               	bsf	___flmul@prod^0,0,c
  6254  00292A                     l795:
  6255  00292A  90D8               	bcf	status,0,c
  6256  00292C  361C               	rlcf	___flmul@grs^0,f,c
  6257  00292E  361D               	rlcf	(___flmul@grs+1)^0,f,c
  6258  002930  361E               	rlcf	(___flmul@grs+2)^0,f,c
  6259  002932  361F               	rlcf	(___flmul@grs+3)^0,f,c
  6260  002934  0626               	decf	___flmul@temp^0,f,c
  6261  002936  A0D8               	btfss	status,0,c
  6262  002938  0627               	decf	(___flmul@temp+1)^0,f,c
  6263  00293A                     l3264:
  6264  00293A  AE24               	btfss	(___flmul@prod+2)^0,7,c
  6265  00293C  EFA2  F014         	goto	u3231
  6266  002940  EFA4  F014         	goto	u3230
  6267  002944                     u3231:
  6268  002944  EF88  F014         	goto	l3258
  6269  002948                     u3230:
  6270  002948  0E00               	movlw	0
  6271  00294A  6E20               	movwf	___flmul@aexp^0,c
  6272  00294C  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6273  00294E  EFAB  F014         	goto	u3241
  6274  002952  EFAD  F014         	goto	u3240
  6275  002956                     u3241:
  6276  002956  EFD1  F014         	goto	l797
  6277  00295A                     u3240:
  6278  00295A  0EFF               	movlw	255
  6279  00295C  141C               	andwf	___flmul@grs^0,w,c
  6280  00295E  6E17               	movwf	??___flmul^0,c
  6281  002960  0EFF               	movlw	255
  6282  002962  141D               	andwf	(___flmul@grs+1)^0,w,c
  6283  002964  6E18               	movwf	(??___flmul+1)^0,c
  6284  002966  0EFF               	movlw	255
  6285  002968  141E               	andwf	(___flmul@grs+2)^0,w,c
  6286  00296A  6E19               	movwf	(??___flmul+2)^0,c
  6287  00296C  0E7F               	movlw	127
  6288  00296E  141F               	andwf	(___flmul@grs+3)^0,w,c
  6289  002970  6E1A               	movwf	(??___flmul+3)^0,c
  6290  002972  5017               	movf	??___flmul^0,w,c
  6291  002974  1018               	iorwf	(??___flmul+1)^0,w,c
  6292  002976  1019               	iorwf	(??___flmul+2)^0,w,c
  6293  002978  101A               	iorwf	(??___flmul+3)^0,w,c
  6294  00297A  B4D8               	btfsc	status,2,c
  6295  00297C  EFC2  F014         	goto	u3251
  6296  002980  EFC4  F014         	goto	u3250
  6297  002984                     u3251:
  6298  002984  EFC8  F014         	goto	l798
  6299  002988                     u3250:
  6300  002988                     l3272:
  6301  002988  0E01               	movlw	1
  6302  00298A  6E20               	movwf	___flmul@aexp^0,c
  6303  00298C  EFD1  F014         	goto	l797
  6304  002990                     l798:
  6305  002990  A022               	btfss	___flmul@prod^0,0,c
  6306  002992  EFCD  F014         	goto	u3261
  6307  002996  EFCF  F014         	goto	u3260
  6308  00299A                     u3261:
  6309  00299A  EFD1  F014         	goto	l797
  6310  00299E                     u3260:
  6311  00299E  EFC4  F014         	goto	l3272
  6312  0029A2                     l797:
  6313  0029A2  5020               	movf	___flmul@aexp^0,w,c
  6314  0029A4  B4D8               	btfsc	status,2,c
  6315  0029A6  EFD7  F014         	goto	u3271
  6316  0029AA  EFD9  F014         	goto	u3270
  6317  0029AE                     u3271:
  6318  0029AE  EFFD  F014         	goto	l3284
  6319  0029B2                     u3270:
  6320  0029B2  0E01               	movlw	1
  6321  0029B4  2622               	addwf	___flmul@prod^0,f,c
  6322  0029B6  0E00               	movlw	0
  6323  0029B8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6324  0029BA  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6325  0029BC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6326  0029BE  A025               	btfss	(___flmul@prod+3)^0,0,c
  6327  0029C0  EFE4  F014         	goto	u3281
  6328  0029C4  EFE6  F014         	goto	u3280
  6329  0029C8                     u3281:
  6330  0029C8  EFFD  F014         	goto	l3284
  6331  0029CC                     u3280:
  6332  0029CC  C022  F017         	movff	___flmul@prod,??___flmul
  6333  0029D0  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  6334  0029D4  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  6335  0029D8  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  6336  0029DC  341A               	rlcf	(??___flmul+3)^0,w,c
  6337  0029DE  321A               	rrcf	(??___flmul+3)^0,f,c
  6338  0029E0  3219               	rrcf	(??___flmul+2)^0,f,c
  6339  0029E2  3218               	rrcf	(??___flmul+1)^0,f,c
  6340  0029E4  3217               	rrcf	??___flmul^0,f,c
  6341  0029E6  C017  F022         	movff	??___flmul,___flmul@prod
  6342  0029EA  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  6343  0029EE  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  6344  0029F2  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  6345  0029F6  4A26               	infsnz	___flmul@temp^0,f,c
  6346  0029F8  2A27               	incf	(___flmul@temp+1)^0,f,c
  6347  0029FA                     l3284:
  6348  0029FA  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6349  0029FC  EF08  F015         	goto	u3291
  6350  002A00  5027               	movf	(___flmul@temp+1)^0,w,c
  6351  002A02  E108               	bnz	u3290
  6352  002A04  2826               	incf	___flmul@temp^0,w,c
  6353  002A06  A0D8               	btfss	status,0,c
  6354  002A08  EF08  F015         	goto	u3291
  6355  002A0C  EF0A  F015         	goto	u3290
  6356  002A10                     u3291:
  6357  002A10  EF14  F015         	goto	l3288
  6358  002A14                     u3290:
  6359  002A14  0E00               	movlw	0
  6360  002A16  6E22               	movwf	___flmul@prod^0,c
  6361  002A18  0E00               	movlw	0
  6362  002A1A  6E23               	movwf	(___flmul@prod+1)^0,c
  6363  002A1C  0E80               	movlw	128
  6364  002A1E  6E24               	movwf	(___flmul@prod+2)^0,c
  6365  002A20  0E7F               	movlw	127
  6366  002A22  6E25               	movwf	(___flmul@prod+3)^0,c
  6367  002A24  EF42  F015         	goto	l3300
  6368  002A28                     l3288:
  6369  002A28  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6370  002A2A  EF21  F015         	goto	u3300
  6371  002A2E  5027               	movf	(___flmul@temp+1)^0,w,c
  6372  002A30  E106               	bnz	u3301
  6373  002A32  0426               	decf	___flmul@temp^0,w,c
  6374  002A34  B0D8               	btfsc	status,0,c
  6375  002A36  EF1F  F015         	goto	u3301
  6376  002A3A  EF21  F015         	goto	u3300
  6377  002A3E                     u3301:
  6378  002A3E  EF2D  F015         	goto	l805
  6379  002A42                     u3300:
  6380  002A42  0E00               	movlw	0
  6381  002A44  6E22               	movwf	___flmul@prod^0,c
  6382  002A46  0E00               	movlw	0
  6383  002A48  6E23               	movwf	(___flmul@prod+1)^0,c
  6384  002A4A  0E00               	movlw	0
  6385  002A4C  6E24               	movwf	(___flmul@prod+2)^0,c
  6386  002A4E  0E00               	movlw	0
  6387  002A50  6E25               	movwf	(___flmul@prod+3)^0,c
  6388  002A52  0E00               	movlw	0
  6389  002A54  6E1B               	movwf	___flmul@sign^0,c
  6390  002A56  EF42  F015         	goto	l3300
  6391  002A5A                     l805:
  6392  002A5A  C026  F021         	movff	___flmul@temp,___flmul@bexp
  6393  002A5E  0EFF               	movlw	255
  6394  002A60  1622               	andwf	___flmul@prod^0,f,c
  6395  002A62  0EFF               	movlw	255
  6396  002A64  1623               	andwf	(___flmul@prod+1)^0,f,c
  6397  002A66  0E7F               	movlw	127
  6398  002A68  1624               	andwf	(___flmul@prod+2)^0,f,c
  6399  002A6A  0E00               	movlw	0
  6400  002A6C  1625               	andwf	(___flmul@prod+3)^0,f,c
  6401  002A6E  A021               	btfss	___flmul@bexp^0,0,c
  6402  002A70  EF3C  F015         	goto	u3311
  6403  002A74  EF3E  F015         	goto	u3310
  6404  002A78                     u3311:
  6405  002A78  EF3F  F015         	goto	l3298
  6406  002A7C                     u3310:
  6407  002A7C  8E24               	bsf	(___flmul@prod+2)^0,7,c
  6408  002A7E                     l3298:
  6409  002A7E  90D8               	bcf	status,0,c
  6410  002A80  3021               	rrcf	___flmul@bexp^0,w,c
  6411  002A82  6E25               	movwf	(___flmul@prod+3)^0,c
  6412  002A84                     l3300:
  6413  002A84  501B               	movf	___flmul@sign^0,w,c
  6414  002A86  1225               	iorwf	(___flmul@prod+3)^0,f,c
  6415  002A88  C022  F00F         	movff	___flmul@prod,?___flmul
  6416  002A8C  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  6417  002A90  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  6418  002A94  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  6419  002A98                     l792:
  6420  002A98  0012               	return		;funcret
  6421  002A9A                     __end_of___flmul:
  6422                           	callstack 0
  6423                           
  6424 ;; *************** function ___flge *****************
  6425 ;; Defined at:
  6426 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/flge.c"
  6427 ;; Parameters:    Size  Location     Type
  6428 ;;  ff1             4   39[COMRAM] unsigned char 
  6429 ;;  ff2             4   43[COMRAM] unsigned char 
  6430 ;; Auto vars:     Size  Location     Type
  6431 ;;		None
  6432 ;; Return value:  Size  Location     Type
  6433 ;;		None               void
  6434 ;; Registers used:
  6435 ;;		wreg, status,2, status,0
  6436 ;; Tracked objects:
  6437 ;;		On entry : 0/0
  6438 ;;		On exit  : 0/0
  6439 ;;		Unchanged: 0/0
  6440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6441 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6443 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6444 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6445 ;;Total ram usage:       12 bytes
  6446 ;; Hardware stack levels used: 1
  6447 ;; This function calls:
  6448 ;;		Nothing
  6449 ;; This function is called by:
  6450 ;;		_efgtoa
  6451 ;; This function uses a non-reentrant model
  6452 ;;
  6453                           
  6454                           	psect	text22
  6455  003580                     __ptext22:
  6456                           	callstack 0
  6457  003580                     ___flge:
  6458                           	callstack 25
  6459  003580  0E00               	movlw	0
  6460  003582  1428               	andwf	___flge@ff1^0,w,c
  6461  003584  6E30               	movwf	??___flge^0,c
  6462  003586  0E00               	movlw	0
  6463  003588  1429               	andwf	(___flge@ff1+1)^0,w,c
  6464  00358A  6E31               	movwf	(??___flge+1)^0,c
  6465  00358C  0E80               	movlw	128
  6466  00358E  142A               	andwf	(___flge@ff1+2)^0,w,c
  6467  003590  6E32               	movwf	(??___flge+2)^0,c
  6468  003592  0E7F               	movlw	127
  6469  003594  142B               	andwf	(___flge@ff1+3)^0,w,c
  6470  003596  6E33               	movwf	(??___flge+3)^0,c
  6471  003598  5030               	movf	??___flge^0,w,c
  6472  00359A  1031               	iorwf	(??___flge+1)^0,w,c
  6473  00359C  1032               	iorwf	(??___flge+2)^0,w,c
  6474  00359E  1033               	iorwf	(??___flge+3)^0,w,c
  6475  0035A0  A4D8               	btfss	status,2,c
  6476  0035A2  EFD5  F01A         	goto	u3471
  6477  0035A6  EFD7  F01A         	goto	u3470
  6478  0035AA                     u3471:
  6479  0035AA  EFDF  F01A         	goto	l3412
  6480  0035AE                     u3470:
  6481  0035AE  0E00               	movlw	0
  6482  0035B0  6E28               	movwf	___flge@ff1^0,c
  6483  0035B2  0E00               	movlw	0
  6484  0035B4  6E29               	movwf	(___flge@ff1+1)^0,c
  6485  0035B6  0E00               	movlw	0
  6486  0035B8  6E2A               	movwf	(___flge@ff1+2)^0,c
  6487  0035BA  0E00               	movlw	0
  6488  0035BC  6E2B               	movwf	(___flge@ff1+3)^0,c
  6489  0035BE                     l3412:
  6490  0035BE  0E00               	movlw	0
  6491  0035C0  142C               	andwf	___flge@ff2^0,w,c
  6492  0035C2  6E30               	movwf	??___flge^0,c
  6493  0035C4  0E00               	movlw	0
  6494  0035C6  142D               	andwf	(___flge@ff2+1)^0,w,c
  6495  0035C8  6E31               	movwf	(??___flge+1)^0,c
  6496  0035CA  0E80               	movlw	128
  6497  0035CC  142E               	andwf	(___flge@ff2+2)^0,w,c
  6498  0035CE  6E32               	movwf	(??___flge+2)^0,c
  6499  0035D0  0E7F               	movlw	127
  6500  0035D2  142F               	andwf	(___flge@ff2+3)^0,w,c
  6501  0035D4  6E33               	movwf	(??___flge+3)^0,c
  6502  0035D6  5030               	movf	??___flge^0,w,c
  6503  0035D8  1031               	iorwf	(??___flge+1)^0,w,c
  6504  0035DA  1032               	iorwf	(??___flge+2)^0,w,c
  6505  0035DC  1033               	iorwf	(??___flge+3)^0,w,c
  6506  0035DE  A4D8               	btfss	status,2,c
  6507  0035E0  EFF4  F01A         	goto	u3481
  6508  0035E4  EFF6  F01A         	goto	u3480
  6509  0035E8                     u3481:
  6510  0035E8  EFFE  F01A         	goto	l3416
  6511  0035EC                     u3480:
  6512  0035EC  0E00               	movlw	0
  6513  0035EE  6E2C               	movwf	___flge@ff2^0,c
  6514  0035F0  0E00               	movlw	0
  6515  0035F2  6E2D               	movwf	(___flge@ff2+1)^0,c
  6516  0035F4  0E00               	movlw	0
  6517  0035F6  6E2E               	movwf	(___flge@ff2+2)^0,c
  6518  0035F8  0E00               	movlw	0
  6519  0035FA  6E2F               	movwf	(___flge@ff2+3)^0,c
  6520  0035FC                     l3416:
  6521  0035FC  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  6522  0035FE  EF03  F01B         	goto	u3491
  6523  003602  EF05  F01B         	goto	u3490
  6524  003606                     u3491:
  6525  003606  EF0E  F01B         	goto	l3420
  6526  00360A                     u3490:
  6527  00360A  6C28               	negf	___flge@ff1^0,c
  6528  00360C  1E29               	comf	(___flge@ff1+1)^0,f,c
  6529  00360E  B0D8               	btfsc	status,0,c
  6530  003610  2A29               	incf	(___flge@ff1+1)^0,f,c
  6531  003612  1E2A               	comf	(___flge@ff1+2)^0,f,c
  6532  003614  B0D8               	btfsc	status,0,c
  6533  003616  2A2A               	incf	(___flge@ff1+2)^0,f,c
  6534  003618  0E80               	movlw	128
  6535  00361A  562B               	subfwb	(___flge@ff1+3)^0,f,c
  6536  00361C                     l3420:
  6537  00361C  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  6538  00361E  EF13  F01B         	goto	u3501
  6539  003622  EF15  F01B         	goto	u3500
  6540  003626                     u3501:
  6541  003626  EF1E  F01B         	goto	l439
  6542  00362A                     u3500:
  6543  00362A  6C2C               	negf	___flge@ff2^0,c
  6544  00362C  1E2D               	comf	(___flge@ff2+1)^0,f,c
  6545  00362E  B0D8               	btfsc	status,0,c
  6546  003630  2A2D               	incf	(___flge@ff2+1)^0,f,c
  6547  003632  1E2E               	comf	(___flge@ff2+2)^0,f,c
  6548  003634  B0D8               	btfsc	status,0,c
  6549  003636  2A2E               	incf	(___flge@ff2+2)^0,f,c
  6550  003638  0E80               	movlw	128
  6551  00363A  562F               	subfwb	(___flge@ff2+3)^0,f,c
  6552  00363C                     l439:
  6553  00363C  0E00               	movlw	0
  6554  00363E  1A28               	xorwf	___flge@ff1^0,f,c
  6555  003640  0E00               	movlw	0
  6556  003642  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  6557  003644  0E00               	movlw	0
  6558  003646  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  6559  003648  0E80               	movlw	128
  6560  00364A  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  6561  00364C  0E00               	movlw	0
  6562  00364E  1A2C               	xorwf	___flge@ff2^0,f,c
  6563  003650  0E00               	movlw	0
  6564  003652  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  6565  003654  0E00               	movlw	0
  6566  003656  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  6567  003658  0E80               	movlw	128
  6568  00365A  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  6569  00365C  502C               	movf	___flge@ff2^0,w,c
  6570  00365E  5C28               	subwf	___flge@ff1^0,w,c
  6571  003660  502D               	movf	(___flge@ff2+1)^0,w,c
  6572  003662  5829               	subwfb	(___flge@ff1+1)^0,w,c
  6573  003664  502E               	movf	(___flge@ff2+2)^0,w,c
  6574  003666  582A               	subwfb	(___flge@ff1+2)^0,w,c
  6575  003668  502F               	movf	(___flge@ff2+3)^0,w,c
  6576  00366A  582B               	subwfb	(___flge@ff1+3)^0,w,c
  6577  00366C  B0D8               	btfsc	status,0,c
  6578  00366E  EF3B  F01B         	goto	u3511
  6579  003672  EF3D  F01B         	goto	u3510
  6580  003676                     u3511:
  6581  003676  EF40  F01B         	goto	l3426
  6582  00367A                     u3510:
  6583  00367A  90D8               	bcf	status,0,c
  6584  00367C  EF41  F01B         	goto	l444
  6585  003680                     l3426:
  6586  003680  80D8               	bsf	status,0,c
  6587  003682                     l444:
  6588  003682  0012               	return		;funcret
  6589  003684                     __end_of___flge:
  6590                           	callstack 0
  6591                           
  6592 ;; *************** function ___fleq *****************
  6593 ;; Defined at:
  6594 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/fleq.c"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;  ff1             4    0[COMRAM] unsigned char 
  6597 ;;  ff2             4    4[COMRAM] unsigned char 
  6598 ;; Auto vars:     Size  Location     Type
  6599 ;;		None
  6600 ;; Return value:  Size  Location     Type
  6601 ;;		None               void
  6602 ;; Registers used:
  6603 ;;		wreg, status,2, status,0
  6604 ;; Tracked objects:
  6605 ;;		On entry : 0/0
  6606 ;;		On exit  : 0/0
  6607 ;;		Unchanged: 0/0
  6608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6609 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6611 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6612 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6613 ;;Total ram usage:       12 bytes
  6614 ;; Hardware stack levels used: 1
  6615 ;; This function calls:
  6616 ;;		Nothing
  6617 ;; This function is called by:
  6618 ;;		_efgtoa
  6619 ;; This function uses a non-reentrant model
  6620 ;;
  6621                           
  6622                           	psect	text23
  6623  003B68                     __ptext23:
  6624                           	callstack 0
  6625  003B68                     ___fleq:
  6626                           	callstack 25
  6627  003B68  0E00               	movlw	0
  6628  003B6A  1401               	andwf	___fleq@ff1^0,w,c
  6629  003B6C  6E09               	movwf	??___fleq^0,c
  6630  003B6E  0E00               	movlw	0
  6631  003B70  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6632  003B72  6E0A               	movwf	(??___fleq+1)^0,c
  6633  003B74  0E80               	movlw	128
  6634  003B76  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6635  003B78  6E0B               	movwf	(??___fleq+2)^0,c
  6636  003B7A  0E7F               	movlw	127
  6637  003B7C  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6638  003B7E  6E0C               	movwf	(??___fleq+3)^0,c
  6639  003B80  5009               	movf	??___fleq^0,w,c
  6640  003B82  100A               	iorwf	(??___fleq+1)^0,w,c
  6641  003B84  100B               	iorwf	(??___fleq+2)^0,w,c
  6642  003B86  100C               	iorwf	(??___fleq+3)^0,w,c
  6643  003B88  A4D8               	btfss	status,2,c
  6644  003B8A  EFC9  F01D         	goto	u3441
  6645  003B8E  EFCB  F01D         	goto	u3440
  6646  003B92                     u3441:
  6647  003B92  EFD3  F01D         	goto	l3396
  6648  003B96                     u3440:
  6649  003B96  0E00               	movlw	0
  6650  003B98  6E01               	movwf	___fleq@ff1^0,c
  6651  003B9A  0E00               	movlw	0
  6652  003B9C  6E02               	movwf	(___fleq@ff1+1)^0,c
  6653  003B9E  0E00               	movlw	0
  6654  003BA0  6E03               	movwf	(___fleq@ff1+2)^0,c
  6655  003BA2  0E00               	movlw	0
  6656  003BA4  6E04               	movwf	(___fleq@ff1+3)^0,c
  6657  003BA6                     l3396:
  6658  003BA6  0E00               	movlw	0
  6659  003BA8  1405               	andwf	___fleq@ff2^0,w,c
  6660  003BAA  6E09               	movwf	??___fleq^0,c
  6661  003BAC  0E00               	movlw	0
  6662  003BAE  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6663  003BB0  6E0A               	movwf	(??___fleq+1)^0,c
  6664  003BB2  0E80               	movlw	128
  6665  003BB4  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6666  003BB6  6E0B               	movwf	(??___fleq+2)^0,c
  6667  003BB8  0E7F               	movlw	127
  6668  003BBA  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6669  003BBC  6E0C               	movwf	(??___fleq+3)^0,c
  6670  003BBE  5009               	movf	??___fleq^0,w,c
  6671  003BC0  100A               	iorwf	(??___fleq+1)^0,w,c
  6672  003BC2  100B               	iorwf	(??___fleq+2)^0,w,c
  6673  003BC4  100C               	iorwf	(??___fleq+3)^0,w,c
  6674  003BC6  A4D8               	btfss	status,2,c
  6675  003BC8  EFE8  F01D         	goto	u3451
  6676  003BCC  EFEA  F01D         	goto	u3450
  6677  003BD0                     u3451:
  6678  003BD0  EFF2  F01D         	goto	l3400
  6679  003BD4                     u3450:
  6680  003BD4  0E00               	movlw	0
  6681  003BD6  6E05               	movwf	___fleq@ff2^0,c
  6682  003BD8  0E00               	movlw	0
  6683  003BDA  6E06               	movwf	(___fleq@ff2+1)^0,c
  6684  003BDC  0E00               	movlw	0
  6685  003BDE  6E07               	movwf	(___fleq@ff2+2)^0,c
  6686  003BE0  0E00               	movlw	0
  6687  003BE2  6E08               	movwf	(___fleq@ff2+3)^0,c
  6688  003BE4                     l3400:
  6689  003BE4  5005               	movf	___fleq@ff2^0,w,c
  6690  003BE6  1801               	xorwf	___fleq@ff1^0,w,c
  6691  003BE8  E10F               	bnz	u3460
  6692  003BEA  5006               	movf	(___fleq@ff2+1)^0,w,c
  6693  003BEC  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6694  003BEE  E10C               	bnz	u3460
  6695  003BF0  5007               	movf	(___fleq@ff2+2)^0,w,c
  6696  003BF2  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6697  003BF4  E109               	bnz	u3460
  6698  003BF6  5008               	movf	(___fleq@ff2+3)^0,w,c
  6699  003BF8  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6700  003BFA  B4D8               	btfsc	status,2,c
  6701  003BFC  EF02  F01E         	goto	u3461
  6702  003C00  EF04  F01E         	goto	u3460
  6703  003C04                     u3461:
  6704  003C04  EF07  F01E         	goto	l3404
  6705  003C08                     u3460:
  6706  003C08  90D8               	bcf	status,0,c
  6707  003C0A  EF08  F01E         	goto	l433
  6708  003C0E                     l3404:
  6709  003C0E  80D8               	bsf	status,0,c
  6710  003C10                     l433:
  6711  003C10  0012               	return		;funcret
  6712  003C12                     __end_of___fleq:
  6713                           	callstack 0
  6714                           
  6715 ;; *************** function ___fldiv *****************
  6716 ;; Defined at:
  6717 ;;		line 11 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcdiv.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;  b               4   39[COMRAM] unsigned char 
  6720 ;;  a               4   43[COMRAM] unsigned char 
  6721 ;; Auto vars:     Size  Location     Type
  6722 ;;  grs             4   58[COMRAM] unsigned long 
  6723 ;;  rem             4   51[COMRAM] unsigned long 
  6724 ;;  new_exp         2   56[COMRAM] short 
  6725 ;;  aexp            1   63[COMRAM] unsigned char 
  6726 ;;  bexp            1   62[COMRAM] unsigned char 
  6727 ;;  sign            1   55[COMRAM] unsigned char 
  6728 ;; Return value:  Size  Location     Type
  6729 ;;                  4   39[COMRAM] unsigned char 
  6730 ;; Registers used:
  6731 ;;		wreg, status,2, status,0
  6732 ;; Tracked objects:
  6733 ;;		On entry : 0/0
  6734 ;;		On exit  : 0/0
  6735 ;;		Unchanged: 0/0
  6736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6737 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6738 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6739 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6740 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6741 ;;Total ram usage:       25 bytes
  6742 ;; Hardware stack levels used: 1
  6743 ;; This function calls:
  6744 ;;		Nothing
  6745 ;; This function is called by:
  6746 ;;		_ex3
  6747 ;;		_efgtoa
  6748 ;; This function uses a non-reentrant model
  6749 ;;
  6750                           
  6751                           	psect	text24
  6752  002A9A                     __ptext24:
  6753                           	callstack 0
  6754  002A9A                     ___fldiv:
  6755                           	callstack 25
  6756  002A9A  502B               	movf	(___fldiv@b+3)^0,w,c
  6757  002A9C  0B80               	andlw	128
  6758  002A9E  6E38               	movwf	___fldiv@sign^0,c
  6759  002AA0  502B               	movf	(___fldiv@b+3)^0,w,c
  6760  002AA2  242B               	addwf	(___fldiv@b+3)^0,w,c
  6761  002AA4  6E3F               	movwf	___fldiv@bexp^0,c
  6762  002AA6  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6763  002AA8  EF58  F015         	goto	u2901
  6764  002AAC  EF5A  F015         	goto	u2900
  6765  002AB0                     u2901:
  6766  002AB0  EF5B  F015         	goto	l3044
  6767  002AB4                     u2900:
  6768  002AB4  803F               	bsf	___fldiv@bexp^0,0,c
  6769  002AB6                     l3044:
  6770  002AB6  503F               	movf	___fldiv@bexp^0,w,c
  6771  002AB8  B4D8               	btfsc	status,2,c
  6772  002ABA  EF61  F015         	goto	u2911
  6773  002ABE  EF63  F015         	goto	u2910
  6774  002AC2                     u2911:
  6775  002AC2  EF78  F015         	goto	l3054
  6776  002AC6                     u2910:
  6777  002AC6  283F               	incf	___fldiv@bexp^0,w,c
  6778  002AC8  A4D8               	btfss	status,2,c
  6779  002ACA  EF69  F015         	goto	u2921
  6780  002ACE  EF6B  F015         	goto	u2920
  6781  002AD2                     u2921:
  6782  002AD2  EF73  F015         	goto	l3050
  6783  002AD6                     u2920:
  6784  002AD6  0E00               	movlw	0
  6785  002AD8  6E28               	movwf	___fldiv@b^0,c
  6786  002ADA  0E00               	movlw	0
  6787  002ADC  6E29               	movwf	(___fldiv@b+1)^0,c
  6788  002ADE  0E00               	movlw	0
  6789  002AE0  6E2A               	movwf	(___fldiv@b+2)^0,c
  6790  002AE2  0E00               	movlw	0
  6791  002AE4  6E2B               	movwf	(___fldiv@b+3)^0,c
  6792  002AE6                     l3050:
  6793  002AE6  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  6794  002AE8  0E00               	movlw	0
  6795  002AEA  6E2B               	movwf	(___fldiv@b+3)^0,c
  6796  002AEC  EF80  F015         	goto	l3056
  6797  002AF0                     l3054:
  6798  002AF0  0E00               	movlw	0
  6799  002AF2  6E28               	movwf	___fldiv@b^0,c
  6800  002AF4  0E00               	movlw	0
  6801  002AF6  6E29               	movwf	(___fldiv@b+1)^0,c
  6802  002AF8  0E00               	movlw	0
  6803  002AFA  6E2A               	movwf	(___fldiv@b+2)^0,c
  6804  002AFC  0E00               	movlw	0
  6805  002AFE  6E2B               	movwf	(___fldiv@b+3)^0,c
  6806  002B00                     l3056:
  6807  002B00  502F               	movf	(___fldiv@a+3)^0,w,c
  6808  002B02  0B80               	andlw	128
  6809  002B04  1A38               	xorwf	___fldiv@sign^0,f,c
  6810  002B06  502F               	movf	(___fldiv@a+3)^0,w,c
  6811  002B08  242F               	addwf	(___fldiv@a+3)^0,w,c
  6812  002B0A  6E40               	movwf	___fldiv@aexp^0,c
  6813  002B0C  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  6814  002B0E  EF8B  F015         	goto	u2931
  6815  002B12  EF8D  F015         	goto	u2930
  6816  002B16                     u2931:
  6817  002B16  EF8E  F015         	goto	l3064
  6818  002B1A                     u2930:
  6819  002B1A  8040               	bsf	___fldiv@aexp^0,0,c
  6820  002B1C                     l3064:
  6821  002B1C  5040               	movf	___fldiv@aexp^0,w,c
  6822  002B1E  B4D8               	btfsc	status,2,c
  6823  002B20  EF94  F015         	goto	u2941
  6824  002B24  EF96  F015         	goto	u2940
  6825  002B28                     u2941:
  6826  002B28  EFAB  F015         	goto	l3074
  6827  002B2C                     u2940:
  6828  002B2C  2840               	incf	___fldiv@aexp^0,w,c
  6829  002B2E  A4D8               	btfss	status,2,c
  6830  002B30  EF9C  F015         	goto	u2951
  6831  002B34  EF9E  F015         	goto	u2950
  6832  002B38                     u2951:
  6833  002B38  EFA6  F015         	goto	l3070
  6834  002B3C                     u2950:
  6835  002B3C  0E00               	movlw	0
  6836  002B3E  6E2C               	movwf	___fldiv@a^0,c
  6837  002B40  0E00               	movlw	0
  6838  002B42  6E2D               	movwf	(___fldiv@a+1)^0,c
  6839  002B44  0E00               	movlw	0
  6840  002B46  6E2E               	movwf	(___fldiv@a+2)^0,c
  6841  002B48  0E00               	movlw	0
  6842  002B4A  6E2F               	movwf	(___fldiv@a+3)^0,c
  6843  002B4C                     l3070:
  6844  002B4C  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  6845  002B4E  0E00               	movlw	0
  6846  002B50  6E2F               	movwf	(___fldiv@a+3)^0,c
  6847  002B52  EFB3  F015         	goto	l3076
  6848  002B56                     l3074:
  6849  002B56  0E00               	movlw	0
  6850  002B58  6E2C               	movwf	___fldiv@a^0,c
  6851  002B5A  0E00               	movlw	0
  6852  002B5C  6E2D               	movwf	(___fldiv@a+1)^0,c
  6853  002B5E  0E00               	movlw	0
  6854  002B60  6E2E               	movwf	(___fldiv@a+2)^0,c
  6855  002B62  0E00               	movlw	0
  6856  002B64  6E2F               	movwf	(___fldiv@a+3)^0,c
  6857  002B66                     l3076:
  6858  002B66  502C               	movf	___fldiv@a^0,w,c
  6859  002B68  102D               	iorwf	(___fldiv@a+1)^0,w,c
  6860  002B6A  102E               	iorwf	(___fldiv@a+2)^0,w,c
  6861  002B6C  102F               	iorwf	(___fldiv@a+3)^0,w,c
  6862  002B6E  A4D8               	btfss	status,2,c
  6863  002B70  EFBC  F015         	goto	u2961
  6864  002B74  EFBE  F015         	goto	u2960
  6865  002B78                     u2961:
  6866  002B78  EFD6  F015         	goto	l3088
  6867  002B7C                     u2960:
  6868  002B7C  0E00               	movlw	0
  6869  002B7E  6E28               	movwf	___fldiv@b^0,c
  6870  002B80  0E00               	movlw	0
  6871  002B82  6E29               	movwf	(___fldiv@b+1)^0,c
  6872  002B84  0E00               	movlw	0
  6873  002B86  6E2A               	movwf	(___fldiv@b+2)^0,c
  6874  002B88  0E00               	movlw	0
  6875  002B8A  6E2B               	movwf	(___fldiv@b+3)^0,c
  6876  002B8C  0E80               	movlw	128
  6877  002B8E  122A               	iorwf	(___fldiv@b+2)^0,f,c
  6878  002B90  0E7F               	movlw	127
  6879  002B92  122B               	iorwf	(___fldiv@b+3)^0,f,c
  6880  002B94                     l3082:
  6881  002B94  5038               	movf	___fldiv@sign^0,w,c
  6882  002B96  122B               	iorwf	(___fldiv@b+3)^0,f,c
  6883  002B98  C028  F028         	movff	___fldiv@b,?___fldiv
  6884  002B9C  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  6885  002BA0  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  6886  002BA4  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  6887  002BA8  EF19  F017         	goto	l756
  6888  002BAC                     l3088:
  6889  002BAC  503F               	movf	___fldiv@bexp^0,w,c
  6890  002BAE  A4D8               	btfss	status,2,c
  6891  002BB0  EFDC  F015         	goto	u2971
  6892  002BB4  EFDE  F015         	goto	u2970
  6893  002BB8                     u2971:
  6894  002BB8  EFE8  F015         	goto	l3096
  6895  002BBC                     u2970:
  6896  002BBC  0E00               	movlw	0
  6897  002BBE  6E28               	movwf	?___fldiv^0,c
  6898  002BC0  0E00               	movlw	0
  6899  002BC2  6E29               	movwf	(?___fldiv+1)^0,c
  6900  002BC4  0E00               	movlw	0
  6901  002BC6  6E2A               	movwf	(?___fldiv+2)^0,c
  6902  002BC8  0E00               	movlw	0
  6903  002BCA  6E2B               	movwf	(?___fldiv+3)^0,c
  6904  002BCC  EF19  F017         	goto	l756
  6905  002BD0                     l3096:
  6906  002BD0  5040               	movf	___fldiv@aexp^0,w,c
  6907  002BD2  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  6908  002BD6  6A31               	clrf	(??___fldiv+1)^0,c
  6909  002BD8  5E30               	subwf	??___fldiv^0,f,c
  6910  002BDA  0E00               	movlw	0
  6911  002BDC  5A31               	subwfb	(??___fldiv+1)^0,f,c
  6912  002BDE  0E7F               	movlw	127
  6913  002BE0  2430               	addwf	??___fldiv^0,w,c
  6914  002BE2  6E39               	movwf	___fldiv@new_exp^0,c
  6915  002BE4  0E00               	movlw	0
  6916  002BE6  2031               	addwfc	(??___fldiv+1)^0,w,c
  6917  002BE8  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6918  002BEA  C028  F034         	movff	___fldiv@b,___fldiv@rem
  6919  002BEE  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  6920  002BF2  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  6921  002BF6  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  6922  002BFA  0E00               	movlw	0
  6923  002BFC  6E28               	movwf	___fldiv@b^0,c
  6924  002BFE  0E00               	movlw	0
  6925  002C00  6E29               	movwf	(___fldiv@b+1)^0,c
  6926  002C02  0E00               	movlw	0
  6927  002C04  6E2A               	movwf	(___fldiv@b+2)^0,c
  6928  002C06  0E00               	movlw	0
  6929  002C08  6E2B               	movwf	(___fldiv@b+3)^0,c
  6930  002C0A  0E00               	movlw	0
  6931  002C0C  6E3B               	movwf	___fldiv@grs^0,c
  6932  002C0E  0E00               	movlw	0
  6933  002C10  6E3C               	movwf	(___fldiv@grs+1)^0,c
  6934  002C12  0E00               	movlw	0
  6935  002C14  6E3D               	movwf	(___fldiv@grs+2)^0,c
  6936  002C16  0E00               	movlw	0
  6937  002C18  6E3E               	movwf	(___fldiv@grs+3)^0,c
  6938  002C1A  0E00               	movlw	0
  6939  002C1C  6E40               	movwf	___fldiv@aexp^0,c
  6940  002C1E  EF49  F016         	goto	l758
  6941  002C22                     l3106:
  6942  002C22  5040               	movf	___fldiv@aexp^0,w,c
  6943  002C24  B4D8               	btfsc	status,2,c
  6944  002C26  EF17  F016         	goto	u2981
  6945  002C2A  EF19  F016         	goto	u2980
  6946  002C2E                     u2981:
  6947  002C2E  EF30  F016         	goto	l3114
  6948  002C32                     u2980:
  6949  002C32  90D8               	bcf	status,0,c
  6950  002C34  3634               	rlcf	___fldiv@rem^0,f,c
  6951  002C36  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  6952  002C38  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  6953  002C3A  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  6954  002C3C  90D8               	bcf	status,0,c
  6955  002C3E  3628               	rlcf	___fldiv@b^0,f,c
  6956  002C40  3629               	rlcf	(___fldiv@b+1)^0,f,c
  6957  002C42  362A               	rlcf	(___fldiv@b+2)^0,f,c
  6958  002C44  362B               	rlcf	(___fldiv@b+3)^0,f,c
  6959  002C46  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6960  002C48  EF28  F016         	goto	u2991
  6961  002C4C  EF2A  F016         	goto	u2990
  6962  002C50                     u2991:
  6963  002C50  EF2B  F016         	goto	l761
  6964  002C54                     u2990:
  6965  002C54  8028               	bsf	___fldiv@b^0,0,c
  6966  002C56                     l761:
  6967  002C56  90D8               	bcf	status,0,c
  6968  002C58  363B               	rlcf	___fldiv@grs^0,f,c
  6969  002C5A  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  6970  002C5C  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  6971  002C5E  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  6972  002C60                     l3114:
  6973  002C60  502C               	movf	___fldiv@a^0,w,c
  6974  002C62  5C34               	subwf	___fldiv@rem^0,w,c
  6975  002C64  502D               	movf	(___fldiv@a+1)^0,w,c
  6976  002C66  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  6977  002C68  502E               	movf	(___fldiv@a+2)^0,w,c
  6978  002C6A  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  6979  002C6C  502F               	movf	(___fldiv@a+3)^0,w,c
  6980  002C6E  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  6981  002C70  A0D8               	btfss	status,0,c
  6982  002C72  EF3D  F016         	goto	u3001
  6983  002C76  EF3F  F016         	goto	u3000
  6984  002C7A                     u3001:
  6985  002C7A  EF48  F016         	goto	l3120
  6986  002C7E                     u3000:
  6987  002C7E  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  6988  002C80  502C               	movf	___fldiv@a^0,w,c
  6989  002C82  5E34               	subwf	___fldiv@rem^0,f,c
  6990  002C84  502D               	movf	(___fldiv@a+1)^0,w,c
  6991  002C86  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  6992  002C88  502E               	movf	(___fldiv@a+2)^0,w,c
  6993  002C8A  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  6994  002C8C  502F               	movf	(___fldiv@a+3)^0,w,c
  6995  002C8E  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  6996  002C90                     l3120:
  6997  002C90  2A40               	incf	___fldiv@aexp^0,f,c
  6998  002C92                     l758:
  6999  002C92  0E19               	movlw	25
  7000  002C94  6440               	cpfsgt	___fldiv@aexp^0,c
  7001  002C96  EF4F  F016         	goto	u3011
  7002  002C9A  EF51  F016         	goto	u3010
  7003  002C9E                     u3011:
  7004  002C9E  EF11  F016         	goto	l3106
  7005  002CA2                     u3010:
  7006  002CA2  5034               	movf	___fldiv@rem^0,w,c
  7007  002CA4  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  7008  002CA6  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  7009  002CA8  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  7010  002CAA  B4D8               	btfsc	status,2,c
  7011  002CAC  EF5A  F016         	goto	u3021
  7012  002CB0  EF5C  F016         	goto	u3020
  7013  002CB4                     u3021:
  7014  002CB4  EF74  F016         	goto	l3132
  7015  002CB8                     u3020:
  7016  002CB8  803B               	bsf	___fldiv@grs^0,0,c
  7017  002CBA  EF74  F016         	goto	l3132
  7018  002CBE                     l3126:
  7019  002CBE  90D8               	bcf	status,0,c
  7020  002CC0  3628               	rlcf	___fldiv@b^0,f,c
  7021  002CC2  3629               	rlcf	(___fldiv@b+1)^0,f,c
  7022  002CC4  362A               	rlcf	(___fldiv@b+2)^0,f,c
  7023  002CC6  362B               	rlcf	(___fldiv@b+3)^0,f,c
  7024  002CC8  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7025  002CCA  EF69  F016         	goto	u3031
  7026  002CCE  EF6B  F016         	goto	u3030
  7027  002CD2                     u3031:
  7028  002CD2  EF6C  F016         	goto	l767
  7029  002CD6                     u3030:
  7030  002CD6  8028               	bsf	___fldiv@b^0,0,c
  7031  002CD8                     l767:
  7032  002CD8  90D8               	bcf	status,0,c
  7033  002CDA  363B               	rlcf	___fldiv@grs^0,f,c
  7034  002CDC  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  7035  002CDE  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  7036  002CE0  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  7037  002CE2  0639               	decf	___fldiv@new_exp^0,f,c
  7038  002CE4  A0D8               	btfss	status,0,c
  7039  002CE6  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  7040  002CE8                     l3132:
  7041  002CE8  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  7042  002CEA  EF79  F016         	goto	u3041
  7043  002CEE  EF7B  F016         	goto	u3040
  7044  002CF2                     u3041:
  7045  002CF2  EF5F  F016         	goto	l3126
  7046  002CF6                     u3040:
  7047  002CF6  0E00               	movlw	0
  7048  002CF8  6E40               	movwf	___fldiv@aexp^0,c
  7049  002CFA  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7050  002CFC  EF82  F016         	goto	u3051
  7051  002D00  EF84  F016         	goto	u3050
  7052  002D04                     u3051:
  7053  002D04  EFA8  F016         	goto	l769
  7054  002D08                     u3050:
  7055  002D08  0EFF               	movlw	255
  7056  002D0A  143B               	andwf	___fldiv@grs^0,w,c
  7057  002D0C  6E30               	movwf	??___fldiv^0,c
  7058  002D0E  0EFF               	movlw	255
  7059  002D10  143C               	andwf	(___fldiv@grs+1)^0,w,c
  7060  002D12  6E31               	movwf	(??___fldiv+1)^0,c
  7061  002D14  0EFF               	movlw	255
  7062  002D16  143D               	andwf	(___fldiv@grs+2)^0,w,c
  7063  002D18  6E32               	movwf	(??___fldiv+2)^0,c
  7064  002D1A  0E7F               	movlw	127
  7065  002D1C  143E               	andwf	(___fldiv@grs+3)^0,w,c
  7066  002D1E  6E33               	movwf	(??___fldiv+3)^0,c
  7067  002D20  5030               	movf	??___fldiv^0,w,c
  7068  002D22  1031               	iorwf	(??___fldiv+1)^0,w,c
  7069  002D24  1032               	iorwf	(??___fldiv+2)^0,w,c
  7070  002D26  1033               	iorwf	(??___fldiv+3)^0,w,c
  7071  002D28  B4D8               	btfsc	status,2,c
  7072  002D2A  EF99  F016         	goto	u3061
  7073  002D2E  EF9B  F016         	goto	u3060
  7074  002D32                     u3061:
  7075  002D32  EF9F  F016         	goto	l770
  7076  002D36                     u3060:
  7077  002D36                     l3140:
  7078  002D36  0E01               	movlw	1
  7079  002D38  6E40               	movwf	___fldiv@aexp^0,c
  7080  002D3A  EFA8  F016         	goto	l769
  7081  002D3E                     l770:
  7082  002D3E  A028               	btfss	___fldiv@b^0,0,c
  7083  002D40  EFA4  F016         	goto	u3071
  7084  002D44  EFA6  F016         	goto	u3070
  7085  002D48                     u3071:
  7086  002D48  EFA8  F016         	goto	l769
  7087  002D4C                     u3070:
  7088  002D4C  EF9B  F016         	goto	l3140
  7089  002D50                     l769:
  7090  002D50  5040               	movf	___fldiv@aexp^0,w,c
  7091  002D52  B4D8               	btfsc	status,2,c
  7092  002D54  EFAE  F016         	goto	u3081
  7093  002D58  EFB0  F016         	goto	u3080
  7094  002D5C                     u3081:
  7095  002D5C  EFD4  F016         	goto	l3152
  7096  002D60                     u3080:
  7097  002D60  0E01               	movlw	1
  7098  002D62  2628               	addwf	___fldiv@b^0,f,c
  7099  002D64  0E00               	movlw	0
  7100  002D66  2229               	addwfc	(___fldiv@b+1)^0,f,c
  7101  002D68  222A               	addwfc	(___fldiv@b+2)^0,f,c
  7102  002D6A  222B               	addwfc	(___fldiv@b+3)^0,f,c
  7103  002D6C  A02B               	btfss	(___fldiv@b+3)^0,0,c
  7104  002D6E  EFBB  F016         	goto	u3091
  7105  002D72  EFBD  F016         	goto	u3090
  7106  002D76                     u3091:
  7107  002D76  EFD4  F016         	goto	l3152
  7108  002D7A                     u3090:
  7109  002D7A  C028  F030         	movff	___fldiv@b,??___fldiv
  7110  002D7E  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  7111  002D82  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  7112  002D86  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  7113  002D8A  3433               	rlcf	(??___fldiv+3)^0,w,c
  7114  002D8C  3233               	rrcf	(??___fldiv+3)^0,f,c
  7115  002D8E  3232               	rrcf	(??___fldiv+2)^0,f,c
  7116  002D90  3231               	rrcf	(??___fldiv+1)^0,f,c
  7117  002D92  3230               	rrcf	??___fldiv^0,f,c
  7118  002D94  C030  F028         	movff	??___fldiv,___fldiv@b
  7119  002D98  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  7120  002D9C  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  7121  002DA0  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  7122  002DA4  4A39               	infsnz	___fldiv@new_exp^0,f,c
  7123  002DA6  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  7124  002DA8                     l3152:
  7125  002DA8  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7126  002DAA  EFDF  F016         	goto	u3101
  7127  002DAE  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  7128  002DB0  E108               	bnz	u3100
  7129  002DB2  2839               	incf	___fldiv@new_exp^0,w,c
  7130  002DB4  A0D8               	btfss	status,0,c
  7131  002DB6  EFDF  F016         	goto	u3101
  7132  002DBA  EFE1  F016         	goto	u3100
  7133  002DBE                     u3101:
  7134  002DBE  EFEC  F016         	goto	l3156
  7135  002DC2                     u3100:
  7136  002DC2  0E00               	movlw	0
  7137  002DC4  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7138  002DC6  6839               	setf	___fldiv@new_exp^0,c
  7139  002DC8  0E00               	movlw	0
  7140  002DCA  6E28               	movwf	___fldiv@b^0,c
  7141  002DCC  0E00               	movlw	0
  7142  002DCE  6E29               	movwf	(___fldiv@b+1)^0,c
  7143  002DD0  0E00               	movlw	0
  7144  002DD2  6E2A               	movwf	(___fldiv@b+2)^0,c
  7145  002DD4  0E00               	movlw	0
  7146  002DD6  6E2B               	movwf	(___fldiv@b+3)^0,c
  7147  002DD8                     l3156:
  7148  002DD8  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7149  002DDA  EFF9  F016         	goto	u3110
  7150  002DDE  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  7151  002DE0  E106               	bnz	u3111
  7152  002DE2  0439               	decf	___fldiv@new_exp^0,w,c
  7153  002DE4  B0D8               	btfsc	status,0,c
  7154  002DE6  EFF7  F016         	goto	u3111
  7155  002DEA  EFF9  F016         	goto	u3110
  7156  002DEE                     u3111:
  7157  002DEE  EF07  F017         	goto	l3160
  7158  002DF2                     u3110:
  7159  002DF2  0E00               	movlw	0
  7160  002DF4  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7161  002DF6  0E00               	movlw	0
  7162  002DF8  6E39               	movwf	___fldiv@new_exp^0,c
  7163  002DFA  0E00               	movlw	0
  7164  002DFC  6E28               	movwf	___fldiv@b^0,c
  7165  002DFE  0E00               	movlw	0
  7166  002E00  6E29               	movwf	(___fldiv@b+1)^0,c
  7167  002E02  0E00               	movlw	0
  7168  002E04  6E2A               	movwf	(___fldiv@b+2)^0,c
  7169  002E06  0E00               	movlw	0
  7170  002E08  6E2B               	movwf	(___fldiv@b+3)^0,c
  7171  002E0A  0E00               	movlw	0
  7172  002E0C  6E38               	movwf	___fldiv@sign^0,c
  7173  002E0E                     l3160:
  7174  002E0E  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  7175  002E12  A03F               	btfss	___fldiv@bexp^0,0,c
  7176  002E14  EF0E  F017         	goto	u3121
  7177  002E18  EF10  F017         	goto	u3120
  7178  002E1C                     u3121:
  7179  002E1C  EF13  F017         	goto	l3166
  7180  002E20                     u3120:
  7181  002E20  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  7182  002E22  EF14  F017         	goto	l3168
  7183  002E26                     l3166:
  7184  002E26  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  7185  002E28                     l3168:
  7186  002E28  90D8               	bcf	status,0,c
  7187  002E2A  303F               	rrcf	___fldiv@bexp^0,w,c
  7188  002E2C  6E2B               	movwf	(___fldiv@b+3)^0,c
  7189  002E2E  EFCA  F015         	goto	l3082
  7190  002E32                     l756:
  7191  002E32  0012               	return		;funcret
  7192  002E34                     __end_of___fldiv:
  7193                           	callstack 0
  7194                           
  7195 ;; *************** function ___awmod *****************
  7196 ;; Defined at:
  7197 ;;		line 7 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/awmod.c"
  7198 ;; Parameters:    Size  Location     Type
  7199 ;;  dividend        2    0[COMRAM] int 
  7200 ;;  divisor         2    2[COMRAM] int 
  7201 ;; Auto vars:     Size  Location     Type
  7202 ;;  sign            1    5[COMRAM] unsigned char 
  7203 ;;  counter         1    4[COMRAM] unsigned char 
  7204 ;; Return value:  Size  Location     Type
  7205 ;;                  2    0[COMRAM] int 
  7206 ;; Registers used:
  7207 ;;		wreg, status,2, status,0
  7208 ;; Tracked objects:
  7209 ;;		On entry : 0/0
  7210 ;;		On exit  : 0/0
  7211 ;;		Unchanged: 0/0
  7212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7213 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7214 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7216 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7217 ;;Total ram usage:        6 bytes
  7218 ;; Hardware stack levels used: 1
  7219 ;; This function calls:
  7220 ;;		Nothing
  7221 ;; This function is called by:
  7222 ;;		_efgtoa
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226                           	psect	text25
  7227  003AB8                     __ptext25:
  7228                           	callstack 0
  7229  003AB8                     ___awmod:
  7230                           	callstack 25
  7231  003AB8  0E00               	movlw	0
  7232  003ABA  6E06               	movwf	___awmod@sign^0,c
  7233  003ABC  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7234  003ABE  EF65  F01D         	goto	u3380
  7235  003AC2  EF63  F01D         	goto	u3381
  7236  003AC6                     u3381:
  7237  003AC6  EF6B  F01D         	goto	l3364
  7238  003ACA                     u3380:
  7239  003ACA  6C01               	negf	___awmod@dividend^0,c
  7240  003ACC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7241  003ACE  B0D8               	btfsc	status,0,c
  7242  003AD0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7243  003AD2  0E01               	movlw	1
  7244  003AD4  6E06               	movwf	___awmod@sign^0,c
  7245  003AD6                     l3364:
  7246  003AD6  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7247  003AD8  EF72  F01D         	goto	u3390
  7248  003ADC  EF70  F01D         	goto	u3391
  7249  003AE0                     u3391:
  7250  003AE0  EF76  F01D         	goto	l3368
  7251  003AE4                     u3390:
  7252  003AE4  6C03               	negf	___awmod@divisor^0,c
  7253  003AE6  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7254  003AE8  B0D8               	btfsc	status,0,c
  7255  003AEA  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7256  003AEC                     l3368:
  7257  003AEC  5003               	movf	___awmod@divisor^0,w,c
  7258  003AEE  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7259  003AF0  B4D8               	btfsc	status,2,c
  7260  003AF2  EF7D  F01D         	goto	u3401
  7261  003AF6  EF7F  F01D         	goto	u3400
  7262  003AFA                     u3401:
  7263  003AFA  EFA3  F01D         	goto	l3384
  7264  003AFE                     u3400:
  7265  003AFE  0E01               	movlw	1
  7266  003B00  6E05               	movwf	___awmod@counter^0,c
  7267  003B02  EF87  F01D         	goto	l3374
  7268  003B06                     l3372:
  7269  003B06  90D8               	bcf	status,0,c
  7270  003B08  3603               	rlcf	___awmod@divisor^0,f,c
  7271  003B0A  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7272  003B0C  2A05               	incf	___awmod@counter^0,f,c
  7273  003B0E                     l3374:
  7274  003B0E  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7275  003B10  EF8C  F01D         	goto	u3411
  7276  003B14  EF8E  F01D         	goto	u3410
  7277  003B18                     u3411:
  7278  003B18  EF83  F01D         	goto	l3372
  7279  003B1C                     u3410:
  7280  003B1C                     l3376:
  7281  003B1C  5003               	movf	___awmod@divisor^0,w,c
  7282  003B1E  5C01               	subwf	___awmod@dividend^0,w,c
  7283  003B20  5004               	movf	(___awmod@divisor+1)^0,w,c
  7284  003B22  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7285  003B24  A0D8               	btfss	status,0,c
  7286  003B26  EF97  F01D         	goto	u3421
  7287  003B2A  EF99  F01D         	goto	u3420
  7288  003B2E                     u3421:
  7289  003B2E  EF9D  F01D         	goto	l3380
  7290  003B32                     u3420:
  7291  003B32  5003               	movf	___awmod@divisor^0,w,c
  7292  003B34  5E01               	subwf	___awmod@dividend^0,f,c
  7293  003B36  5004               	movf	(___awmod@divisor+1)^0,w,c
  7294  003B38  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7295  003B3A                     l3380:
  7296  003B3A  90D8               	bcf	status,0,c
  7297  003B3C  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7298  003B3E  3203               	rrcf	___awmod@divisor^0,f,c
  7299  003B40  2E05               	decfsz	___awmod@counter^0,f,c
  7300  003B42  EF8E  F01D         	goto	l3376
  7301  003B46                     l3384:
  7302  003B46  5006               	movf	___awmod@sign^0,w,c
  7303  003B48  B4D8               	btfsc	status,2,c
  7304  003B4A  EFA9  F01D         	goto	u3431
  7305  003B4E  EFAB  F01D         	goto	u3430
  7306  003B52                     u3431:
  7307  003B52  EFAF  F01D         	goto	l3388
  7308  003B56                     u3430:
  7309  003B56  6C01               	negf	___awmod@dividend^0,c
  7310  003B58  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7311  003B5A  B0D8               	btfsc	status,0,c
  7312  003B5C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7313  003B5E                     l3388:
  7314  003B5E  C001  F001         	movff	___awmod@dividend,?___awmod
  7315  003B62  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7316  003B66  0012               	return		;funcret
  7317  003B68                     __end_of___awmod:
  7318                           	callstack 0
  7319                           
  7320 ;; *************** function ___awdiv *****************
  7321 ;; Defined at:
  7322 ;;		line 7 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/awdiv.c"
  7323 ;; Parameters:    Size  Location     Type
  7324 ;;  dividend        2    0[COMRAM] int 
  7325 ;;  divisor         2    2[COMRAM] int 
  7326 ;; Auto vars:     Size  Location     Type
  7327 ;;  quotient        2    6[COMRAM] int 
  7328 ;;  sign            1    5[COMRAM] unsigned char 
  7329 ;;  counter         1    4[COMRAM] unsigned char 
  7330 ;; Return value:  Size  Location     Type
  7331 ;;                  2    0[COMRAM] int 
  7332 ;; Registers used:
  7333 ;;		wreg, status,2, status,0
  7334 ;; Tracked objects:
  7335 ;;		On entry : 0/0
  7336 ;;		On exit  : 0/0
  7337 ;;		Unchanged: 0/0
  7338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7339 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7340 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7342 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7343 ;;Total ram usage:        8 bytes
  7344 ;; Hardware stack levels used: 1
  7345 ;; This function calls:
  7346 ;;		Nothing
  7347 ;; This function is called by:
  7348 ;;		_efgtoa
  7349 ;; This function uses a non-reentrant model
  7350 ;;
  7351                           
  7352                           	psect	text26
  7353  0039F4                     __ptext26:
  7354                           	callstack 0
  7355  0039F4                     ___awdiv:
  7356                           	callstack 25
  7357  0039F4  0E00               	movlw	0
  7358  0039F6  6E06               	movwf	___awdiv@sign^0,c
  7359  0039F8  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7360  0039FA  EF03  F01D         	goto	u3320
  7361  0039FE  EF01  F01D         	goto	u3321
  7362  003A02                     u3321:
  7363  003A02  EF09  F01D         	goto	l3320
  7364  003A06                     u3320:
  7365  003A06  6C03               	negf	___awdiv@divisor^0,c
  7366  003A08  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7367  003A0A  B0D8               	btfsc	status,0,c
  7368  003A0C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7369  003A0E  0E01               	movlw	1
  7370  003A10  6E06               	movwf	___awdiv@sign^0,c
  7371  003A12                     l3320:
  7372  003A12  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7373  003A14  EF10  F01D         	goto	u3330
  7374  003A18  EF0E  F01D         	goto	u3331
  7375  003A1C                     u3331:
  7376  003A1C  EF16  F01D         	goto	l3326
  7377  003A20                     u3330:
  7378  003A20  6C01               	negf	___awdiv@dividend^0,c
  7379  003A22  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7380  003A24  B0D8               	btfsc	status,0,c
  7381  003A26  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7382  003A28  0E01               	movlw	1
  7383  003A2A  1A06               	xorwf	___awdiv@sign^0,f,c
  7384  003A2C                     l3326:
  7385  003A2C  0E00               	movlw	0
  7386  003A2E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7387  003A30  0E00               	movlw	0
  7388  003A32  6E07               	movwf	___awdiv@quotient^0,c
  7389  003A34  5003               	movf	___awdiv@divisor^0,w,c
  7390  003A36  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7391  003A38  B4D8               	btfsc	status,2,c
  7392  003A3A  EF21  F01D         	goto	u3341
  7393  003A3E  EF23  F01D         	goto	u3340
  7394  003A42                     u3341:
  7395  003A42  EF4B  F01D         	goto	l3348
  7396  003A46                     u3340:
  7397  003A46  0E01               	movlw	1
  7398  003A48  6E05               	movwf	___awdiv@counter^0,c
  7399  003A4A  EF2B  F01D         	goto	l3334
  7400  003A4E                     l3332:
  7401  003A4E  90D8               	bcf	status,0,c
  7402  003A50  3603               	rlcf	___awdiv@divisor^0,f,c
  7403  003A52  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7404  003A54  2A05               	incf	___awdiv@counter^0,f,c
  7405  003A56                     l3334:
  7406  003A56  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7407  003A58  EF30  F01D         	goto	u3351
  7408  003A5C  EF32  F01D         	goto	u3350
  7409  003A60                     u3351:
  7410  003A60  EF27  F01D         	goto	l3332
  7411  003A64                     u3350:
  7412  003A64                     l3336:
  7413  003A64  90D8               	bcf	status,0,c
  7414  003A66  3607               	rlcf	___awdiv@quotient^0,f,c
  7415  003A68  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7416  003A6A  5003               	movf	___awdiv@divisor^0,w,c
  7417  003A6C  5C01               	subwf	___awdiv@dividend^0,w,c
  7418  003A6E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7419  003A70  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7420  003A72  A0D8               	btfss	status,0,c
  7421  003A74  EF3E  F01D         	goto	u3361
  7422  003A78  EF40  F01D         	goto	u3360
  7423  003A7C                     u3361:
  7424  003A7C  EF45  F01D         	goto	l3344
  7425  003A80                     u3360:
  7426  003A80  5003               	movf	___awdiv@divisor^0,w,c
  7427  003A82  5E01               	subwf	___awdiv@dividend^0,f,c
  7428  003A84  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7429  003A86  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7430  003A88  8007               	bsf	___awdiv@quotient^0,0,c
  7431  003A8A                     l3344:
  7432  003A8A  90D8               	bcf	status,0,c
  7433  003A8C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7434  003A8E  3203               	rrcf	___awdiv@divisor^0,f,c
  7435  003A90  2E05               	decfsz	___awdiv@counter^0,f,c
  7436  003A92  EF32  F01D         	goto	l3336
  7437  003A96                     l3348:
  7438  003A96  5006               	movf	___awdiv@sign^0,w,c
  7439  003A98  B4D8               	btfsc	status,2,c
  7440  003A9A  EF51  F01D         	goto	u3371
  7441  003A9E  EF53  F01D         	goto	u3370
  7442  003AA2                     u3371:
  7443  003AA2  EF57  F01D         	goto	l3352
  7444  003AA6                     u3370:
  7445  003AA6  6C07               	negf	___awdiv@quotient^0,c
  7446  003AA8  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7447  003AAA  B0D8               	btfsc	status,0,c
  7448  003AAC  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7449  003AAE                     l3352:
  7450  003AAE  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7451  003AB2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7452  003AB6  0012               	return		;funcret
  7453  003AB8                     __end_of___awdiv:
  7454                           	callstack 0
  7455                           
  7456 ;; *************** function _atoi *****************
  7457 ;; Defined at:
  7458 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/atoi.c"
  7459 ;; Parameters:    Size  Location     Type
  7460 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7461 ;;		 -> STR_4(12), 
  7462 ;; Auto vars:     Size  Location     Type
  7463 ;;  n               2   15[COMRAM] int 
  7464 ;;  neg             2   13[COMRAM] int 
  7465 ;; Return value:  Size  Location     Type
  7466 ;;                  2    7[COMRAM] int 
  7467 ;; Registers used:
  7468 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7469 ;; Tracked objects:
  7470 ;;		On entry : 0/0
  7471 ;;		On exit  : 0/0
  7472 ;;		Unchanged: 0/0
  7473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7474 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7475 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7476 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7477 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7478 ;;Total ram usage:       10 bytes
  7479 ;; Hardware stack levels used: 1
  7480 ;; Hardware stack levels required when called: 1
  7481 ;; This function calls:
  7482 ;;		___wmul
  7483 ;;		_isdigit
  7484 ;;		_isspace
  7485 ;; This function is called by:
  7486 ;;		_vfpfcnvrt
  7487 ;; This function uses a non-reentrant model
  7488 ;;
  7489                           
  7490                           	psect	text27
  7491  0031FA                     __ptext27:
  7492                           	callstack 0
  7493  0031FA                     _atoi:
  7494                           	callstack 25
  7495  0031FA  0E00               	movlw	0
  7496  0031FC  6E11               	movwf	(atoi@n+1)^0,c
  7497  0031FE  0E00               	movlw	0
  7498  003200  6E10               	movwf	atoi@n^0,c
  7499  003202  0E00               	movlw	0
  7500  003204  6E0F               	movwf	(atoi@neg+1)^0,c
  7501  003206  0E00               	movlw	0
  7502  003208  6E0E               	movwf	atoi@neg^0,c
  7503  00320A  EF09  F019         	goto	l3902
  7504  00320E                     l3898:
  7505  00320E  4A08               	infsnz	atoi@s^0,f,c
  7506  003210  2A09               	incf	(atoi@s+1)^0,f,c
  7507  003212                     l3902:
  7508  003212  C008  FFF6         	movff	atoi@s,tblptrl
  7509  003216  C009  FFF7         	movff	atoi@s+1,tblptrh
  7510  00321A                     	if	0	;tblptru may be non-zero
  7511  00321A                     	endif
  7512  00321A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7513  00321A  0E00               	movlw	low (__mediumconst shr (0+16))
  7514  00321C  6EF8               	movwf	tblptru,c
  7515  00321E                     	endif
  7516  00321E  0008               	tblrd		*
  7517  003220  50F5               	movf	tablat,w,c
  7518  003222  0A20               	xorlw	32
  7519  003224  B4D8               	btfsc	status,2,c
  7520  003226  EF17  F019         	goto	u4361
  7521  00322A  EF19  F019         	goto	u4360
  7522  00322E                     u4361:
  7523  00322E  EF07  F019         	goto	l3898
  7524  003232                     u4360:
  7525  003232  0EF7               	movlw	247
  7526  003234  6E0A               	movwf	??_atoi^0,c
  7527  003236  0EFF               	movlw	255
  7528  003238  6E0B               	movwf	(??_atoi+1)^0,c
  7529  00323A  C008  FFF6         	movff	atoi@s,tblptrl
  7530  00323E  C009  FFF7         	movff	atoi@s+1,tblptrh
  7531  003242                     	if	0	;tblptru may be non-zero
  7532  003242                     	endif
  7533  003242                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7534  003242  0E00               	movlw	low (__mediumconst shr (0+16))
  7535  003244  6EF8               	movwf	tblptru,c
  7536  003246                     	endif
  7537  003246  0008               	tblrd		*
  7538  003248  50F5               	movf	tablat,w,c
  7539  00324A  6E0C               	movwf	(??_atoi+2)^0,c
  7540  00324C  6A0D               	clrf	(??_atoi+3)^0,c
  7541  00324E  500A               	movf	??_atoi^0,w,c
  7542  003250  260C               	addwf	(??_atoi+2)^0,f,c
  7543  003252  500B               	movf	(??_atoi+1)^0,w,c
  7544  003254  220D               	addwfc	(??_atoi+3)^0,f,c
  7545  003256  500D               	movf	(??_atoi+3)^0,w,c
  7546  003258  E109               	bnz	u4370
  7547  00325A  0E05               	movlw	5
  7548  00325C  5C0C               	subwf	(??_atoi+2)^0,w,c
  7549  00325E  A0D8               	btfss	status,0,c
  7550  003260  EF34  F019         	goto	u4371
  7551  003264  EF36  F019         	goto	u4370
  7552  003268                     u4371:
  7553  003268  EF07  F019         	goto	l3898
  7554  00326C                     u4370:
  7555  00326C  EF40  F019         	goto	l3910
  7556  003270                     l3906:
  7557  003270  0E00               	movlw	0
  7558  003272  6E0F               	movwf	(atoi@neg+1)^0,c
  7559  003274  0E01               	movlw	1
  7560  003276  6E0E               	movwf	atoi@neg^0,c
  7561  003278                     l3908:
  7562  003278  4A08               	infsnz	atoi@s^0,f,c
  7563  00327A  2A09               	incf	(atoi@s+1)^0,f,c
  7564  00327C  EF79  F019         	goto	l3918
  7565  003280                     l3910:
  7566  003280  C008  FFF6         	movff	atoi@s,tblptrl
  7567  003284  C009  FFF7         	movff	atoi@s+1,tblptrh
  7568  003288                     	if	0	;tblptru may be non-zero
  7569  003288                     	endif
  7570  003288                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7571  003288  0E00               	movlw	low (__mediumconst shr (0+16))
  7572  00328A  6EF8               	movwf	tblptru,c
  7573  00328C                     	endif
  7574  00328C  0008               	tblrd		*
  7575  00328E  50F5               	movf	tablat,w,c
  7576  003290  6E0A               	movwf	??_atoi^0,c
  7577  003292  6A0B               	clrf	(??_atoi+1)^0,c
  7578                           
  7579                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7580                           ; Switch size 1, requested type "simple"
  7581                           ; Number of cases is 1, Range of values is 0 to 0
  7582                           ; switch strategies available:
  7583                           ; Name         Instructions Cycles
  7584                           ; simple_byte            4     3 (average)
  7585                           ;	Chosen strategy is simple_byte
  7586  003294  500B               	movf	(??_atoi+1)^0,w,c
  7587  003296  0A00               	xorlw	0	; case 0
  7588  003298  B4D8               	btfsc	status,2,c
  7589  00329A  EF51  F019         	goto	l4344
  7590  00329E  EF79  F019         	goto	l3918
  7591  0032A2                     l4344:
  7592                           
  7593                           ; Switch size 1, requested type "simple"
  7594                           ; Number of cases is 2, Range of values is 43 to 45
  7595                           ; switch strategies available:
  7596                           ; Name         Instructions Cycles
  7597                           ; simple_byte            7     4 (average)
  7598                           ;	Chosen strategy is simple_byte
  7599  0032A2  500A               	movf	??_atoi^0,w,c
  7600  0032A4  0A2B               	xorlw	43	; case 43
  7601  0032A6  B4D8               	btfsc	status,2,c
  7602  0032A8  EF3C  F019         	goto	l3908
  7603  0032AC  0A06               	xorlw	6	; case 45
  7604  0032AE  B4D8               	btfsc	status,2,c
  7605  0032B0  EF38  F019         	goto	l3906
  7606  0032B4  EF79  F019         	goto	l3918
  7607  0032B8                     l3912:
  7608  0032B8  C010  F001         	movff	atoi@n,___wmul@multiplier
  7609  0032BC  C011  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7610  0032C0  0E00               	movlw	0
  7611  0032C2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7612  0032C4  0E0A               	movlw	10
  7613  0032C6  6E03               	movwf	___wmul@multiplicand^0,c
  7614  0032C8  EC4D  F021         	call	___wmul	;wreg free
  7615  0032CC  C008  FFF6         	movff	atoi@s,tblptrl
  7616  0032D0  C009  FFF7         	movff	atoi@s+1,tblptrh
  7617  0032D4                     	if	0	;tblptru may be non-zero
  7618  0032D4                     	endif
  7619  0032D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7620  0032D4  0E00               	movlw	low (__mediumconst shr (0+16))
  7621  0032D6  6EF8               	movwf	tblptru,c
  7622  0032D8                     	endif
  7623  0032D8  0008               	tblrd		*
  7624  0032DA  50F5               	movf	tablat,w,c
  7625  0032DC  5E01               	subwf	?___wmul^0,f,c
  7626  0032DE  0E00               	movlw	0
  7627  0032E0  5A02               	subwfb	(?___wmul+1)^0,f,c
  7628  0032E2  0E30               	movlw	48
  7629  0032E4  2401               	addwf	?___wmul^0,w,c
  7630  0032E6  6E10               	movwf	atoi@n^0,c
  7631  0032E8  0E00               	movlw	0
  7632  0032EA  2002               	addwfc	(?___wmul+1)^0,w,c
  7633  0032EC  6E11               	movwf	(atoi@n+1)^0,c
  7634  0032EE  EF3C  F019         	goto	l3908
  7635  0032F2                     l3918:
  7636  0032F2  0ED0               	movlw	208
  7637  0032F4  6E0A               	movwf	??_atoi^0,c
  7638  0032F6  0EFF               	movlw	255
  7639  0032F8  6E0B               	movwf	(??_atoi+1)^0,c
  7640  0032FA  C008  FFF6         	movff	atoi@s,tblptrl
  7641  0032FE  C009  FFF7         	movff	atoi@s+1,tblptrh
  7642  003302                     	if	0	;tblptru may be non-zero
  7643  003302                     	endif
  7644  003302                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7645  003302  0E00               	movlw	low (__mediumconst shr (0+16))
  7646  003304  6EF8               	movwf	tblptru,c
  7647  003306                     	endif
  7648  003306  0008               	tblrd		*
  7649  003308  50F5               	movf	tablat,w,c
  7650  00330A  6E0C               	movwf	(??_atoi+2)^0,c
  7651  00330C  6A0D               	clrf	(??_atoi+3)^0,c
  7652  00330E  500A               	movf	??_atoi^0,w,c
  7653  003310  260C               	addwf	(??_atoi+2)^0,f,c
  7654  003312  500B               	movf	(??_atoi+1)^0,w,c
  7655  003314  220D               	addwfc	(??_atoi+3)^0,f,c
  7656  003316  500D               	movf	(??_atoi+3)^0,w,c
  7657  003318  E109               	bnz	u4380
  7658  00331A  0E0A               	movlw	10
  7659  00331C  5C0C               	subwf	(??_atoi+2)^0,w,c
  7660  00331E  A0D8               	btfss	status,0,c
  7661  003320  EF94  F019         	goto	u4381
  7662  003324  EF96  F019         	goto	u4380
  7663  003328                     u4381:
  7664  003328  EF5C  F019         	goto	l3912
  7665  00332C                     u4380:
  7666  00332C  500E               	movf	atoi@neg^0,w,c
  7667  00332E  100F               	iorwf	(atoi@neg+1)^0,w,c
  7668  003330  A4D8               	btfss	status,2,c
  7669  003332  EF9D  F019         	goto	u4391
  7670  003336  EF9F  F019         	goto	u4390
  7671  00333A                     u4391:
  7672  00333A  EFAD  F019         	goto	l1053
  7673  00333E                     u4390:
  7674  00333E  C010  F00A         	movff	atoi@n,??_atoi
  7675  003342  C011  F00B         	movff	atoi@n+1,??_atoi+1
  7676  003346  1E0A               	comf	??_atoi^0,f,c
  7677  003348  1E0B               	comf	(??_atoi+1)^0,f,c
  7678  00334A  4A0A               	infsnz	??_atoi^0,f,c
  7679  00334C  2A0B               	incf	(??_atoi+1)^0,f,c
  7680  00334E  C00A  F008         	movff	??_atoi,?_atoi
  7681  003352  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7682  003356  EFB1  F019         	goto	l1056
  7683  00335A                     l1053:
  7684  00335A  C010  F008         	movff	atoi@n,?_atoi
  7685  00335E  C011  F009         	movff	atoi@n+1,?_atoi+1
  7686  003362                     l1056:
  7687  003362  0012               	return		;funcret
  7688  003364                     __end_of_atoi:
  7689                           	callstack 0
  7690                           
  7691 ;; *************** function _isspace *****************
  7692 ;; Defined at:
  7693 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isspace.c"
  7694 ;; Parameters:    Size  Location     Type
  7695 ;;  c               2    0[COMRAM] int 
  7696 ;; Auto vars:     Size  Location     Type
  7697 ;;		None
  7698 ;; Return value:  Size  Location     Type
  7699 ;;                  2    0[COMRAM] int 
  7700 ;; Registers used:
  7701 ;;		wreg, status,2, status,0
  7702 ;; Tracked objects:
  7703 ;;		On entry : 0/0
  7704 ;;		On exit  : 0/0
  7705 ;;		Unchanged: 0/0
  7706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7707 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7708 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7709 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7710 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7711 ;;Total ram usage:        7 bytes
  7712 ;; Hardware stack levels used: 1
  7713 ;; This function calls:
  7714 ;;		Nothing
  7715 ;; This function is called by:
  7716 ;;		_atoi
  7717 ;; This function uses a non-reentrant model
  7718 ;;
  7719                           
  7720                           	psect	text28
  7721  004064                     __ptext28:
  7722                           	callstack 0
  7723  004064                     _isspace:
  7724                           	callstack 25
  7725  004064  0E01               	movlw	1
  7726  004066  6E07               	movwf	_isspace$1522^0,c
  7727  004068  0E20               	movlw	32
  7728  00406A  1801               	xorwf	isspace@c^0,w,c
  7729  00406C  1002               	iorwf	(isspace@c+1)^0,w,c
  7730  00406E  B4D8               	btfsc	status,2,c
  7731  004070  EF3C  F020         	goto	u3861
  7732  004074  EF3E  F020         	goto	u3860
  7733  004078                     u3861:
  7734  004078  EF57  F020         	goto	l3580
  7735  00407C                     u3860:
  7736  00407C  0EF7               	movlw	247
  7737  00407E  6E03               	movwf	??_isspace^0,c
  7738  004080  0EFF               	movlw	255
  7739  004082  6E04               	movwf	(??_isspace+1)^0,c
  7740  004084  C001  F005         	movff	isspace@c,??_isspace+2
  7741  004088  C002  F006         	movff	isspace@c+1,??_isspace+3
  7742  00408C  5003               	movf	??_isspace^0,w,c
  7743  00408E  2605               	addwf	(??_isspace+2)^0,f,c
  7744  004090  5004               	movf	(??_isspace+1)^0,w,c
  7745  004092  2206               	addwfc	(??_isspace+3)^0,f,c
  7746  004094  5006               	movf	(??_isspace+3)^0,w,c
  7747  004096  E109               	bnz	u3870
  7748  004098  0E05               	movlw	5
  7749  00409A  5C05               	subwf	(??_isspace+2)^0,w,c
  7750  00409C  A0D8               	btfss	status,0,c
  7751  00409E  EF53  F020         	goto	u3871
  7752  0040A2  EF55  F020         	goto	u3870
  7753  0040A6                     u3871:
  7754  0040A6  EF57  F020         	goto	l3580
  7755  0040AA                     u3870:
  7756  0040AA  0E00               	movlw	0
  7757  0040AC  6E07               	movwf	_isspace$1522^0,c
  7758  0040AE                     l3580:
  7759  0040AE  C007  F001         	movff	_isspace$1522,?_isspace
  7760  0040B2  6A02               	clrf	(?_isspace+1)^0,c
  7761  0040B4  0012               	return		;funcret
  7762  0040B6                     __end_of_isspace:
  7763                           	callstack 0
  7764                           
  7765 ;; *************** function _isdigit *****************
  7766 ;; Defined at:
  7767 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isdigit.c"
  7768 ;; Parameters:    Size  Location     Type
  7769 ;;  c               2    0[COMRAM] int 
  7770 ;; Auto vars:     Size  Location     Type
  7771 ;;		None
  7772 ;; Return value:  Size  Location     Type
  7773 ;;                  2    0[COMRAM] int 
  7774 ;; Registers used:
  7775 ;;		wreg, status,2, status,0
  7776 ;; Tracked objects:
  7777 ;;		On entry : 0/0
  7778 ;;		On exit  : 0/0
  7779 ;;		Unchanged: 0/0
  7780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7781 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7783 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7784 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7785 ;;Total ram usage:        6 bytes
  7786 ;; Hardware stack levels used: 1
  7787 ;; This function calls:
  7788 ;;		Nothing
  7789 ;; This function is called by:
  7790 ;;		_vfpfcnvrt
  7791 ;;		_atoi
  7792 ;; This function uses a non-reentrant model
  7793 ;;
  7794                           
  7795                           	psect	text29
  7796  0041F6                     __ptext29:
  7797                           	callstack 0
  7798  0041F6                     _isdigit:
  7799                           	callstack 26
  7800  0041F6  0ED0               	movlw	208
  7801  0041F8  6E03               	movwf	??_isdigit^0,c
  7802  0041FA  0EFF               	movlw	255
  7803  0041FC  6E04               	movwf	(??_isdigit+1)^0,c
  7804  0041FE  C001  F005         	movff	isdigit@c,??_isdigit+2
  7805  004202  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7806  004206  5003               	movf	??_isdigit^0,w,c
  7807  004208  2605               	addwf	(??_isdigit+2)^0,f,c
  7808  00420A  5004               	movf	(??_isdigit+1)^0,w,c
  7809  00420C  2206               	addwfc	(??_isdigit+3)^0,f,c
  7810  00420E  5006               	movf	(??_isdigit+3)^0,w,c
  7811  004210  E10A               	bnz	u3840
  7812  004212  0E0A               	movlw	10
  7813  004214  5C05               	subwf	(??_isdigit+2)^0,w,c
  7814  004216  A0D8               	btfss	status,0,c
  7815  004218  EF10  F021         	goto	u3841
  7816  00421C  EF13  F021         	goto	u3840
  7817  004220                     u3841:
  7818  004220  0E01               	movlw	1
  7819  004222  EF14  F021         	goto	u3850
  7820  004226                     u3840:
  7821  004226  0E00               	movlw	0
  7822  004228                     u3850:
  7823  004228  6E01               	movwf	?_isdigit^0,c
  7824  00422A  6A02               	clrf	(?_isdigit+1)^0,c
  7825  00422C  0012               	return		;funcret
  7826  00422E                     __end_of_isdigit:
  7827                           	callstack 0
  7828                           
  7829 ;; *************** function ___wmul *****************
  7830 ;; Defined at:
  7831 ;;		line 15 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/Umul16.c"
  7832 ;; Parameters:    Size  Location     Type
  7833 ;;  multiplier      2    0[COMRAM] unsigned int 
  7834 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;  product         2    4[COMRAM] unsigned int 
  7837 ;; Return value:  Size  Location     Type
  7838 ;;                  2    0[COMRAM] unsigned int 
  7839 ;; Registers used:
  7840 ;;		wreg, status,2, status,0, prodl, prodh
  7841 ;; Tracked objects:
  7842 ;;		On entry : 0/0
  7843 ;;		On exit  : 0/0
  7844 ;;		Unchanged: 0/0
  7845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7846 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7847 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7849 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7850 ;;Total ram usage:        6 bytes
  7851 ;; Hardware stack levels used: 1
  7852 ;; This function calls:
  7853 ;;		Nothing
  7854 ;; This function is called by:
  7855 ;;		_atoi
  7856 ;; This function uses a non-reentrant model
  7857 ;;
  7858                           
  7859                           	psect	text30
  7860  00429A                     __ptext30:
  7861                           	callstack 0
  7862  00429A                     ___wmul:
  7863                           	callstack 25
  7864  00429A  5001               	movf	___wmul@multiplier^0,w,c
  7865  00429C  0203               	mulwf	___wmul@multiplicand^0,c
  7866  00429E  CFF3 F005          	movff	prodl,___wmul@product
  7867  0042A2  CFF4 F006          	movff	prodh,___wmul@product+1
  7868  0042A6  5001               	movf	___wmul@multiplier^0,w,c
  7869  0042A8  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7870  0042AA  50F3               	movf	243,w,c
  7871  0042AC  2606               	addwf	(___wmul@product+1)^0,f,c
  7872  0042AE  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7873  0042B0  0203               	mulwf	___wmul@multiplicand^0,c
  7874  0042B2  50F3               	movf	243,w,c
  7875  0042B4  2606               	addwf	(___wmul@product+1)^0,f,c
  7876  0042B6  C005  F001         	movff	___wmul@product,?___wmul
  7877  0042BA  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7878  0042BE  0012               	return		;funcret
  7879  0042C0                     __end_of___wmul:
  7880                           	callstack 0
  7881                           
  7882 ;; *************** function ___xxtofl *****************
  7883 ;; Defined at:
  7884 ;;		line 10 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/xxtofl.c"
  7885 ;; Parameters:    Size  Location     Type
  7886 ;;  sign            1    wreg     unsigned char 
  7887 ;;  val             4    0[COMRAM] long 
  7888 ;; Auto vars:     Size  Location     Type
  7889 ;;  sign            1    8[COMRAM] unsigned char 
  7890 ;;  arg             4   10[COMRAM] unsigned long 
  7891 ;;  exp             1    9[COMRAM] unsigned char 
  7892 ;; Return value:  Size  Location     Type
  7893 ;;                  4    0[COMRAM] unsigned char 
  7894 ;; Registers used:
  7895 ;;		wreg, status,2, status,0
  7896 ;; Tracked objects:
  7897 ;;		On entry : 0/0
  7898 ;;		On exit  : 0/0
  7899 ;;		Unchanged: 0/0
  7900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7901 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7902 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7903 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7904 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7905 ;;Total ram usage:       14 bytes
  7906 ;; Hardware stack levels used: 1
  7907 ;; This function calls:
  7908 ;;		Nothing
  7909 ;; This function is called by:
  7910 ;;		_ex3
  7911 ;; This function uses a non-reentrant model
  7912 ;;
  7913                           
  7914                           	psect	text31
  7915  003046                     __ptext31:
  7916                           	callstack 0
  7917  003046                     ___xxtofl:
  7918                           	callstack 29
  7919                           
  7920                           ;incstack = 0
  7921                           ;___xxtofl@sign stored from wreg
  7922  003046  6E09               	movwf	___xxtofl@sign^0,c
  7923  003048  5009               	movf	___xxtofl@sign^0,w,c
  7924  00304A  B4D8               	btfsc	status,2,c
  7925  00304C  EF2A  F018         	goto	u4681
  7926  003050  EF2C  F018         	goto	u4680
  7927  003054                     u4681:
  7928  003054  EF4E  F018         	goto	l829
  7929  003058                     u4680:
  7930  003058  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7931  00305A  EF33  F018         	goto	u4690
  7932  00305E  EF31  F018         	goto	u4691
  7933  003062                     u4691:
  7934  003062  EF4E  F018         	goto	l829
  7935  003066                     u4690:
  7936  003066  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7937  00306A  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7938  00306E  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7939  003072  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7940  003076  1E05               	comf	??___xxtofl^0,f,c
  7941  003078  1E06               	comf	(??___xxtofl+1)^0,f,c
  7942  00307A  1E07               	comf	(??___xxtofl+2)^0,f,c
  7943  00307C  1E08               	comf	(??___xxtofl+3)^0,f,c
  7944  00307E  2A05               	incf	??___xxtofl^0,f,c
  7945  003080  0E00               	movlw	0
  7946  003082  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7947  003084  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7948  003086  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7949  003088  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7950  00308C  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7951  003090  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7952  003094  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7953  003098  EF56  F018         	goto	l4178
  7954  00309C                     l829:
  7955  00309C  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7956  0030A0  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7957  0030A4  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7958  0030A8  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7959  0030AC                     l4178:
  7960  0030AC  5001               	movf	___xxtofl@val^0,w,c
  7961  0030AE  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7962  0030B0  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7963  0030B2  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7964  0030B4  A4D8               	btfss	status,2,c
  7965  0030B6  EF5F  F018         	goto	u4701
  7966  0030BA  EF61  F018         	goto	u4700
  7967  0030BE                     u4701:
  7968  0030BE  EF6B  F018         	goto	l4184
  7969  0030C2                     u4700:
  7970  0030C2  0E00               	movlw	0
  7971  0030C4  6E01               	movwf	?___xxtofl^0,c
  7972  0030C6  0E00               	movlw	0
  7973  0030C8  6E02               	movwf	(?___xxtofl+1)^0,c
  7974  0030CA  0E00               	movlw	0
  7975  0030CC  6E03               	movwf	(?___xxtofl+2)^0,c
  7976  0030CE  0E00               	movlw	0
  7977  0030D0  6E04               	movwf	(?___xxtofl+3)^0,c
  7978  0030D2  EFFC  F018         	goto	l832
  7979  0030D6                     l4184:
  7980  0030D6  0E96               	movlw	150
  7981  0030D8  6E0A               	movwf	___xxtofl@exp^0,c
  7982  0030DA  EF75  F018         	goto	l4188
  7983  0030DE                     l4186:
  7984  0030DE  2A0A               	incf	___xxtofl@exp^0,f,c
  7985  0030E0  90D8               	bcf	status,0,c
  7986  0030E2  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7987  0030E4  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7988  0030E6  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7989  0030E8  320B               	rrcf	___xxtofl@arg^0,f,c
  7990  0030EA                     l4188:
  7991  0030EA  0E00               	movlw	0
  7992  0030EC  140B               	andwf	___xxtofl@arg^0,w,c
  7993  0030EE  6E05               	movwf	??___xxtofl^0,c
  7994  0030F0  0E00               	movlw	0
  7995  0030F2  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7996  0030F4  6E06               	movwf	(??___xxtofl+1)^0,c
  7997  0030F6  0E00               	movlw	0
  7998  0030F8  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7999  0030FA  6E07               	movwf	(??___xxtofl+2)^0,c
  8000  0030FC  0EFE               	movlw	254
  8001  0030FE  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8002  003100  6E08               	movwf	(??___xxtofl+3)^0,c
  8003  003102  5005               	movf	??___xxtofl^0,w,c
  8004  003104  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8005  003106  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8006  003108  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8007  00310A  A4D8               	btfss	status,2,c
  8008  00310C  EF8A  F018         	goto	u4711
  8009  003110  EF8C  F018         	goto	u4710
  8010  003114                     u4711:
  8011  003114  EF6F  F018         	goto	l4186
  8012  003118                     u4710:
  8013  003118  EF9A  F018         	goto	l836
  8014  00311C                     l4190:
  8015  00311C  2A0A               	incf	___xxtofl@exp^0,f,c
  8016  00311E  0E01               	movlw	1
  8017  003120  260B               	addwf	___xxtofl@arg^0,f,c
  8018  003122  0E00               	movlw	0
  8019  003124  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  8020  003126  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  8021  003128  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  8022  00312A  90D8               	bcf	status,0,c
  8023  00312C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8024  00312E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8025  003130  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8026  003132  320B               	rrcf	___xxtofl@arg^0,f,c
  8027  003134                     l836:
  8028  003134  0E00               	movlw	0
  8029  003136  140B               	andwf	___xxtofl@arg^0,w,c
  8030  003138  6E05               	movwf	??___xxtofl^0,c
  8031  00313A  0E00               	movlw	0
  8032  00313C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8033  00313E  6E06               	movwf	(??___xxtofl+1)^0,c
  8034  003140  0E00               	movlw	0
  8035  003142  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8036  003144  6E07               	movwf	(??___xxtofl+2)^0,c
  8037  003146  0EFF               	movlw	255
  8038  003148  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8039  00314A  6E08               	movwf	(??___xxtofl+3)^0,c
  8040  00314C  5005               	movf	??___xxtofl^0,w,c
  8041  00314E  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8042  003150  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8043  003152  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8044  003154  A4D8               	btfss	status,2,c
  8045  003156  EFAF  F018         	goto	u4721
  8046  00315A  EFB1  F018         	goto	u4720
  8047  00315E                     u4721:
  8048  00315E  EF8E  F018         	goto	l4190
  8049  003162                     u4720:
  8050  003162  EFB9  F018         	goto	l4198
  8051  003166                     l4196:
  8052  003166  060A               	decf	___xxtofl@exp^0,f,c
  8053  003168  90D8               	bcf	status,0,c
  8054  00316A  360B               	rlcf	___xxtofl@arg^0,f,c
  8055  00316C  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  8056  00316E  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  8057  003170  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  8058  003172                     l4198:
  8059  003172  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8060  003174  EFBE  F018         	goto	u4731
  8061  003178  EFC0  F018         	goto	u4730
  8062  00317C                     u4731:
  8063  00317C  EFC8  F018         	goto	l843
  8064  003180                     u4730:
  8065  003180  0E02               	movlw	2
  8066  003182  600A               	cpfslt	___xxtofl@exp^0,c
  8067  003184  EFC6  F018         	goto	u4741
  8068  003188  EFC8  F018         	goto	u4740
  8069  00318C                     u4741:
  8070  00318C  EFB3  F018         	goto	l4196
  8071  003190                     u4740:
  8072  003190                     l843:
  8073  003190  B00A               	btfsc	___xxtofl@exp^0,0,c
  8074  003192  EFCD  F018         	goto	u4751
  8075  003196  EFCF  F018         	goto	u4750
  8076  00319A                     u4751:
  8077  00319A  EFD0  F018         	goto	l4204
  8078  00319E                     u4750:
  8079  00319E  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8080  0031A0                     l4204:
  8081  0031A0  90D8               	bcf	status,0,c
  8082  0031A2  320A               	rrcf	___xxtofl@exp^0,f,c
  8083  0031A4  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8084  0031A8  6A06               	clrf	(??___xxtofl+1)^0,c
  8085  0031AA  6A07               	clrf	(??___xxtofl+2)^0,c
  8086  0031AC  6A08               	clrf	(??___xxtofl+3)^0,c
  8087  0031AE  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8088  0031B2  6A07               	clrf	(??___xxtofl+2)^0,c
  8089  0031B4  6A06               	clrf	(??___xxtofl+1)^0,c
  8090  0031B6  6A05               	clrf	??___xxtofl^0,c
  8091  0031B8  5005               	movf	??___xxtofl^0,w,c
  8092  0031BA  120B               	iorwf	___xxtofl@arg^0,f,c
  8093  0031BC  5006               	movf	(??___xxtofl+1)^0,w,c
  8094  0031BE  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8095  0031C0  5007               	movf	(??___xxtofl+2)^0,w,c
  8096  0031C2  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8097  0031C4  5008               	movf	(??___xxtofl+3)^0,w,c
  8098  0031C6  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8099  0031C8  5009               	movf	___xxtofl@sign^0,w,c
  8100  0031CA  B4D8               	btfsc	status,2,c
  8101  0031CC  EFEA  F018         	goto	u4761
  8102  0031D0  EFEC  F018         	goto	u4760
  8103  0031D4                     u4761:
  8104  0031D4  EFF4  F018         	goto	l4214
  8105  0031D8                     u4760:
  8106  0031D8  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8107  0031DA  EFF3  F018         	goto	u4770
  8108  0031DE  EFF1  F018         	goto	u4771
  8109  0031E2                     u4771:
  8110  0031E2  EFF4  F018         	goto	l4214
  8111  0031E6                     u4770:
  8112  0031E6  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  8113  0031E8                     l4214:
  8114  0031E8  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8115  0031EC  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8116  0031F0  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8117  0031F4  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8118  0031F8                     l832:
  8119  0031F8  0012               	return		;funcret
  8120  0031FA                     __end_of___xxtofl:
  8121                           	callstack 0
  8122                           
  8123 ;; *************** function _ex2 *****************
  8124 ;; Defined at:
  8125 ;;		line 53 in file "ex2.c"
  8126 ;; Parameters:    Size  Location     Type
  8127 ;;		None
  8128 ;; Auto vars:     Size  Location     Type
  8129 ;;  L_ret           2   13[COMRAM] int 
  8130 ;; Return value:  Size  Location     Type
  8131 ;;                  1    wreg      void 
  8132 ;; Registers used:
  8133 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8134 ;; Tracked objects:
  8135 ;;		On entry : 0/0
  8136 ;;		On exit  : 0/0
  8137 ;;		Unchanged: 0/0
  8138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8140 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8141 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8142 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8143 ;;Total ram usage:        4 bytes
  8144 ;; Hardware stack levels used: 1
  8145 ;; Hardware stack levels required when called: 5
  8146 ;; This function calls:
  8147 ;;		_LCDPutStr
  8148 ;;		_initPortTOR
  8149 ;;		_lcdGoToLC
  8150 ;;		_lcdInit
  8151 ;;		_testBtnPressed
  8152 ;; This function is called by:
  8153 ;;		_main
  8154 ;; This function uses a non-reentrant model
  8155 ;;
  8156                           
  8157                           	psect	text32
  8158  003C12                     __ptext32:
  8159                           	callstack 0
  8160  003C12                     _ex2:
  8161                           	callstack 25
  8162  003C12                     
  8163                           ;ex2.c: 57:     initPortTOR();
  8164  003C12  EC8D  F021         	call	_initPortTOR	;wreg free
  8165  003C16                     
  8166                           ;ex2.c: 58:     lcdInit();
  8167  003C16  ECAA  F01F         	call	_lcdInit	;wreg free
  8168  003C1A                     l4224:
  8169                           
  8170                           ;ex2.c: 61:     {;ex2.c: 62:         L_ret = testBtnPressed();
  8171  003C1A  EC59  F01E         	call	_testBtnPressed	;wreg free
  8172  003C1E  C001  F00E         	movff	?_testBtnPressed,ex2@L_ret
  8173  003C22  C002  F00F         	movff	?_testBtnPressed+1,ex2@L_ret+1
  8174  003C26                     
  8175                           ;ex2.c: 65:         PORTD= L_ret - 20;
  8176  003C26  500E               	movf	ex2@L_ret^0,w,c
  8177  003C28  0FEC               	addlw	236
  8178  003C2A  6E83               	movwf	131,c	;volatile
  8179  003C2C                     
  8180                           ;ex2.c: 66:          lcdGoToLC(1,0);
  8181  003C2C  0E00               	movlw	0
  8182  003C2E  6E09               	movwf	lcdGoToLC@P_Col^0,c
  8183  003C30  0E01               	movlw	1
  8184  003C32  EC7A  F021         	call	_lcdGoToLC
  8185                           
  8186                           ;ex2.c: 68:          switch(L_ret)
  8187  003C36  EF35  F01E         	goto	l4238
  8188  003C3A                     l4230:
  8189                           
  8190                           ;ex2.c: 71:                LCDPutStr("Btn 1 ON        ");
  8191  003C3A  0E01               	movlw	low STR_1
  8192  003C3C  6E08               	movwf	LCDPutStr@ptr^0,c
  8193  003C3E  0E10               	movlw	high STR_1
  8194  003C40  6E09               	movwf	(LCDPutStr@ptr+1)^0,c
  8195  003C42  EC79  F01F         	call	_LCDPutStr	;wreg free
  8196                           
  8197                           ;ex2.c: 72:                break;
  8198  003C46  EF4B  F01E         	goto	l4240
  8199  003C4A                     l4232:
  8200                           
  8201                           ;ex2.c: 74:                LCDPutStr("Btn 2 ON        ");
  8202  003C4A  0E12               	movlw	low STR_2
  8203  003C4C  6E08               	movwf	LCDPutStr@ptr^0,c
  8204  003C4E  0E10               	movlw	high STR_2
  8205  003C50  6E09               	movwf	(LCDPutStr@ptr+1)^0,c
  8206  003C52  EC79  F01F         	call	_LCDPutStr	;wreg free
  8207                           
  8208                           ;ex2.c: 75:                break;
  8209  003C56  EF4B  F01E         	goto	l4240
  8210  003C5A                     l4234:
  8211                           
  8212                           ;ex2.c: 77:                LCDPutStr("Btn 1 et 2 OFF  ");
  8213  003C5A  0E23               	movlw	low STR_3
  8214  003C5C  6E08               	movwf	LCDPutStr@ptr^0,c
  8215  003C5E  0E10               	movlw	high STR_3
  8216  003C60  6E09               	movwf	(LCDPutStr@ptr+1)^0,c
  8217  003C62  EC79  F01F         	call	_LCDPutStr	;wreg free
  8218                           
  8219                           ;ex2.c: 78:                break;
  8220  003C66  EF4B  F01E         	goto	l4240
  8221  003C6A                     l4238:
  8222  003C6A  C00E  F00C         	movff	ex2@L_ret,??_ex2
  8223  003C6E  C00F  F00D         	movff	ex2@L_ret+1,??_ex2+1
  8224                           
  8225                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8226                           ; Switch size 1, requested type "simple"
  8227                           ; Number of cases is 1, Range of values is 0 to 0
  8228                           ; switch strategies available:
  8229                           ; Name         Instructions Cycles
  8230                           ; simple_byte            4     3 (average)
  8231                           ;	Chosen strategy is simple_byte
  8232  003C72  500D               	movf	(??_ex2+1)^0,w,c
  8233  003C74  0A00               	xorlw	0	; case 0
  8234  003C76  B4D8               	btfsc	status,2,c
  8235  003C78  EF40  F01E         	goto	l4346
  8236  003C7C  EF2D  F01E         	goto	l4234
  8237  003C80                     l4346:
  8238                           
  8239                           ; Switch size 1, requested type "simple"
  8240                           ; Number of cases is 2, Range of values is 1 to 2
  8241                           ; switch strategies available:
  8242                           ; Name         Instructions Cycles
  8243                           ; simple_byte            7     4 (average)
  8244                           ;	Chosen strategy is simple_byte
  8245  003C80  500C               	movf	??_ex2^0,w,c
  8246  003C82  0A01               	xorlw	1	; case 1
  8247  003C84  B4D8               	btfsc	status,2,c
  8248  003C86  EF1D  F01E         	goto	l4230
  8249  003C8A  0A03               	xorlw	3	; case 2
  8250  003C8C  B4D8               	btfsc	status,2,c
  8251  003C8E  EF25  F01E         	goto	l4232
  8252  003C92  EF2D  F01E         	goto	l4234
  8253  003C96                     l4240:
  8254                           
  8255                           ;ex2.c: 80:         _delay((unsigned long)((100)*(10000000/4000.0)));
  8256  003C96  0E02               	movlw	2
  8257  003C98  6E0D               	movwf	(??_ex2+1)^0,c
  8258  003C9A  0E45               	movlw	69
  8259  003C9C  6E0C               	movwf	??_ex2^0,c
  8260  003C9E  0EAA               	movlw	170
  8261  003CA0                     u4807:
  8262  003CA0  2EE8               	decfsz	wreg,f,c
  8263  003CA2  D7FE               	bra	u4807
  8264  003CA4  2E0C               	decfsz	??_ex2^0,f,c
  8265  003CA6  D7FC               	bra	u4807
  8266  003CA8  2E0D               	decfsz	(??_ex2+1)^0,f,c
  8267  003CAA  D7FA               	bra	u4807
  8268  003CAC  EF0D  F01E         	goto	l4224
  8269  003CB0  0012               	return		;funcret
  8270  003CB2                     __end_of_ex2:
  8271                           	callstack 0
  8272                           
  8273 ;; *************** function _testBtnPressed *****************
  8274 ;; Defined at:
  8275 ;;		line 27 in file "ex2.c"
  8276 ;; Parameters:    Size  Location     Type
  8277 ;;		None
  8278 ;; Auto vars:     Size  Location     Type
  8279 ;;		None
  8280 ;; Return value:  Size  Location     Type
  8281 ;;                  2    0[COMRAM] int 
  8282 ;; Registers used:
  8283 ;;		wreg, status,2, status,0
  8284 ;; Tracked objects:
  8285 ;;		On entry : 0/0
  8286 ;;		On exit  : 0/0
  8287 ;;		Unchanged: 0/0
  8288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8289 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8291 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8292 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8293 ;;Total ram usage:        3 bytes
  8294 ;; Hardware stack levels used: 1
  8295 ;; This function calls:
  8296 ;;		Nothing
  8297 ;; This function is called by:
  8298 ;;		_ex2
  8299 ;; This function uses a non-reentrant model
  8300 ;;
  8301                           
  8302                           	psect	text33
  8303  003CB2                     __ptext33:
  8304                           	callstack 0
  8305  003CB2                     _testBtnPressed:
  8306                           	callstack 29
  8307  003CB2                     
  8308                           ;ex2.c: 29:     if(temp < 40 || temp >= 20){
  8309  003CB2  0100               	movlb	0	; () banked
  8310  003CB4  BFF4               	btfsc	(_temp+1)& (0+255),7,b
  8311  003CB6  EF66  F01E         	goto	u4591
  8312  003CBA  51F4               	movf	(_temp+1)& (0+255),w,b
  8313  003CBC  E109               	bnz	u4590
  8314  003CBE  0E28               	movlw	40
  8315  003CC0  5DF3               	subwf	_temp& (0+255),w,b
  8316  003CC2  A0D8               	btfss	status,0,c
  8317  003CC4  EF66  F01E         	goto	u4591
  8318  003CC8  EF68  F01E         	goto	u4590
  8319  003CCC                     u4591:
  8320  003CCC  EF76  F01E         	goto	l41
  8321  003CD0                     u4590:
  8322  003CD0                     
  8323                           ; BSR set to: 0
  8324  003CD0  BFF4               	btfsc	(_temp+1)& (0+255),7,b
  8325  003CD2  EF74  F01E         	goto	u4601
  8326  003CD6  51F4               	movf	(_temp+1)& (0+255),w,b
  8327  003CD8  E109               	bnz	u4600
  8328  003CDA  0E14               	movlw	20
  8329  003CDC  5DF3               	subwf	_temp& (0+255),w,b
  8330  003CDE  A0D8               	btfss	status,0,c
  8331  003CE0  EF74  F01E         	goto	u4601
  8332  003CE4  EF76  F01E         	goto	u4600
  8333  003CE8                     u4601:
  8334  003CE8  EFA7  F01E         	goto	l48
  8335  003CEC                     u4600:
  8336  003CEC                     l41:
  8337                           
  8338                           ; BSR set to: 0
  8339                           ;ex2.c: 30:         if(PORTBbits.RB0 == 0 || PORTAbits.RA5 == 0)
  8340  003CEC  A081               	btfss	129,0,c	;volatile
  8341  003CEE  EF7B  F01E         	goto	u4611
  8342  003CF2  EF7D  F01E         	goto	u4610
  8343  003CF6                     u4611:
  8344  003CF6  EF84  F01E         	goto	l4108
  8345  003CFA                     u4610:
  8346  003CFA                     
  8347                           ; BSR set to: 0
  8348  003CFA  BA80               	btfsc	128,5,c	;volatile
  8349  003CFC  EF82  F01E         	goto	u4621
  8350  003D00  EF84  F01E         	goto	u4620
  8351  003D04                     u4621:
  8352  003D04  EFA3  F01E         	goto	l4116
  8353  003D08                     u4620:
  8354  003D08                     l4108:
  8355                           
  8356                           ; BSR set to: 0
  8357                           ;ex2.c: 31:         {;ex2.c: 32:             _delay((unsigned long)((20)*(10000000/4000.
      +                          0)));
  8358  003D08  0E41               	movlw	65
  8359  003D0A  6E03               	movwf	??_testBtnPressed^0,c
  8360  003D0C  0EEE               	movlw	238
  8361  003D0E                     u4817:
  8362  003D0E  2EE8               	decfsz	wreg,f,c
  8363  003D10  D7FE               	bra	u4817
  8364  003D12  2E03               	decfsz	??_testBtnPressed^0,f,c
  8365  003D14  D7FC               	bra	u4817
  8366  003D16  D000               	nop2	
  8367  003D18                     
  8368                           ;ex2.c: 33:             if(PORTBbits.RB0 == 0)
  8369  003D18  B081               	btfsc	129,0,c	;volatile
  8370  003D1A  EF91  F01E         	goto	u4631
  8371  003D1E  EF93  F01E         	goto	u4630
  8372  003D22                     u4631:
  8373  003D22  EF98  F01E         	goto	l45
  8374  003D26                     u4630:
  8375  003D26                     
  8376                           ;ex2.c: 34:             {;ex2.c: 35:                  temp++;
  8377  003D26  0100               	movlb	0	; () banked
  8378  003D28  4BF3               	infsnz	_temp& (0+255),f,b
  8379  003D2A  2BF4               	incf	(_temp+1)& (0+255),f,b
  8380                           
  8381                           ;ex2.c: 36:             }
  8382  003D2C  EFA3  F01E         	goto	l4116
  8383  003D30                     l45:
  8384                           
  8385                           ;ex2.c: 38:             {;ex2.c: 39:                 if(PORTAbits.RA5 == 0)
  8386  003D30  BA80               	btfsc	128,5,c	;volatile
  8387  003D32  EF9D  F01E         	goto	u4641
  8388  003D36  EF9F  F01E         	goto	u4640
  8389  003D3A                     u4641:
  8390  003D3A  EFA3  F01E         	goto	l4116
  8391  003D3E                     u4640:
  8392  003D3E                     
  8393                           ;ex2.c: 40:                 {;ex2.c: 41:                     temp--;
  8394  003D3E  0100               	movlb	0	; () banked
  8395  003D40  07F3               	decf	_temp& (0+255),f,b
  8396  003D42  A0D8               	btfss	status,0,c
  8397  003D44  07F4               	decf	(_temp+1)& (0+255),f,b
  8398  003D46                     l4116:
  8399                           
  8400                           ;ex2.c: 47:         return temp;
  8401  003D46  C0F3  F001         	movff	_temp,?_testBtnPressed
  8402  003D4A  C0F4  F002         	movff	_temp+1,?_testBtnPressed+1
  8403  003D4E                     l48:
  8404  003D4E  0012               	return		;funcret
  8405  003D50                     __end_of_testBtnPressed:
  8406                           	callstack 0
  8407                           
  8408 ;; *************** function _lcdInit *****************
  8409 ;; Defined at:
  8410 ;;		line 45 in file "fonctions_LCD.c"
  8411 ;; Parameters:    Size  Location     Type
  8412 ;;		None
  8413 ;; Auto vars:     Size  Location     Type
  8414 ;;		None
  8415 ;; Return value:  Size  Location     Type
  8416 ;;                  1    wreg      void 
  8417 ;; Registers used:
  8418 ;;		wreg, status,2, status,0, cstack
  8419 ;; Tracked objects:
  8420 ;;		On entry : 0/0
  8421 ;;		On exit  : 0/0
  8422 ;;		Unchanged: 0/0
  8423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8426 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8427 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8428 ;;Total ram usage:        1 bytes
  8429 ;; Hardware stack levels used: 1
  8430 ;; Hardware stack levels required when called: 3
  8431 ;; This function calls:
  8432 ;;		_InitBBSPI
  8433 ;;		_LCDPutInst
  8434 ;;		_Port_BBSPIInit
  8435 ;;		_WritePort_BBSPI
  8436 ;; This function is called by:
  8437 ;;		_ex2
  8438 ;;		_ex3
  8439 ;; This function uses a non-reentrant model
  8440 ;;
  8441                           
  8442                           	psect	text34
  8443  003F54                     __ptext34:
  8444                           	callstack 0
  8445  003F54                     _lcdInit:
  8446                           	callstack 26
  8447  003F54                     
  8448                           ;fonctions_LCD.c: 47:     InitBBSPI();
  8449  003F54  EC84  F021         	call	_InitBBSPI	;wreg free
  8450  003F58                     
  8451                           ;fonctions_LCD.c: 48:     TRISFbits.TRISF6 = 0;
  8452  003F58  9C97               	bcf	151,6,c	;volatile
  8453  003F5A                     
  8454                           ;fonctions_LCD.c: 49:     LATFbits.LATF6 = 0;
  8455  003F5A  9C8E               	bcf	142,6,c	;volatile
  8456  003F5C                     
  8457                           ;fonctions_LCD.c: 50:     _delay((unsigned long)((5)*(10000000/4000.0)));
  8458  003F5C  0E11               	movlw	17
  8459  003F5E  6E08               	movwf	??_lcdInit^0,c
  8460  003F60  0E3A               	movlw	58
  8461  003F62                     u4827:
  8462  003F62  2EE8               	decfsz	wreg,f,c
  8463  003F64  D7FE               	bra	u4827
  8464  003F66  2E08               	decfsz	??_lcdInit^0,f,c
  8465  003F68  D7FC               	bra	u4827
  8466  003F6A  D000               	nop2	
  8467  003F6C                     
  8468                           ;fonctions_LCD.c: 51:     LATFbits.LATF6 = 1;
  8469  003F6C  8C8E               	bsf	142,6,c	;volatile
  8470  003F6E                     
  8471                           ;fonctions_LCD.c: 52:     Port_BBSPIInit (0x00);
  8472  003F6E  0E00               	movlw	0
  8473  003F70  EC60  F021         	call	_Port_BBSPIInit
  8474  003F74                     
  8475                           ;fonctions_LCD.c: 53:     Port_BBSPIInit (0x01);
  8476  003F74  0E01               	movlw	1
  8477  003F76  EC60  F021         	call	_Port_BBSPIInit
  8478  003F7A                     
  8479                           ;fonctions_LCD.c: 54:     WritePort_BBSPI (0x12, 0);
  8480  003F7A  0E00               	movlw	0
  8481  003F7C  6E04               	movwf	WritePort_BBSPI@a^0,c
  8482  003F7E  0E12               	movlw	18
  8483  003F80  EC6D  F021         	call	_WritePort_BBSPI
  8484  003F84                     
  8485                           ;fonctions_LCD.c: 55:     _delay((unsigned long)((15)*(10000000/4000.0)));
  8486  003F84  0E31               	movlw	49
  8487  003F86  6E08               	movwf	??_lcdInit^0,c
  8488  003F88  0EB2               	movlw	178
  8489  003F8A                     u4837:
  8490  003F8A  2EE8               	decfsz	wreg,f,c
  8491  003F8C  D7FE               	bra	u4837
  8492  003F8E  2E08               	decfsz	??_lcdInit^0,f,c
  8493  003F90  D7FC               	bra	u4837
  8494  003F92  D000               	nop2	
  8495  003F94                     
  8496                           ;fonctions_LCD.c: 56:     LCDPutInst(0x32);
  8497  003F94  0E32               	movlw	50
  8498  003F96  EC13  F01F         	call	_LCDPutInst
  8499  003F9A                     
  8500                           ;fonctions_LCD.c: 57:     LCDPutInst(0x3C);
  8501  003F9A  0E3C               	movlw	60
  8502  003F9C  EC13  F01F         	call	_LCDPutInst
  8503  003FA0                     
  8504                           ;fonctions_LCD.c: 58:     LCDPutInst(0x0C);
  8505  003FA0  0E0C               	movlw	12
  8506  003FA2  EC13  F01F         	call	_LCDPutInst
  8507  003FA6                     
  8508                           ;fonctions_LCD.c: 59:     LCDPutInst(0x01);
  8509  003FA6  0E01               	movlw	1
  8510  003FA8  EC13  F01F         	call	_LCDPutInst
  8511  003FAC                     
  8512                           ;fonctions_LCD.c: 60:     LCDPutInst(0x06);
  8513  003FAC  0E06               	movlw	6
  8514  003FAE  EC13  F01F         	call	_LCDPutInst
  8515  003FB2  0012               	return		;funcret
  8516  003FB4                     __end_of_lcdInit:
  8517                           	callstack 0
  8518                           
  8519 ;; *************** function _Port_BBSPIInit *****************
  8520 ;; Defined at:
  8521 ;;		line 123 in file "fonctions_LCD.c"
  8522 ;; Parameters:    Size  Location     Type
  8523 ;;  port_dir        1    wreg     unsigned char 
  8524 ;; Auto vars:     Size  Location     Type
  8525 ;;  port_dir        1    3[COMRAM] unsigned char 
  8526 ;; Return value:  Size  Location     Type
  8527 ;;                  1    wreg      void 
  8528 ;; Registers used:
  8529 ;;		wreg, status,2, status,0, cstack
  8530 ;; Tracked objects:
  8531 ;;		On entry : 0/0
  8532 ;;		On exit  : 0/0
  8533 ;;		Unchanged: 0/0
  8534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8536 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8538 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8539 ;;Total ram usage:        1 bytes
  8540 ;; Hardware stack levels used: 1
  8541 ;; Hardware stack levels required when called: 1
  8542 ;; This function calls:
  8543 ;;		_SendByteBBSPI
  8544 ;; This function is called by:
  8545 ;;		_lcdInit
  8546 ;; This function uses a non-reentrant model
  8547 ;;
  8548                           
  8549                           	psect	text35
  8550  0042C0                     __ptext35:
  8551                           	callstack 0
  8552  0042C0                     _Port_BBSPIInit:
  8553                           	callstack 27
  8554                           
  8555                           ;incstack = 0
  8556                           ;Port_BBSPIInit@port_dir stored from wreg
  8557  0042C0  6E04               	movwf	Port_BBSPIInit@port_dir^0,c
  8558  0042C2                     
  8559                           ;fonctions_LCD.c: 123: void Port_BBSPIInit (unsigned char port_dir);fonctions_LCD.c: 124
      +                          : {;fonctions_LCD.c: 128:     LATAbits.LATA2 = 0;
  8560  0042C2  9489               	bcf	137,2,c	;volatile
  8561  0042C4                     
  8562                           ;fonctions_LCD.c: 129:     SendByteBBSPI(0x40);
  8563  0042C4  0E40               	movlw	64
  8564  0042C6  ECA8  F01E         	call	_SendByteBBSPI
  8565                           
  8566                           ;fonctions_LCD.c: 130:     SendByteBBSPI(port_dir);
  8567  0042CA  5004               	movf	Port_BBSPIInit@port_dir^0,w,c
  8568  0042CC  ECA8  F01E         	call	_SendByteBBSPI
  8569                           
  8570                           ;fonctions_LCD.c: 131:     SendByteBBSPI(0x00);
  8571  0042D0  0E00               	movlw	0
  8572  0042D2  ECA8  F01E         	call	_SendByteBBSPI
  8573  0042D6                     
  8574                           ;fonctions_LCD.c: 132:     LATAbits.LATA2 = 1;
  8575  0042D6  8489               	bsf	137,2,c	;volatile
  8576  0042D8  0012               	return		;funcret
  8577  0042DA                     __end_of_Port_BBSPIInit:
  8578                           	callstack 0
  8579                           
  8580 ;; *************** function _InitBBSPI *****************
  8581 ;; Defined at:
  8582 ;;		line 70 in file "fonctions_LCD.c"
  8583 ;; Parameters:    Size  Location     Type
  8584 ;;		None
  8585 ;; Auto vars:     Size  Location     Type
  8586 ;;		None
  8587 ;; Return value:  Size  Location     Type
  8588 ;;                  1    wreg      void 
  8589 ;; Registers used:
  8590 ;;		None
  8591 ;; Tracked objects:
  8592 ;;		On entry : 0/0
  8593 ;;		On exit  : 0/0
  8594 ;;		Unchanged: 0/0
  8595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8600 ;;Total ram usage:        0 bytes
  8601 ;; Hardware stack levels used: 1
  8602 ;; This function calls:
  8603 ;;		Nothing
  8604 ;; This function is called by:
  8605 ;;		_lcdInit
  8606 ;; This function uses a non-reentrant model
  8607 ;;
  8608                           
  8609                           	psect	text36
  8610  004308                     __ptext36:
  8611                           	callstack 0
  8612  004308                     _InitBBSPI:
  8613                           	callstack 28
  8614  004308                     
  8615                           ;fonctions_LCD.c: 72:     TRISAbits.TRISA2 = 0;
  8616  004308  9492               	bcf	146,2,c	;volatile
  8617                           
  8618                           ;fonctions_LCD.c: 73:     TRISCbits.TRISC4 = 1;
  8619  00430A  8894               	bsf	148,4,c	;volatile
  8620                           
  8621                           ;fonctions_LCD.c: 74:     TRISCbits.TRISC5 = 0;
  8622  00430C  9A94               	bcf	148,5,c	;volatile
  8623                           
  8624                           ;fonctions_LCD.c: 75:     TRISCbits.TRISC3 = 0;
  8625  00430E  9694               	bcf	148,3,c	;volatile
  8626                           
  8627                           ;fonctions_LCD.c: 77:     LATAbits.LATA2 = 1;
  8628  004310  8489               	bsf	137,2,c	;volatile
  8629                           
  8630                           ;fonctions_LCD.c: 78:     LATCbits.LATC4 = 1;
  8631  004312  888B               	bsf	139,4,c	;volatile
  8632                           
  8633                           ;fonctions_LCD.c: 79:     LATCbits.LATC5 = 0;
  8634  004314  9A8B               	bcf	139,5,c	;volatile
  8635                           
  8636                           ;fonctions_LCD.c: 80:     LATCbits.LATC3 = 0;
  8637  004316  968B               	bcf	139,3,c	;volatile
  8638  004318  0012               	return		;funcret
  8639  00431A                     __end_of_InitBBSPI:
  8640                           	callstack 0
  8641                           
  8642 ;; *************** function _lcdGoToLC *****************
  8643 ;; Defined at:
  8644 ;;		line 209 in file "fonctions_LCD.c"
  8645 ;; Parameters:    Size  Location     Type
  8646 ;;  P_Ligne         1    wreg     unsigned char 
  8647 ;;  P_Col           1    8[COMRAM] unsigned char 
  8648 ;; Auto vars:     Size  Location     Type
  8649 ;;  P_Ligne         1    9[COMRAM] unsigned char 
  8650 ;;  L_Adresse       1   10[COMRAM] unsigned char 
  8651 ;; Return value:  Size  Location     Type
  8652 ;;                  1    wreg      void 
  8653 ;; Registers used:
  8654 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8655 ;; Tracked objects:
  8656 ;;		On entry : 0/0
  8657 ;;		On exit  : 0/0
  8658 ;;		Unchanged: 0/0
  8659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8660 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8661 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8663 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8664 ;;Total ram usage:        3 bytes
  8665 ;; Hardware stack levels used: 1
  8666 ;; Hardware stack levels required when called: 4
  8667 ;; This function calls:
  8668 ;;		_lcdGoTo
  8669 ;; This function is called by:
  8670 ;;		_ex2
  8671 ;;		_ex3
  8672 ;;		_lcd_putc
  8673 ;; This function uses a non-reentrant model
  8674 ;;
  8675                           
  8676                           	psect	text37
  8677  0042F4                     __ptext37:
  8678                           	callstack 0
  8679  0042F4                     _lcdGoToLC:
  8680                           	callstack 25
  8681                           
  8682                           ;incstack = 0
  8683                           ;lcdGoToLC@P_Ligne stored from wreg
  8684  0042F4  6E0A               	movwf	lcdGoToLC@P_Ligne^0,c
  8685  0042F6                     
  8686                           ;fonctions_LCD.c: 209: void lcdGoToLC(char P_Ligne, char P_Col);fonctions_LCD.c: 210: {;
      +                          fonctions_LCD.c: 211:     char L_Adresse;;fonctions_LCD.c: 212:     L_Adresse = 0x40*P_L
      +                          igne + P_Col;
  8687  0042F6  500A               	movf	lcdGoToLC@P_Ligne^0,w,c
  8688  0042F8  0D40               	mullw	64
  8689  0042FA  50F3               	movf	243,w,c
  8690  0042FC  2409               	addwf	lcdGoToLC@P_Col^0,w,c
  8691  0042FE  6E0B               	movwf	lcdGoToLC@L_Adresse^0,c
  8692  004300                     
  8693                           ;fonctions_LCD.c: 213:     lcdGoTo(L_Adresse);
  8694  004300  500B               	movf	lcdGoToLC@L_Adresse^0,w,c
  8695  004302  EC9A  F021         	call	_lcdGoTo
  8696  004306  0012               	return		;funcret
  8697  004308                     __end_of_lcdGoToLC:
  8698                           	callstack 0
  8699                           
  8700 ;; *************** function _lcdGoTo *****************
  8701 ;; Defined at:
  8702 ;;		line 202 in file "fonctions_LCD.c"
  8703 ;; Parameters:    Size  Location     Type
  8704 ;;  P_Pos           1    wreg     unsigned char 
  8705 ;; Auto vars:     Size  Location     Type
  8706 ;;  P_Pos           1    7[COMRAM] unsigned char 
  8707 ;; Return value:  Size  Location     Type
  8708 ;;                  1    wreg      void 
  8709 ;; Registers used:
  8710 ;;		wreg, status,2, status,0, cstack
  8711 ;; Tracked objects:
  8712 ;;		On entry : 0/0
  8713 ;;		On exit  : 0/0
  8714 ;;		Unchanged: 0/0
  8715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8717 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8719 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8720 ;;Total ram usage:        1 bytes
  8721 ;; Hardware stack levels used: 1
  8722 ;; Hardware stack levels required when called: 3
  8723 ;; This function calls:
  8724 ;;		_LCDPutInst
  8725 ;; This function is called by:
  8726 ;;		_lcdGoToLC
  8727 ;; This function uses a non-reentrant model
  8728 ;;
  8729                           
  8730                           	psect	text38
  8731  004334                     __ptext38:
  8732                           	callstack 0
  8733  004334                     _lcdGoTo:
  8734                           	callstack 25
  8735                           
  8736                           ;incstack = 0
  8737                           ;lcdGoTo@P_Pos stored from wreg
  8738  004334  6E08               	movwf	lcdGoTo@P_Pos^0,c
  8739  004336                     
  8740                           ;fonctions_LCD.c: 202: void lcdGoTo(char P_Pos);fonctions_LCD.c: 203: {;fonctions_LCD.c:
      +                           205:     LCDPutInst((char)0x80+P_Pos);
  8741  004336  5008               	movf	lcdGoTo@P_Pos^0,w,c
  8742  004338  0F80               	addlw	128
  8743  00433A  EC13  F01F         	call	_LCDPutInst
  8744  00433E  0012               	return		;funcret
  8745  004340                     __end_of_lcdGoTo:
  8746                           	callstack 0
  8747                           
  8748 ;; *************** function _LCDPutInst *****************
  8749 ;; Defined at:
  8750 ;;		line 179 in file "fonctions_LCD.c"
  8751 ;; Parameters:    Size  Location     Type
  8752 ;;  ch              1    wreg     unsigned char 
  8753 ;; Auto vars:     Size  Location     Type
  8754 ;;  ch              1    6[COMRAM] unsigned char 
  8755 ;; Return value:  Size  Location     Type
  8756 ;;                  1    wreg      void 
  8757 ;; Registers used:
  8758 ;;		wreg, status,2, status,0, cstack
  8759 ;; Tracked objects:
  8760 ;;		On entry : 0/0
  8761 ;;		On exit  : 0/0
  8762 ;;		Unchanged: 0/0
  8763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8765 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8766 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8767 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8768 ;;Total ram usage:        2 bytes
  8769 ;; Hardware stack levels used: 1
  8770 ;; Hardware stack levels required when called: 2
  8771 ;; This function calls:
  8772 ;;		_WritePort_BBSPI
  8773 ;; This function is called by:
  8774 ;;		_lcdInit
  8775 ;;		_lcdGoTo
  8776 ;;		_lcdClear
  8777 ;;		_lcd_putc
  8778 ;; This function uses a non-reentrant model
  8779 ;;
  8780                           
  8781                           	psect	text39
  8782  003E26                     __ptext39:
  8783                           	callstack 0
  8784  003E26                     _LCDPutInst:
  8785                           	callstack 26
  8786                           
  8787                           ;incstack = 0
  8788                           ;LCDPutInst@ch stored from wreg
  8789  003E26  6E07               	movwf	LCDPutInst@ch^0,c
  8790  003E28                     
  8791                           ;fonctions_LCD.c: 179: void LCDPutInst (unsigned char ch);fonctions_LCD.c: 180: {;foncti
      +                          ons_LCD.c: 181:     _delay((unsigned long)((5)*(10000000/4000.0)));
  8792  003E28  0E11               	movlw	17
  8793  003E2A  6E06               	movwf	??_LCDPutInst^0,c
  8794  003E2C  0E3A               	movlw	58
  8795  003E2E                     u4847:
  8796  003E2E  2EE8               	decfsz	wreg,f,c
  8797  003E30  D7FE               	bra	u4847
  8798  003E32  2E06               	decfsz	??_LCDPutInst^0,f,c
  8799  003E34  D7FC               	bra	u4847
  8800  003E36  D000               	nop2	
  8801  003E38                     
  8802                           ;fonctions_LCD.c: 182:     WritePort_BBSPI (0x12, 0x00);
  8803  003E38  0E00               	movlw	0
  8804  003E3A  6E04               	movwf	WritePort_BBSPI@a^0,c
  8805  003E3C  0E12               	movlw	18
  8806  003E3E  EC6D  F021         	call	_WritePort_BBSPI
  8807  003E42                     
  8808                           ;fonctions_LCD.c: 183:     _delay((unsigned long)((1)*(10000000/4000.0)));
  8809  003E42  0E04               	movlw	4
  8810  003E44  6E06               	movwf	??_LCDPutInst^0,c
  8811  003E46  0E3E               	movlw	62
  8812  003E48                     u4857:
  8813  003E48  2EE8               	decfsz	wreg,f,c
  8814  003E4A  D7FE               	bra	u4857
  8815  003E4C  2E06               	decfsz	??_LCDPutInst^0,f,c
  8816  003E4E  D7FC               	bra	u4857
  8817  003E50                     
  8818                           ;fonctions_LCD.c: 184:     WritePort_BBSPI (0x13, ch);
  8819  003E50  C007  F004         	movff	LCDPutInst@ch,WritePort_BBSPI@a
  8820  003E54  0E13               	movlw	19
  8821  003E56  EC6D  F021         	call	_WritePort_BBSPI
  8822  003E5A                     
  8823                           ;fonctions_LCD.c: 185:     _delay((unsigned long)((1)*(10000000/4000.0)));
  8824  003E5A  0E04               	movlw	4
  8825  003E5C  6E06               	movwf	??_LCDPutInst^0,c
  8826  003E5E  0E3E               	movlw	62
  8827  003E60                     u4867:
  8828  003E60  2EE8               	decfsz	wreg,f,c
  8829  003E62  D7FE               	bra	u4867
  8830  003E64  2E06               	decfsz	??_LCDPutInst^0,f,c
  8831  003E66  D7FC               	bra	u4867
  8832  003E68                     
  8833                           ;fonctions_LCD.c: 186:     WritePort_BBSPI (0x12,0x40);
  8834  003E68  0E40               	movlw	64
  8835  003E6A  6E04               	movwf	WritePort_BBSPI@a^0,c
  8836  003E6C  0E12               	movlw	18
  8837  003E6E  EC6D  F021         	call	_WritePort_BBSPI
  8838  003E72                     
  8839                           ;fonctions_LCD.c: 187:     _delay((unsigned long)((1)*(10000000/4000.0)));
  8840  003E72  0E04               	movlw	4
  8841  003E74  6E06               	movwf	??_LCDPutInst^0,c
  8842  003E76  0E3E               	movlw	62
  8843  003E78                     u4877:
  8844  003E78  2EE8               	decfsz	wreg,f,c
  8845  003E7A  D7FE               	bra	u4877
  8846  003E7C  2E06               	decfsz	??_LCDPutInst^0,f,c
  8847  003E7E  D7FC               	bra	u4877
  8848  003E80                     
  8849                           ;fonctions_LCD.c: 188:     WritePort_BBSPI (0x12, 0x00);
  8850  003E80  0E00               	movlw	0
  8851  003E82  6E04               	movwf	WritePort_BBSPI@a^0,c
  8852  003E84  0E12               	movlw	18
  8853  003E86  EC6D  F021         	call	_WritePort_BBSPI
  8854  003E8A  0012               	return		;funcret
  8855  003E8C                     __end_of_LCDPutInst:
  8856                           	callstack 0
  8857                           
  8858 ;; *************** function _initPortTOR *****************
  8859 ;; Defined at:
  8860 ;;		line 19 in file "ex2.c"
  8861 ;; Parameters:    Size  Location     Type
  8862 ;;		None
  8863 ;; Auto vars:     Size  Location     Type
  8864 ;;		None
  8865 ;; Return value:  Size  Location     Type
  8866 ;;                  1    wreg      void 
  8867 ;; Registers used:
  8868 ;;		wreg, status,2
  8869 ;; Tracked objects:
  8870 ;;		On entry : 0/0
  8871 ;;		On exit  : 0/0
  8872 ;;		Unchanged: 0/0
  8873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8878 ;;Total ram usage:        0 bytes
  8879 ;; Hardware stack levels used: 1
  8880 ;; This function calls:
  8881 ;;		Nothing
  8882 ;; This function is called by:
  8883 ;;		_ex2
  8884 ;; This function uses a non-reentrant model
  8885 ;;
  8886                           
  8887                           	psect	text40
  8888  00431A                     __ptext40:
  8889                           	callstack 0
  8890  00431A                     _initPortTOR:
  8891                           	callstack 29
  8892  00431A                     
  8893                           ;ex2.c: 21:     TRISD = 0;
  8894  00431A  0E00               	movlw	0
  8895  00431C  6E95               	movwf	149,c	;volatile
  8896  00431E                     
  8897                           ;ex2.c: 22:     TRISBbits.TRISB0 = 1;
  8898  00431E  8093               	bsf	147,0,c	;volatile
  8899  004320                     
  8900                           ;ex2.c: 23:     TRISAbits.TRISA5 = 1;
  8901  004320  8A92               	bsf	146,5,c	;volatile
  8902                           
  8903                           ;ex2.c: 24:     ADCON1 = 0b00001110;
  8904  004322  0E0E               	movlw	14
  8905  004324  6EC1               	movwf	193,c	;volatile
  8906  004326  0012               	return		;funcret
  8907  004328                     __end_of_initPortTOR:
  8908                           	callstack 0
  8909                           
  8910 ;; *************** function _LCDPutStr *****************
  8911 ;; Defined at:
  8912 ;;		line 198 in file "fonctions_LCD.c"
  8913 ;; Parameters:    Size  Location     Type
  8914 ;;  ptr             2    7[COMRAM] PTR const unsigned char 
  8915 ;;		 -> ex3@L_strTension(25), STR_3(17), STR_2(17), STR_1(17), 
  8916 ;; Auto vars:     Size  Location     Type
  8917 ;;		None
  8918 ;; Return value:  Size  Location     Type
  8919 ;;                  1    wreg      void 
  8920 ;; Registers used:
  8921 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8922 ;; Tracked objects:
  8923 ;;		On entry : 0/0
  8924 ;;		On exit  : 0/0
  8925 ;;		Unchanged: 0/0
  8926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8927 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8930 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8931 ;;Total ram usage:        2 bytes
  8932 ;; Hardware stack levels used: 1
  8933 ;; Hardware stack levels required when called: 3
  8934 ;; This function calls:
  8935 ;;		_LCDPutChar
  8936 ;; This function is called by:
  8937 ;;		_ex2
  8938 ;;		_ex3
  8939 ;; This function uses a non-reentrant model
  8940 ;;
  8941                           
  8942                           	psect	text41
  8943  003EF2                     __ptext41:
  8944                           	callstack 0
  8945  003EF2                     _LCDPutStr:
  8946                           	callstack 26
  8947  003EF2                     
  8948                           ;fonctions_LCD.c: 198: void LCDPutStr (const char *ptr);fonctions_LCD.c: 199: {;fonction
      +                          s_LCD.c: 200:     while(*ptr) LCDPutChar(*(ptr++));
  8949  003EF2  EF90  F01F         	goto	l4158
  8950  003EF6                     l4154:
  8951  003EF6  C008  FFF6         	movff	LCDPutStr@ptr,tblptrl
  8952  003EFA  C009  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
  8953  003EFE  0E00               	movlw	low (__smallconst shr (0+16))
  8954  003F00  6EF8               	movwf	tblptru,c
  8955  003F02  0E0F               	movlw	(high __ramtop+-1)
  8956  003F04  64F7               	cpfsgt	tblptrh,c
  8957  003F06  D003               	bra	u4657
  8958  003F08  0008               	tblrd		*
  8959  003F0A  50F5               	movf	tablat,w,c
  8960  003F0C  D005               	bra	u4650
  8961  003F0E                     u4657:
  8962  003F0E  CFF6 FFE1          	movff	tblptrl,fsr1l
  8963  003F12  CFF7 FFE2          	movff	tblptrh,fsr1h
  8964  003F16  50E7               	movf	indf1,w,c
  8965  003F18                     u4650:
  8966  003F18  EC46  F01F         	call	_LCDPutChar
  8967  003F1C  4A08               	infsnz	LCDPutStr@ptr^0,f,c
  8968  003F1E  2A09               	incf	(LCDPutStr@ptr+1)^0,f,c
  8969  003F20                     l4158:
  8970  003F20  C008  FFF6         	movff	LCDPutStr@ptr,tblptrl
  8971  003F24  C009  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
  8972  003F28  0E00               	movlw	low (__smallconst shr (0+16))
  8973  003F2A  6EF8               	movwf	tblptru,c
  8974  003F2C  0E0F               	movlw	(high __ramtop+-1)
  8975  003F2E  64F7               	cpfsgt	tblptrh,c
  8976  003F30  D003               	bra	u4667
  8977  003F32  0008               	tblrd		*
  8978  003F34  50F5               	movf	tablat,w,c
  8979  003F36  D005               	bra	u4660
  8980  003F38                     u4667:
  8981  003F38  CFF6 FFE1          	movff	tblptrl,fsr1l
  8982  003F3C  CFF7 FFE2          	movff	tblptrh,fsr1h
  8983  003F40  50E7               	movf	indf1,w,c
  8984  003F42                     u4660:
  8985  003F42  0900               	iorlw	0
  8986  003F44  A4D8               	btfss	status,2,c
  8987  003F46  EFA7  F01F         	goto	u4671
  8988  003F4A  EFA9  F01F         	goto	u4670
  8989  003F4E                     u4671:
  8990  003F4E  EF7B  F01F         	goto	l4154
  8991  003F52                     u4670:
  8992  003F52  0012               	return		;funcret
  8993  003F54                     __end_of_LCDPutStr:
  8994                           	callstack 0
  8995                           
  8996 ;; *************** function _LCDPutChar *****************
  8997 ;; Defined at:
  8998 ;;		line 160 in file "fonctions_LCD.c"
  8999 ;; Parameters:    Size  Location     Type
  9000 ;;  ch              1    wreg     unsigned char 
  9001 ;; Auto vars:     Size  Location     Type
  9002 ;;  ch              1    6[COMRAM] unsigned char 
  9003 ;; Return value:  Size  Location     Type
  9004 ;;                  1    wreg      void 
  9005 ;; Registers used:
  9006 ;;		wreg, status,2, status,0, cstack
  9007 ;; Tracked objects:
  9008 ;;		On entry : 0/0
  9009 ;;		On exit  : 0/0
  9010 ;;		Unchanged: 0/0
  9011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9013 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9014 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9015 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9016 ;;Total ram usage:        2 bytes
  9017 ;; Hardware stack levels used: 1
  9018 ;; Hardware stack levels required when called: 2
  9019 ;; This function calls:
  9020 ;;		_WritePort_BBSPI
  9021 ;; This function is called by:
  9022 ;;		_LCDPutStr
  9023 ;;		_lcd_putc
  9024 ;; This function uses a non-reentrant model
  9025 ;;
  9026                           
  9027                           	psect	text42
  9028  003E8C                     __ptext42:
  9029                           	callstack 0
  9030  003E8C                     _LCDPutChar:
  9031                           	callstack 26
  9032                           
  9033                           ;incstack = 0
  9034                           ;LCDPutChar@ch stored from wreg
  9035  003E8C  6E07               	movwf	LCDPutChar@ch^0,c
  9036  003E8E                     
  9037                           ;fonctions_LCD.c: 160: void LCDPutChar (unsigned char ch);fonctions_LCD.c: 161: {;foncti
      +                          ons_LCD.c: 162:     _delay((unsigned long)((5)*(10000000/4000.0)));
  9038  003E8E  0E11               	movlw	17
  9039  003E90  6E06               	movwf	??_LCDPutChar^0,c
  9040  003E92  0E3A               	movlw	58
  9041  003E94                     u4887:
  9042  003E94  2EE8               	decfsz	wreg,f,c
  9043  003E96  D7FE               	bra	u4887
  9044  003E98  2E06               	decfsz	??_LCDPutChar^0,f,c
  9045  003E9A  D7FC               	bra	u4887
  9046  003E9C  D000               	nop2	
  9047  003E9E                     
  9048                           ;fonctions_LCD.c: 163:     WritePort_BBSPI (0x12, 0x80);
  9049  003E9E  0E80               	movlw	128
  9050  003EA0  6E04               	movwf	WritePort_BBSPI@a^0,c
  9051  003EA2  0E12               	movlw	18
  9052  003EA4  EC6D  F021         	call	_WritePort_BBSPI
  9053  003EA8                     
  9054                           ;fonctions_LCD.c: 164:     _delay((unsigned long)((1)*(10000000/4000.0)));
  9055  003EA8  0E04               	movlw	4
  9056  003EAA  6E06               	movwf	??_LCDPutChar^0,c
  9057  003EAC  0E3E               	movlw	62
  9058  003EAE                     u4897:
  9059  003EAE  2EE8               	decfsz	wreg,f,c
  9060  003EB0  D7FE               	bra	u4897
  9061  003EB2  2E06               	decfsz	??_LCDPutChar^0,f,c
  9062  003EB4  D7FC               	bra	u4897
  9063  003EB6                     
  9064                           ;fonctions_LCD.c: 165:     WritePort_BBSPI (0x13, ch);
  9065  003EB6  C007  F004         	movff	LCDPutChar@ch,WritePort_BBSPI@a
  9066  003EBA  0E13               	movlw	19
  9067  003EBC  EC6D  F021         	call	_WritePort_BBSPI
  9068  003EC0                     
  9069                           ;fonctions_LCD.c: 166:     _delay((unsigned long)((1)*(10000000/4000.0)));
  9070  003EC0  0E04               	movlw	4
  9071  003EC2  6E06               	movwf	??_LCDPutChar^0,c
  9072  003EC4  0E3E               	movlw	62
  9073  003EC6                     u4907:
  9074  003EC6  2EE8               	decfsz	wreg,f,c
  9075  003EC8  D7FE               	bra	u4907
  9076  003ECA  2E06               	decfsz	??_LCDPutChar^0,f,c
  9077  003ECC  D7FC               	bra	u4907
  9078  003ECE                     
  9079                           ;fonctions_LCD.c: 167:     WritePort_BBSPI (0x12, 0xC0);
  9080  003ECE  0EC0               	movlw	192
  9081  003ED0  6E04               	movwf	WritePort_BBSPI@a^0,c
  9082  003ED2  0E12               	movlw	18
  9083  003ED4  EC6D  F021         	call	_WritePort_BBSPI
  9084  003ED8                     
  9085                           ;fonctions_LCD.c: 168:     _delay((unsigned long)((1)*(10000000/4000.0)));
  9086  003ED8  0E04               	movlw	4
  9087  003EDA  6E06               	movwf	??_LCDPutChar^0,c
  9088  003EDC  0E3E               	movlw	62
  9089  003EDE                     u4917:
  9090  003EDE  2EE8               	decfsz	wreg,f,c
  9091  003EE0  D7FE               	bra	u4917
  9092  003EE2  2E06               	decfsz	??_LCDPutChar^0,f,c
  9093  003EE4  D7FC               	bra	u4917
  9094  003EE6                     
  9095                           ;fonctions_LCD.c: 169:     WritePort_BBSPI (0x12, 0x00);
  9096  003EE6  0E00               	movlw	0
  9097  003EE8  6E04               	movwf	WritePort_BBSPI@a^0,c
  9098  003EEA  0E12               	movlw	18
  9099  003EEC  EC6D  F021         	call	_WritePort_BBSPI
  9100  003EF0  0012               	return		;funcret
  9101  003EF2                     __end_of_LCDPutChar:
  9102                           	callstack 0
  9103                           
  9104 ;; *************** function _WritePort_BBSPI *****************
  9105 ;; Defined at:
  9106 ;;		line 144 in file "fonctions_LCD.c"
  9107 ;; Parameters:    Size  Location     Type
  9108 ;;  port_add        1    wreg     unsigned char 
  9109 ;;  a               1    3[COMRAM] unsigned char 
  9110 ;; Auto vars:     Size  Location     Type
  9111 ;;  port_add        1    4[COMRAM] unsigned char 
  9112 ;; Return value:  Size  Location     Type
  9113 ;;                  1    wreg      void 
  9114 ;; Registers used:
  9115 ;;		wreg, status,2, status,0, cstack
  9116 ;; Tracked objects:
  9117 ;;		On entry : 0/0
  9118 ;;		On exit  : 0/0
  9119 ;;		Unchanged: 0/0
  9120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9121 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9122 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9124 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9125 ;;Total ram usage:        2 bytes
  9126 ;; Hardware stack levels used: 1
  9127 ;; Hardware stack levels required when called: 1
  9128 ;; This function calls:
  9129 ;;		_SendByteBBSPI
  9130 ;; This function is called by:
  9131 ;;		_lcdInit
  9132 ;;		_LCDPutChar
  9133 ;;		_LCDPutInst
  9134 ;; This function uses a non-reentrant model
  9135 ;;
  9136                           
  9137                           	psect	text43
  9138  0042DA                     __ptext43:
  9139                           	callstack 0
  9140  0042DA                     _WritePort_BBSPI:
  9141                           	callstack 27
  9142                           
  9143                           ;incstack = 0
  9144                           ;WritePort_BBSPI@port_add stored from wreg
  9145  0042DA  6E05               	movwf	WritePort_BBSPI@port_add^0,c
  9146  0042DC                     
  9147                           ;fonctions_LCD.c: 144: void WritePort_BBSPI (unsigned char port_add, unsigned char a);fo
      +                          nctions_LCD.c: 145: {;fonctions_LCD.c: 146:     LATAbits.LATA2 = 0;
  9148  0042DC  9489               	bcf	137,2,c	;volatile
  9149  0042DE                     
  9150                           ;fonctions_LCD.c: 147:     SendByteBBSPI(0x40);
  9151  0042DE  0E40               	movlw	64
  9152  0042E0  ECA8  F01E         	call	_SendByteBBSPI
  9153                           
  9154                           ;fonctions_LCD.c: 148:     SendByteBBSPI(port_add);
  9155  0042E4  5005               	movf	WritePort_BBSPI@port_add^0,w,c
  9156  0042E6  ECA8  F01E         	call	_SendByteBBSPI
  9157                           
  9158                           ;fonctions_LCD.c: 149:     SendByteBBSPI(a);
  9159  0042EA  5004               	movf	WritePort_BBSPI@a^0,w,c
  9160  0042EC  ECA8  F01E         	call	_SendByteBBSPI
  9161  0042F0                     
  9162                           ;fonctions_LCD.c: 150:     LATAbits.LATA2 = 1;
  9163  0042F0  8489               	bsf	137,2,c	;volatile
  9164  0042F2  0012               	return		;funcret
  9165  0042F4                     __end_of_WritePort_BBSPI:
  9166                           	callstack 0
  9167                           
  9168 ;; *************** function _SendByteBBSPI *****************
  9169 ;; Defined at:
  9170 ;;		line 91 in file "fonctions_LCD.c"
  9171 ;; Parameters:    Size  Location     Type
  9172 ;;  output          1    wreg     unsigned char 
  9173 ;; Auto vars:     Size  Location     Type
  9174 ;;  output          1    0[COMRAM] unsigned char 
  9175 ;;  input           1    2[COMRAM] unsigned char 
  9176 ;;  bitcount        1    1[COMRAM] unsigned char 
  9177 ;; Return value:  Size  Location     Type
  9178 ;;                  1    wreg      void 
  9179 ;; Registers used:
  9180 ;;		wreg, status,2, status,0
  9181 ;; Tracked objects:
  9182 ;;		On entry : 0/0
  9183 ;;		On exit  : 0/0
  9184 ;;		Unchanged: 0/0
  9185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9187 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9189 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9190 ;;Total ram usage:        3 bytes
  9191 ;; Hardware stack levels used: 1
  9192 ;; This function calls:
  9193 ;;		Nothing
  9194 ;; This function is called by:
  9195 ;;		_Port_BBSPIInit
  9196 ;;		_WritePort_BBSPI
  9197 ;; This function uses a non-reentrant model
  9198 ;;
  9199                           
  9200                           	psect	text44
  9201  003D50                     __ptext44:
  9202                           	callstack 0
  9203  003D50                     _SendByteBBSPI:
  9204                           	callstack 27
  9205                           
  9206                           ;incstack = 0
  9207                           ;SendByteBBSPI@output stored from wreg
  9208  003D50  6E01               	movwf	SendByteBBSPI@output^0,c
  9209  003D52                     
  9210                           ;fonctions_LCD.c: 91: void SendByteBBSPI (unsigned char output);fonctions_LCD.c: 92: {;f
      +                          onctions_LCD.c: 93:     unsigned char bitcount;;fonctions_LCD.c: 94:     unsigned char i
      +                          nput = output;
  9211  003D52  C001  F003         	movff	SendByteBBSPI@output,SendByteBBSPI@input
  9212  003D56                     
  9213                           ;fonctions_LCD.c: 96:     for(bitcount=0;bitcount<8;bitcount++)
  9214  003D56  0E00               	movlw	0
  9215  003D58  6E02               	movwf	SendByteBBSPI@bitcount^0,c
  9216  003D5A                     l129:
  9217                           
  9218                           ;fonctions_LCD.c: 97:     {;fonctions_LCD.c: 99:         if(output & 0x80)
  9219  003D5A  AE01               	btfss	SendByteBBSPI@output^0,7,c
  9220  003D5C  EFB2  F01E         	goto	u2871
  9221  003D60  EFB4  F01E         	goto	u2870
  9222  003D64                     u2871:
  9223  003D64  EFB7  F01E         	goto	l131
  9224  003D68                     u2870:
  9225  003D68                     
  9226                           ;fonctions_LCD.c: 100:             LATCbits.LATC5 = 1;
  9227  003D68  8A8B               	bsf	139,5,c	;volatile
  9228  003D6A  EFB8  F01E         	goto	l132
  9229  003D6E                     l131:
  9230                           
  9231                           ;fonctions_LCD.c: 102:             LATCbits.LATC5 = 0;
  9232  003D6E  9A8B               	bcf	139,5,c	;volatile
  9233  003D70                     l132:
  9234                           
  9235                           ;fonctions_LCD.c: 104:         if (LATCbits.LATC4)
  9236  003D70  A88B               	btfss	139,4,c	;volatile
  9237  003D72  EFBD  F01E         	goto	u2881
  9238  003D76  EFBF  F01E         	goto	u2880
  9239  003D7A                     u2881:
  9240  003D7A  EFC3  F01E         	goto	l2998
  9241  003D7E                     u2880:
  9242  003D7E                     
  9243                           ;fonctions_LCD.c: 105:             input = (input << 1) | 0x1;
  9244  003D7E  80D8               	bsf	status,0,c
  9245  003D80  3603               	rlcf	SendByteBBSPI@input^0,f,c
  9246  003D82  EFC6  F01E         	goto	l3000
  9247  003D86                     l2998:
  9248                           
  9249                           ;fonctions_LCD.c: 107:             input = input << 1;
  9250  003D86  5003               	movf	SendByteBBSPI@input^0,w,c
  9251  003D88  2403               	addwf	SendByteBBSPI@input^0,w,c
  9252  003D8A  6E03               	movwf	SendByteBBSPI@input^0,c
  9253  003D8C                     l3000:
  9254                           
  9255                           ;fonctions_LCD.c: 108:         LATCbits.LATC3 = 1;
  9256  003D8C  868B               	bsf	139,3,c	;volatile
  9257  003D8E                     
  9258                           ;fonctions_LCD.c: 109:         __nop();__nop();__nop();__nop();__nop();__nop();
  9259  003D8E  F000               	nop	
  9260  003D90  F000               	nop	
  9261  003D92  F000               	nop	
  9262  003D94  F000               	nop	
  9263  003D96  F000               	nop	
  9264  003D98  F000               	nop	
  9265  003D9A                     
  9266                           ;fonctions_LCD.c: 110:         __nop();__nop();__nop();__nop();__nop();__nop();
  9267  003D9A  F000               	nop	
  9268  003D9C  F000               	nop	
  9269  003D9E  F000               	nop	
  9270  003DA0  F000               	nop	
  9271  003DA2  F000               	nop	
  9272  003DA4  F000               	nop	
  9273  003DA6                     
  9274                           ;fonctions_LCD.c: 111:         LATCbits.LATC3 = 0;
  9275  003DA6  968B               	bcf	139,3,c	;volatile
  9276                           
  9277                           ;fonctions_LCD.c: 112:         output <<= 1;
  9278  003DA8  90D8               	bcf	status,0,c
  9279  003DAA  3601               	rlcf	SendByteBBSPI@output^0,f,c
  9280  003DAC                     
  9281                           ;fonctions_LCD.c: 113:     }
  9282  003DAC  2A02               	incf	SendByteBBSPI@bitcount^0,f,c
  9283  003DAE  0E07               	movlw	7
  9284  003DB0  6402               	cpfsgt	SendByteBBSPI@bitcount^0,c
  9285  003DB2  EFDD  F01E         	goto	u2891
  9286  003DB6  EFDF  F01E         	goto	u2890
  9287  003DBA                     u2891:
  9288  003DBA  EFAD  F01E         	goto	l129
  9289  003DBE                     u2890:
  9290  003DBE  0012               	return		;funcret
  9291  003DC0                     __end_of_SendByteBBSPI:
  9292                           	callstack 0
  9293                           
  9294                           	psect	rparam
  9295  0000                     
  9296                           	psect	idloc
  9297                           
  9298                           ;Config register IDLOC0 @ 0x200000
  9299                           ;	unspecified, using default values
  9300  200000                     	org	2097152
  9301  200000  FF                 	db	255
  9302                           
  9303                           ;Config register IDLOC1 @ 0x200001
  9304                           ;	unspecified, using default values
  9305  200001                     	org	2097153
  9306  200001  FF                 	db	255
  9307                           
  9308                           ;Config register IDLOC2 @ 0x200002
  9309                           ;	unspecified, using default values
  9310  200002                     	org	2097154
  9311  200002  FF                 	db	255
  9312                           
  9313                           ;Config register IDLOC3 @ 0x200003
  9314                           ;	unspecified, using default values
  9315  200003                     	org	2097155
  9316  200003  FF                 	db	255
  9317                           
  9318                           ;Config register IDLOC4 @ 0x200004
  9319                           ;	unspecified, using default values
  9320  200004                     	org	2097156
  9321  200004  FF                 	db	255
  9322                           
  9323                           ;Config register IDLOC5 @ 0x200005
  9324                           ;	unspecified, using default values
  9325  200005                     	org	2097157
  9326  200005  FF                 	db	255
  9327                           
  9328                           ;Config register IDLOC6 @ 0x200006
  9329                           ;	unspecified, using default values
  9330  200006                     	org	2097158
  9331  200006  FF                 	db	255
  9332                           
  9333                           ;Config register IDLOC7 @ 0x200007
  9334                           ;	unspecified, using default values
  9335  200007                     	org	2097159
  9336  200007  FF                 	db	255
  9337                           
  9338                           	psect	config
  9339                           
  9340                           ; Padding undefined space
  9341  300000                     	org	3145728
  9342  300000  FF                 	db	255
  9343                           
  9344                           ;Config register CONFIG1H @ 0x300001
  9345                           ;	Oscillator Selection bits
  9346                           ;	OSC = HS, HS oscillator
  9347                           ;	Fail-Safe Clock Monitor Enable bit
  9348                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9349                           ;	Internal/External Oscillator Switchover bit
  9350                           ;	IESO = OFF, Two-Speed Start-up disabled
  9351  300001                     	org	3145729
  9352  300001  02                 	db	2
  9353                           
  9354                           ;Config register CONFIG2L @ 0x300002
  9355                           ;	Power-up Timer Enable bit
  9356                           ;	PWRT = OFF, PWRT disabled
  9357                           ;	Brown-out Reset Enable bits
  9358                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  9359                           ;	Brown-out Voltage bits
  9360                           ;	BORV = 3, Minimum setting
  9361  300002                     	org	3145730
  9362  300002  1F                 	db	31
  9363                           
  9364                           ;Config register CONFIG2H @ 0x300003
  9365                           ;	Watchdog Timer
  9366                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9367                           ;	Watchdog Timer Postscale Select bits
  9368                           ;	WDTPS = 32768, 1:32768
  9369  300003                     	org	3145731
  9370  300003  1E                 	db	30
  9371                           
  9372                           ;Config register CONFIG3L @ 0x300004
  9373                           ;	Processor Data Memory Mode Select bits
  9374                           ;	MODE = MC, Microcontroller mode
  9375                           ;	Address Bus Width Select bits
  9376                           ;	ADDRBW = ADDR20BIT, 20-bit Address Bus
  9377                           ;	Data Bus Width Select bit
  9378                           ;	DATABW = DATA16BIT, 16-bit External Bus mode
  9379                           ;	External Bus Data Wait Enable bit
  9380                           ;	WAIT = OFF, Wait selections are unavailable for table reads and table writes
  9381  300004                     	org	3145732
  9382  300004  F3                 	db	243
  9383                           
  9384                           ;Config register CONFIG3H @ 0x300005
  9385                           ;	CCP2 MUX bit
  9386                           ;	CCP2MX = PORTC, ECCP2 input/output is multiplexed with RC1
  9387                           ;	ECCP MUX bit
  9388                           ;	ECCPMX = PORTE, ECCP1/3 (P1B/P1C/P3B/P3C) are multiplexed onto RE6, RE5, RE4 and RE3 r
      +                          espectively
  9389                           ;	Low-Power Timer1 Oscillator Enable bit
  9390                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9391                           ;	MCLR Pin Enable bit
  9392                           ;	MCLRE = ON, MCLR pin enabled; RG5 input pin disabled
  9393  300005                     	org	3145733
  9394  300005  83                 	db	131
  9395                           
  9396                           ;Config register CONFIG4L @ 0x300006
  9397                           ;	Stack Full/Underflow Reset Enable bit
  9398                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9399                           ;	Single-Supply ICSP Enable bit
  9400                           ;	LVP = OFF, Single-Supply ICSP disabled
  9401                           ;	Boot Block Size Select bits
  9402                           ;	BBSIZ = BB2K, 1K word (2 Kbytes) Boot Block size
  9403                           ;	Extended Instruction Set Enable bit
  9404                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9405                           ;	Background Debugger Enable bit
  9406                           ;	DEBUG = 0x1, unprogrammed default
  9407  300006                     	org	3145734
  9408  300006  81                 	db	129
  9409                           
  9410                           ; Padding undefined space
  9411  300007                     	org	3145735
  9412  300007  FF                 	db	255
  9413                           
  9414                           ;Config register CONFIG5L @ 0x300008
  9415                           ;	Code Protection bit Block 0
  9416                           ;	CP0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not code-protected
  9417                           ;	Code Protection bit Block 1
  9418                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  9419                           ;	Code Protection bit Block 2
  9420                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  9421                           ;	Code Protection bit Block 3
  9422                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  9423                           ;	Code Protection bit Block 4
  9424                           ;	CP4 = OFF, Block 4 (010000-013FFFh) not code-protected
  9425                           ;	Code Protection bit Block 5
  9426                           ;	CP5 = OFF, Block 5 (014000-017FFFh) not code-protected
  9427                           ;	Code Protection bit Block 6
  9428                           ;	CP6 = OFF, Block 6 (01BFFF-018000h) not code-protected
  9429                           ;	Code Protection bit Block 7
  9430                           ;	CP7 = OFF, Block 7 (01C000-01FFFFh) not code-protected
  9431  300008                     	org	3145736
  9432  300008  FF                 	db	255
  9433                           
  9434                           ;Config register CONFIG5H @ 0x300009
  9435                           ;	Boot Block Code Protection bit
  9436                           ;	CPB = OFF, Boot Block (000000-0007FFh) not code-protected
  9437                           ;	Data EEPROM Code Protection bit
  9438                           ;	CPD = OFF, Data EEPROM not code-protected
  9439  300009                     	org	3145737
  9440  300009  C0                 	db	192
  9441                           
  9442                           ;Config register CONFIG6L @ 0x30000A
  9443                           ;	Write Protection bit Block 0
  9444                           ;	WRT0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not write-protected
  9445                           ;	Write Protection bit Block 1
  9446                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  9447                           ;	Write Protection bit Block 2
  9448                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  9449                           ;	Write Protection bit Block 3
  9450                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  9451                           ;	Write Protection bit Block 4
  9452                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  9453                           ;	Write Protection bit Block 5
  9454                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  9455                           ;	Write Protection bit Block 6
  9456                           ;	WRT6 = OFF, Block 6 (01BFFF-018000h) not write-protected
  9457                           ;	Write Protection bit Block 7
  9458                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  9459  30000A                     	org	3145738
  9460  30000A  FF                 	db	255
  9461                           
  9462                           ;Config register CONFIG6H @ 0x30000B
  9463                           ;	Configuration Register Write Protection bit
  9464                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  9465                           ;	Boot Block Write Protection bit
  9466                           ;	WRTB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not write-protected
  9467                           ;	Data EEPROM Write Protection bit
  9468                           ;	WRTD = OFF, Data EEPROM not write-protected
  9469  30000B                     	org	3145739
  9470  30000B  E0                 	db	224
  9471                           
  9472                           ;Config register CONFIG7L @ 0x30000C
  9473                           ;	Table Read Protection bit Block 0
  9474                           ;	EBTR0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not protected from table reads
      +                           executed in other blocks
  9475                           ;	Table Read Protection bit Block 1
  9476                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  9477                           ;	Table Read Protection bit Block 2
  9478                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  9479                           ;	Table Read Protection bit Block 3
  9480                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  9481                           ;	Table Read Protection bit Block 4
  9482                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  9483                           ;	Table Read Protection bit Block 5
  9484                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  9485                           ;	Table Read Protection bit Block 6
  9486                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  9487                           ;	Table Read Protection bit Block 7
  9488                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  9489  30000C                     	org	3145740
  9490  30000C  FF                 	db	255
  9491                           
  9492                           ;Config register CONFIG7H @ 0x30000D
  9493                           ;	Boot Block Table Read Protection bit
  9494                           ;	EBTRB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not protected from table re
      +                          ads executed in other blocks
  9495  30000D                     	org	3145741
  9496  30000D  40                 	db	64
  9497                           tosu	equ	0xFFF
  9498                           tosh	equ	0xFFE
  9499                           tosl	equ	0xFFD
  9500                           stkptr	equ	0xFFC
  9501                           pclatu	equ	0xFFB
  9502                           pclath	equ	0xFFA
  9503                           pcl	equ	0xFF9
  9504                           tblptru	equ	0xFF8
  9505                           tblptrh	equ	0xFF7
  9506                           tblptrl	equ	0xFF6
  9507                           tablat	equ	0xFF5
  9508                           prodh	equ	0xFF4
  9509                           prodl	equ	0xFF3
  9510                           indf0	equ	0xFEF
  9511                           postinc0	equ	0xFEE
  9512                           postdec0	equ	0xFED
  9513                           preinc0	equ	0xFEC
  9514                           plusw0	equ	0xFEB
  9515                           fsr0h	equ	0xFEA
  9516                           fsr0l	equ	0xFE9
  9517                           wreg	equ	0xFE8
  9518                           indf1	equ	0xFE7
  9519                           postinc1	equ	0xFE6
  9520                           postdec1	equ	0xFE5
  9521                           preinc1	equ	0xFE4
  9522                           plusw1	equ	0xFE3
  9523                           fsr1h	equ	0xFE2
  9524                           fsr1l	equ	0xFE1
  9525                           bsr	equ	0xFE0
  9526                           indf2	equ	0xFDF
  9527                           postinc2	equ	0xFDE
  9528                           postdec2	equ	0xFDD
  9529                           preinc2	equ	0xFDC
  9530                           plusw2	equ	0xFDB
  9531                           fsr2h	equ	0xFDA
  9532                           fsr2l	equ	0xFD9
  9533                           status	equ	0xFD8

Data Sizes:
    Strings     82
    Constant    0
    Data        2
    BSS         96
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    131     149
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_4(CODE[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_4(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_4(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_4(CODE[12]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 25
		 -> ex3@L_strTension(BANK0[25]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1301$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1301$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    LCDPutStr@ptr	PTR const unsigned char  size(2) Largest target is 25
		 -> ex3@L_strTension(BANK0[25]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _atoi->_isspace
    _ex2->_lcdGoToLC
    _lcdInit->_LCDPutInst
    _Port_BBSPIInit->_SendByteBBSPI
    _lcdGoToLC->_lcdGoTo
    _lcdGoTo->_LCDPutInst
    _LCDPutInst->_WritePort_BBSPI
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_WritePort_BBSPI
    _WritePort_BBSPI->_SendByteBBSPI

Critical Paths under _main in BANK0

    _main->_ex3
    _ex3->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   42793
                                _ex2
                                _ex3
 ---------------------------------------------------------------------------------
 (1) _ex3                                                 33    33      0   38391
                                             98 BANK0     33    33      0
                          _LCDPutStr
                            ___fldiv
                            ___flmul
                           ___xxtofl
                          _lcdGoToLC
                            _lcdInit
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8   28572
                                             77 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   28213
                                             69 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6   27833
                                             91 COMRAM     4     4      0
                                             55 BANK0     14     8      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              62    55      7   22296
                                             84 COMRAM     7     0      7
                                              0 BANK0     55    55      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              6     4      2     920
                                              6 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2808
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2159
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                10     8      2    1232
                                              7 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _ex2                                                  4     4      0    4402
                                             11 COMRAM     4     4      0
                          _LCDPutStr
                        _initPortTOR
                          _lcdGoToLC
                            _lcdInit
                     _testBtnPressed
 ---------------------------------------------------------------------------------
 (2) _testBtnPressed                                       3     1      2       0
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _lcdInit                                              1     1      0    1914
                                              7 COMRAM     1     1      0
                          _InitBBSPI
                         _LCDPutInst
                     _Port_BBSPIInit
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (3) _Port_BBSPIInit                                       1     1      0     160
                                              3 COMRAM     1     1      0
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (3) _InitBBSPI                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcdGoToLC                                            3     2      1    1205
                                              8 COMRAM     3     2      1
                            _lcdGoTo
 ---------------------------------------------------------------------------------
 (3) _lcdGoTo                                              1     1      0     910
                                              7 COMRAM     1     1      0
                         _LCDPutInst
 ---------------------------------------------------------------------------------
 (3) _LCDPutInst                                           2     2      0     888
                                              5 COMRAM     2     2      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (2) _initPortTOR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDPutStr                                            2     0      2    1237
                                              7 COMRAM     2     0      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (3) _LCDPutChar                                           2     2      0     888
                                              5 COMRAM     2     2      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (3) _WritePort_BBSPI                                      2     1      1     866
                                              3 COMRAM     2     1      1
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (4) _SendByteBBSPI                                        3     3      0     138
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ex2
     _LCDPutStr
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
     _initPortTOR
     _lcdGoToLC
       _lcdGoTo
         _LCDPutInst
           _WritePort_BBSPI
     _lcdInit
       _InitBBSPI
       _LCDPutInst
       _Port_BBSPIInit
         _SendByteBBSPI
       _WritePort_BBSPI
     _testBtnPressed
   _ex3
     _LCDPutStr
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___xxtofl
     _lcdGoToLC
     _lcdInit
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
           _isdigit
           _isupper
           _strncmp
           _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     83      95       5       93.1%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhhlh       2D      0       0      37        0.0%
BITBIGSFRhlh        21      0       0      38        0.0%
BITBIGSFRlll        20      0       0      46        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRhllh        5      0       0      39        0.0%
BITBIGSFRllhhll      5      0       0      44        0.0%
BITBIGSFRllhhh       3      0       0      41        0.0%
BITBIGSFRllhhlh      2      0       0      42        0.0%
BITBIGSFRllhhlh      1      0       0      43        0.0%
BITBIGSFRllhl        1      0       0      45        0.0%
BITBIGSFRhlll        1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     144      47        0.0%
DATA                 0      0     144       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Feb 24 16:06:38 2022

                      l9 4330             ___fldiv@aexp 0040             ___fldiv@bexp 003F  
           ___fldiv@sign 0038                       l41 3CEC              ?_LCDPutChar 0001  
                     l36 4326                       l45 3D30                       l48 3D4E  
                     l91 338E             ___awdiv@sign 0006              ?_LCDPutInst 0001  
    ___wmul@multiplicand 0003    SendByteBBSPI@bitcount 0002                      l131 3D6E  
                    l123 3FB2                      l132 3D70                      l141 42F2  
                    l126 4318                      l135 3DBE                      l144 3EF0  
                    l129 3D5A                      l153 3F52                      l138 42D8  
                    l147 3E8A                      l156 433E                      l405 3AB6  
                    l174 42BE                      l159 4306                      l433 3C10  
                    l418 3B66                      l444 3682                      l702 239E  
                    l439 363C                      l711 266E                      l703 238C  
                    l471 357E                      l448 41F4                      l704 2352  
                    l805 2A5A                      l719 24B8                      l832 31F8  
                    l728 2588                      l744 4140                      l761 2C56  
                    l729 2576                      l770 2D3E                      l930 140C  
                    l914 1C5C                      l843 3190                      l836 3134  
                    l756 2E32                      l852 4062                      l829 309C  
                    l758 2C92                      l767 2CD8                      l792 2A98  
                    l769 2D50                      l795 292A                      l788 2734  
                    l797 29A2                      l893 3974                      l798 2990  
                    l958 184C                      l896 39B6                      l898 39F2  
                    _ex2 3C12                      _ex3 3364                      _pad 392E  
           ___awmod@sign 0006                      wreg 000FE8             ___flmul@aexp 0020  
           ___flmul@bexp 0021             ___flmul@sign 001B             ___flmul@temp 0026  
           ___flmul@prod 0022             ___fltol@exp1 000A                     l1020 3E24  
                   l1101 392C                     l1013 20EC                     l1030 3780  
                   ?_ex2 0001                     ?_ex3 0001                     l1112 4342  
                   l1008 21AE                     l1019 3E1C                     l1124 4298  
                   l1053 335A                     l1109 4184                     l1141 40FA  
                   l1062 3044                     l1118 4010                     l3000 3D8C  
                   l1072 422C                     l1080 40B4                     l1056 3362  
                   l1128 3862                     l1065 2F88                     l3010 3D96  
                   l3002 3D8E                     l1138 40F2                     l3020 3DA0  
                   l3012 3D98                     l3004 3D90                     l3100 2BFA  
                   l3030 3DAE                     l3022 3DA2                     l3014 3D9A  
                   l3006 3D92                     l3110 2C46                     l3102 2C0A  
                   l1086 41BC                     l3024 3DA4                     l3016 3D9C  
                   l3008 3D94                     l3032 429A                     l3120 2C90  
                   l3112 2C54                     l3104 2C1A                     l3040 2AA6  
                   l3200 26EE                     l4000 1E56                     l3026 3DA6  
                   l3018 3D9E                     l3034 42B6                     l3130 2CD6  
                   l3122 2CA2                     l3114 2C60                     l3106 2C22  
                   l3050 2AE6                     l3042 2AB4                     l3210 2744  
                   l3202 26FE                     l4010 1EDC                     l3028 3DAC  
                   l2500 431A                     l3140 2D36                     l3124 2CB8  
                   l3132 2CE8                     l3116 2C7E                     l3108 2C32  
                   l3060 2B0C                     l3052 2AE8                     l3044 2AB6  
                   l3300 2A84                     l3220 277E                     l3212 2754  
                   l3204 270E                     l4020 1F84                     l4012 1F12  
                   l4004 1E64                     l4100 3DFC                     l2502 431E  
                   l4110 3D18                     l4102 3CB2                     l3150 2DA4  
                   l3134 2CF6                     l3126 2CBE                     l3118 2C80  
                   l3070 2B4C                     l3062 2B1A                     l3046 2AC6  
                   l3054 2AF0                     l3038 2A9A                     l3302 2A88  
                   l3230 27D0                     l3222 2794                     l3206 271E  
                   l4030 201C                     l4022 1F92                     l4014 1F22  
                   l4006 1EA6                     l2504 4320                     l4120 3F54  
                   l4112 3D26                     l4104 3CD0                     l4200 3180  
                   l3320 3A12                     l3312 39F4                     l3160 2E0E  
                   l3144 2D60                     l3152 2DA8                     l3136 2CFA  
                   l3128 2CC8                     l3080 2B8C                     l3072 2B4E  
                   l3064 2B1C                     l3056 2B00                     l3048 2AD6  
                   l3400 3BE4                     l3240 2816                     l3232 27DE  
                   l3224 27A0                     l3216 2768                     l3208 2724  
                   l4024 1FC2                     l4016 1F58                     l4008 1ECC  
                   l4130 3F6E                     l4122 3F58                     l4114 3D3E  
                   l4106 3CFA                     l4210 31D8                     l4202 319E  
                   l3330 3A46                     l3322 3A20                     l3314 39F8  
                   l3162 2E12                     l3154 2DC2                     l3146 2D6C  
                   l3138 2D08                     l3090 2BBC                     l3082 2B94  
                   l3066 2B2C                     l3074 2B56                     l3058 2B06  
                   l3402 3C08                     l3410 35AE                     l3250 2884  
                   l3242 2830                     l3234 27EA                     l3226 27B8  
                   l3218 2774                     l3306 40FC                     l4050 214A  
                   l4034 2046                     l4018 1F6A                     l4140 3F9A  
                   l4132 3F74                     l4124 3F5A                     l4116 3D46  
                   l4108 3D08                     l4220 3C12                     l4212 31E6  
                   l4204 31A0                     l3340 3A80                     l3332 3A4E  
                   l3324 3A28                     l3316 3A06                     l3164 2E20  
                   l3156 2DD8                     l3148 2D7A                     l3092 2BBC  
                   l3084 2B98                     l3076 2B66                     l3068 2B3C  
                   l3404 3C0E                     l3420 361C                     l3412 35BE  
                   l3260 291A                     l3252 28AE                     l3244 2840  
                   l3236 27FA                     l3228 27C4                     l3180 268A  
                   l3308 410C                     l3500 39DA                     l4036 2088  
                   l4044 2100                     l4028 1FEE                     l4060 2174  
                   l4150 4300                     l4070 42C2                     l4142 3FA0  
                   l4134 3F7A                     l4126 3F5C                     l4230 3C3A  
                   l4222 3C16                     l4214 31E8                     l4206 31A4  
                   l3350 3AA6                     l3342 3A88                     l3334 3A56  
                   l3326 3A2C                     l3318 3A0E                     l3166 2E26  
                   l3158 2DF2                     l3078 2B7C                     l3422 362A  
                   l3414 35EC                     l3270 295A                     l3262 2928  
                   l3254 28E4                     l3246 285C                     l3238 2806  
                   l3190 26C2                     l3182 268C                     l3430 41BE  
                   l3510 370A                     l4062 219C                     l4046 2128  
                   l4054 2158                     l4038 20BC                     l4080 3EA8  
                   l4152 3EF2                     l4072 42C4                     l4144 3FA6  
                   l4136 3F84                     l4128 3F6C                     l4232 3C4A  
                   l4240 3C96                     l4224 3C1A                     l4208 31C8  
                   l3352 3AAE                     l3344 3A8A                     l3336 3A64  
                   l3328 3A34                     l3360 3ACA                     l3168 2E28  
                   l3096 2BD0                     l3088 2BAC                     l3424 367A  
                   l3416 35FC                     l3408 3580                     l3280 29CC  
                   l3272 2988                     l3264 293A                     l3256 28F2  
                   l3248 2868                     l3192 26D2                     l3184 269C  
                   l3176 2670                     l3432 41D4                     l2800 2278  
                   l3440 3490                     l3512 3716                     l3504 3684  
                   l3600 10A8                     l4056 2166                     l4048 2136  
                   l4160 4012                     l4090 3EE6                     l4082 3EB6  
                   l4154 3EF6                     l4074 42D6                     l4146 3FAC  
                   l4138 3F94                     l4234 3C5A                     l4226 3C26  
                   l4218 3C12                     l3346 3A90                     l3338 3A6A  
                   l3370 3AFE                     l3362 3AD2                     l3098 2BEA  
                   l3426 3680                     l3418 360A                     l3290 2A42  
                   l3282 29F6                     l3266 2948                     l3258 2910  
                   l3194 26D8                     l3186 26AC                     l3178 267C  
                   l3434 41E4                     l2810 22B4                     l2802 2280  
                   l3450 34E0                     l3522 3778                     l3506 36A4  
                   l3530 40B6                     l3610 10EC                     l3602 10B2  
                   l4162 4024                     l4250 337A                     l4084 3EC0  
                   l4076 3E8E                     l4156 3F1C                     l4092 4336  
                   l4148 42F6                     l4068 4308                     l4228 3C2C  
                   l4180 30C2                     l4172 3048                     l3348 3A96  
                   l3380 3B3A                     l3372 3B06                     l3364 3AD6  
                   l3356 3AB8                     l3292 2A5E                     l3276 29B2  
                   l3284 29FA                     l3268 294C                     l3196 26DE  
                   l3188 26BC                     l2900 24DE                     l2820 22C8  
                   l2812 22B8                     l2804 2290                     l3460 350A  
                   l3452 34E4                     l3444 34A4                     l3508 36E2  
                   l3516 3722                     l3540 2E34                     l3700 148E  
                   l3612 10F8                     l3620 110E                     l3604 10BA  
                   l4164 402C                     l4260 3388                     l4252 337C  
                   l4086 3ECE                     l4078 3E9E                     l4158 3F20  
                   l4238 3C6A                     l4190 311C                     l4174 3058  
                   l3382 3B40                     l3374 3B0E                     l3366 3AE4  
                   l3358 3ABC                     l3294 2A6E                     l3286 2A14  
                   l3278 29BE                     l3198 26EC                     l2910 250C  
                   l2830 22DC                     l2822 22CC                     l2814 22BC  
                   l2806 22A2                     l3470 3532                     l3462 3514  
                   l3454 34F2                     l3446 34CE                     l3438 347A  
                   l3518 3734                     l3542 2E54                     l2750 3876  
                   l3526 3FB4                     l3534 40B6                     l3710 14C6  
                   l3702 1496                     l3630 117E                     l3614 1100  
                   l3606 10CC                     l4094 3DC0                     l4166 4034  
                   l4270 3444                     l4262 338C                     l4254 337E  
                   l4246 3364                     l4088 3ED8                     l4192 311E  
                   l4184 30D6                     l4176 3066                     l4344 32A2  
                   l3376 3B1C                     l3384 3B46                     l3368 3AEC  
                   l3392 3B68                     l3296 2A7C                     l3288 2A28  
                   l2912 251A                     l2904 24F2                     l2920 2538  
                   l2832 22E0                     l2824 22D0                     l2816 22C0  
                   l2808 22B0                     l2840 22F0                     l3472 353E  
                   l3464 351E                     l3448 34D0                     l3560 2FFC  
                   l3552 2F3C                     l3544 2EAA                     l2752 3888  
                   l3528 3FC4                     l3536 40E4                     l3800 1970  
                   l3720 1510                     l3712 14D4                     l3704 149A  
                   l3632 1196                     l3616 1104                     l3608 10DA  
                   l4096 3DC8                     l4168 4050                     l4272 344E  
                   l4264 339C                     l4256 3380                     l4248 3376  
                   l4280 432C                     l4346 3C80                     l4194 312A  
                   l4186 30DE                     l4178 30AC                     l3386 3B56  
                   l3378 3B32                     l3394 3B96                     l3298 2A7E  
                   l2914 2522                     l2906 24FC                     l2922 2546  
                   l2850 2360                     l2842 22F4                     l2834 22E4  
                   l2826 22D4                     l2818 22C4                     l2770 21DC  
                   l2762 21B0                     l3474 354E                     l3562 3024  
                   l3554 2F78                     l3546 2EBE                     l2754 3892  
                   l3490 396C                     l3482 392E                     l3810 19A4  
                   l3802 1976                     l3730 1556                     l3722 1522  
                   l3714 14D8                     l3706 14A2                     l3634 11A0  
                   l3626 1134                     l3618 1108                     l4098 3DD6  
                   l4274 345A                     l4266 33B4                     l4258 3384  
                   l4196 3166                     l4188 30EA                     l3580 40AE  
                   l3572 4064                     l3388 3B5E                     l3396 3BA6  
                   l2932 2598                     l2940 25EE                     l2924 254A  
                   l2916 2526                     l2908 250A                     l2860 238A  
                   l2852 236C                     l2844 231E                     l2836 22E8  
                   l2828 22D8                     l2780 2216                     l2772 21EC  
                   l2764 21BC                     l3476 355E                     l3564 3034  
                   l3548 2ECC                     l3556 2FAC                     l2756 38B0  
                   l2748 3864                     l3492 3980                     l3484 393E  
                   l3804 197C                     l3812 19AA                     l3820 1A42  
                   l3740 166A                     l3732 15BA                     l3716 14EA  
                   l3724 152A                     l3708 14B4                     l3644 11EE  
                   l3628 1162                     l4268 341E                     l4198 3172  
                   l3574 4068                     l3910 3280                     l3902 3212  
                   l3398 3BD4                     l2950 2640                     l2942 25FE  
                   l2934 25A4                     l2926 2558                     l2918 2536  
                   l2870 23E0                     l2862 23AC                     l2854 2370  
                   l2846 233A                     l2838 22EC                     l2790 2244  
                   l2782 221C                     l2774 21FC                     l2766 21CA  
                   l3478 356E                     l3558 2FE8                     l2758 38E6  
                   l3494 3994                     l3486 3952                     l3830 1AAC  
                   l3822 1A60                     l3814 1A02                     l3806 198E  
                   l3750 1728                     l3742 169E                     l3734 1612  
                   l3726 1532                     l3718 14F8                     l3670 136C  
                   l3662 12A4                     l3646 121C                     l3638 11C8  
                   l3590 1054                     l4278 4328                     ?_pad 0011  
                   l3584 42DC                     l3568 41F6                     l3576 407C  
                   l3920 332C                     l3912 32B8                     l3904 3232  
                   l2960 265E                     l2952 2646                     l2944 260E  
                   l2936 25B2                     l2928 256E                     l2880 241A  
                   l2872 23EE                     l2864 23BC                     l2856 237E  
                   l2848 234A                     l2792 2246                     l2784 222E  
                   l2776 21FE                     l2768 21CC                     l3496 3998  
                   l3488 3960                     l3840 1AEA                     l3832 1AB0  
                   l3824 1A7C                     l3816 1A36                     l3808 19A0  
                   l3760 17FC                     l3752 1738                     l3744 16D0  
                   l3736 1646                     l3728 1542                     l3680 13CC  
                   l3672 1374                     l3664 12D8                     l3648 1238  
                   l3656 1254                     l3592 105E                     l3586 42DE  
                   l3578 40AA                     l3922 333E                     l3906 3270  
                   l2954 2648                     l2946 262E                     l2938 25EC  
                   l2890 2486                     l2882 241C                     l2874 23FC  
                   l2858 2380                     l2794 2256                     l2786 2230  
                   l2778 2206                     l2970 4164                     l3498 39C6  
                   l3850 1B1C                     l3842 1AF2                     l3834 1AC0  
                   l3826 1A8E                     l3818 1A3E                     l3770 1844  
                   l3762 1810                     l3754 176C                     l3746 16E6  
                   l3738 164C                     l3682 13DE                     l3666 12DE  
                   l3674 13A6                     l3658 126E                     l3594 106E  
                   l3930 37AC                     l3588 42F0                     l3908 3278  
                   l2956 264E                     l2948 2632                     l2892 2488  
                   l2884 2426                     l2876 2408                     l2868 23D0  
                   l2796 2266                     l2788 2236                     l2964 4142  
                   l2972 4264                     l3852 1B22                     l3860 1B72  
                   l3844 1B00                     l3836 1AD2                     l3828 1A9C  
                   l3780 1900                     l3772 1868                     l3756 17C2  
                   l3764 1814                     l3748 1718                     l3684 13E6  
                   l3676 13B6                     l3668 1338                     l3596 107C  
                   l3940 37FE                     l3950 3E38                     l3918 32F2  
                   l2958 265C                     l2894 2498                     l2878 240C  
                   l2886 242C                     l2798 2276                     l2966 414E  
                   l2974 4270                     l2982 4186                     l3870 1BC2  
                   l3862 1B84                     l3854 1B48                     l3846 1B08  
                   l3838 1ADA                     l3790 1946                     l3782 190E  
                   l3774 18CC                     l3766 1824                     l3758 17C8  
                   l3694 142A                     l3686 1400                     l3678 13BA  
                   l3598 1084                     l3942 3810                     l3934 37B8  
                   l3960 3E72                     l3952 3E42                     l2888 2452  
                   l2896 24A8                     l2968 4160                     l2976 4274  
                   l3880 1BE6                     l3872 1BCA                     l3864 1B9E  
                   l3856 1B64                     l3848 1B10                     l3792 194A  
                   l3776 18DC                     l3784 1916                     l3768 1838  
                   l3696 143C                     l3688 1418                     l3944 383C  
                   l3936 37C6                     l3928 3782                     l2994 3D68  
                   l2986 3D52                     l3962 3E80                     l3954 3E50  
                   l2898 24CE                     l2978 428C                     l3890 1C3C  
                   l3882 1C12                     l3874 1BDA                     l3866 1BA4  
                   l3858 1B6C                     l3794 1950                     l3786 1928  
                   l3778 18EE                     l3698 1458                     l3938 37DE  
                   l3970 1CA6                     l2996 3D7E                     l2988 3D56  
                   l3956 3E5A                     l3948 3E28                     l3884 1C1E  
                   l3876 1BE0                     l3868 1BB6                     l3796 195C  
                   l3788 1936                     l3980 1D24                     l3972 1CAA  
                   l3964 1C5E                     l2998 3D86                     l3958 3E68  
                   l3886 1C26                     l3798 196C                     l3990 1DBC  
                   l3982 1D44                     l3974 1CD2                     l3966 1C86  
                   l3896 31FA                     l3888 1C36                     l3992 1DC6  
                   l3976 1D08                     l3968 1C94                     l3898 320E  
                   l3994 1DD4                     l3986 1D52                     l3978 1D16  
                   l3996 1DFC                     l3988 1D94                     l3998 1E36  
                   STR_1 1001                     STR_2 1012                     STR_3 1023  
                   STR_4 1034                     STR_5 1040                     STR_6 1048  
                   STR_9 1044                     u3000 2C7E                     u3001 2C7A  
                   u3010 2CA2                     u3011 2C9E                     u3100 2DC2  
                   u3020 2CB8                     u3101 2DBE                     u3021 2CB4  
                   u3110 2DF2                     u3030 2CD6                     u3111 2DEE  
                   u3031 2CD2                     u3120 2E20                     u3040 2CF6  
                   u3200 2754                     u2400 3876                     u4000 13DE  
                   u3121 2E1C                     u3041 2CF2                     u3201 2750  
                   u2401 3872                     u4001 13DA                     u3050 2D08  
                   u3210 28CE                     u3130 268A                     u2410 3888  
                   u4010 1400                     u3051 2D04                     u3131 2686  
                   u2411 3884                     u4011 13FC                     u3060 2D36  
                   u3300 2A42                     u3220 2928                     u3140 269C  
                   u2500 2266                     u2420 38B0                     u4100 14F8  
                   u4020 1426                     u3061 2D32                     u3301 2A3E  
                   u3221 2924                     u3141 2698                     u2501 2262  
                   u2421 38AC                     u4101 14F4                     u4021 1422  
                   u3070 2D4C                     u3310 2A7C                     u3230 2948  
                   u3150 26AC                     u2510 22A2                     u2430 38E6  
                   u4110 1522                     u4030 143C                     u3071 2D48  
                   u3311 2A78                     u3231 2944                     u3215 28C4  
                   u3151 26A8                     u2511 229E                     u2431 38E2  
                   u4111 151E                     u4031 1438                     u3320 3A06  
                   u3400 3AFE                     u3080 2D60                     u3240 295A  
                   u3160 26EC                     u2600 23BC                     u2520 22B0  
                   u2440 21CA                     u4200 18EE                     u4120 166A  
                   u4040 1458                     u3321 3A02                     u3401 3AFA  
                   u3081 2D5C                     u3241 2956                     u3161 26E8  
                   u2601 23B8                     u2521 22AC                     u2441 21C6  
                   u4201 18EA                     u4121 1666                     u4041 1454  
                   u3330 3A20                     u3410 3B1C                     u3090 2D7A  
                   u3250 2988                     u3170 26FE                     u2610 23EE  
                   u2530 231E                     u2450 21DC                     u4210 1900  
                   u4130 16D0                     u4050 148E                     u3331 3A1C  
                   u3411 3B18                     u3091 2D76                     u3251 2984  
                   u3171 26FA                     u2611 23EA                     u2531 231A  
                   u2451 21D8                     u4211 18FC                     u4131 16CC  
                   u4051 148A                     u3340 3A46                     u3420 3B32  
                   u3500 362A                     u3260 299E                     u3180 270E  
                   u2700 2536                     u2620 23FC                     u2540 2336  
                   u2460 21EC                     u4300 1AD2                     u4220 190E  
                   u4140 1718                     u4060 14B4                     u3341 3A42  
                   u3421 3B2E                     u3501 3626                     u3261 299A  
                   u3181 270A                     u2701 2532                     u2621 23F8  
                   u2541 2330                     u2461 21E8                     u4301 1ACE  
                   u4221 190A                     u4141 1714                     u4061 14B0  
                   u3350 3A64                     u3430 3B56                     u3510 367A  
                   u3270 29B2                     u3190 2744                     u2710 2546  
                   u2630 241A                     u2550 2338                     u2470 222E  
                   u4310 1B00                     u4230 1928                     u4150 1728  
                   u4070 14C6                     u3351 3A60                     u3431 3B52  
                   u3511 3676                     u3271 29AE                     u3191 2740  
                   u2711 2542                     u2631 2416                     u2471 222A  
                   u4311 1AFC                     u4231 1924                     u4151 1724  
                   u4071 14C2                     u3360 3A80                     u3440 3B96  
                   u3280 29CC                     u3520 41D4                     u2800 262E  
                   u2720 2558                     u2640 2452                     u2560 2360  
                   u2480 2244                     u3600 393E                     u4320 1B84  
                   u4240 1936                     u4160 17C2                     u4080 14D4  
                   u4400 37AC                     u3361 3A7C                     u3441 3B92  
                   u3281 29C8                     u3521 41D0                     u2801 262A  
                   u2721 2554                     u2641 244E                     u2561 235C  
                   u2481 2240                     u3601 393A                     u4321 1B80  
                   u4241 1932                     u4161 17BE                     u4081 14D0  
                   u4401 37A8                     u3370 3AA6                     u3450 3BD4  
                   u3290 2A14                     u2810 2640                     u2730 256E  
                   u2650 2498                     u2570 237E                     u2490 2256  
                   u3530 3490                     u3610 3960                     u4330 1B9E  
                   u4250 198E                     u4170 1810                     u4090 14EA  
                   u4410 37DE                     u3371 3AA2                     u3451 3BD0  
                   u3291 2A10                     u2811 263C                     u2731 256A  
                   u2651 2494                     u2571 237A                     u2491 2252  
                   u3531 348C                     u3611 395C                     u4331 1B9A  
                   u4251 198A                     u4171 180C                     u4091 14E6  
                   u4411 37DA                     u3380 3ACA                     u2900 2AB4  
                   u3460 3C08                     u2820 265C                     u2740 2584  
                   u2660 24CE                     u2580 239E                     u3540 34C4  
                   u3700 3770                     u3620 39B6                     u4340 1BB6  
                   u4260 1A60                     u4180 1838                     u4420 37FE  
                   u4500 1DFC                     u3381 3AC6                     u2901 2AB0  
                   u3461 3C04                     u2821 2658                     u2741 2580  
                   u2661 24CA                     u2581 239A                     u3621 39B2  
                   u4341 1BB2                     u4261 1A5C                     u4181 1834  
                   u4421 37FA                     u4501 1DF8                     u3390 3AE4  
                   u2910 2AC6                     u3470 35AE                     u2750 2598  
                   u2670 24DE                     u2590 23AC                     u3550 34F2  
                   u2830 4184                     u3630 39C6                     u3710 3FFE  
                   u4350 1C12                     u4270 1A7C                     u4190 18DC  
                   u4430 3810                     u4510 1EA6                     u3391 3AE0  
                   u2911 2AC2                     u3471 35AA                     u2751 2594  
                   u2671 24DA                     u2591 23A8                     u3551 34EE  
                   u2831 4180                     u3631 39C2                     u4351 1C0E  
                   u4271 1A78                     u4191 18D8                     u4431 380C  
                   u4511 1EA2                     u4600 3CEC                     u4360 3232  
                   u2920 2AD6                     u3480 35EC                     u2760 25B2  
                   u2680 250A                     u3560 3506                     u3640 36C4  
                   u3800 2F78                     u2840 428C                     u3720 4010  
                   u4280 1A8E                     u4440 383C                     u4520 1EDC  
                   u4601 3CE8                     u4361 322E                     u2921 2AD2  
                   u3481 35E8                     u2761 25AE                     u2681 2506  
                   u3561 3502                     u3545 34BA                     u3801 2F74  
                   u2841 4288                     u3721 400C                     u4281 1A8A  
                   u4441 3838                     u4521 1ED8                     u4610 3CFA  
                   u4370 326C                     u2930 2B1A                     u3490 360A  
                   u2770 25EC                     u2690 251A                     u3570 352E  
                   u3650 36E2                     u3810 2FCC                     u2850 41B6  
                   u3730 40E4                     u4290 1A9C                     u4530 1F22  
                   u4450 1C86                     u4611 3CF6                     u4371 3268  
                   u2931 2B16                     u3491 3606                     u2771 25E8  
                   u2691 2516                     u3571 352A                     u3651 36DE  
                   u2851 41B0                     u3731 40E0                     u4291 1A98  
                   u4531 1F1E                     u4451 1C82                     u4620 3D08  
                   u4700 30C2                     u4380 332C                     u2940 2B2C  
                   u2780 25FE                     u3580 354E                     u3660 370A  
                   u3820 2FE8                     u3740 2E7C                     u2860 41B8  
                   u3900 10DA                     u4540 1F6A                     u4460 1CD2  
                   u4621 3D04                     u4701 30BE                     u4381 3328  
                   u2941 2B28                     u2781 25FA                     u3581 354A  
                   u3661 3706                     u3645 36BA                     u3821 2FE4  
                   u3717 3FF4                     u3901 10D6                     u4541 1F66  
                   u4461 1CCE                     u2870 3D68                     u4630 3D26  
                   u4710 3118                     u4390 333E                     u2950 2B3C  
                   u2790 260E                     u3590 355E                     u3670 3734  
                   u3830 3024                     u3750 2EAA                     u3910 10EC  
                   u4550 201C                     u4470 1D16                     u2871 3D64  
                   u4631 3D22                     u4711 3114                     u4391 333A  
                   u2951 2B38                     u2791 260A                     u3591 355A  
                   u3671 3730                     u3831 3020                     u3815 2FC2  
                   u3751 2EA6                     u3911 10E8                     u4551 2018  
                   u4471 1D12                     u2880 3D7E                     u4640 3D3E  
                   u4720 3162                     u3840 4226                     u2960 2B7C  
                   u3760 2ECC                     u3920 1134                     u4560 2088  
                   u4480 1D94                     u2881 3D7A                     u4641 3D3A  
                   u4721 315E                     u3841 4220                     u2961 2B78  
                   u3761 2EC8                     u3745 2E72                     u3921 1130  
                   u4561 2084                     u4481 1D90                     u2890 3DBE  
                   u4650 3F18                     u4730 3180                     u3850 4228  
                   u2970 2BBC                     u3690 376E                     u3930 1162  
                   u4570 2128                     u4490 1DBC                     u2891 3DBA  
                   u4731 317C                     u2971 2BB8                     u3691 3768  
                   u3931 115E                     u4571 2124                     u4491 1DB8  
                   u4660 3F42                     u4740 3190                     u3860 407C  
                   u2980 2C32                     u3780 2F38                     u3940 11EE  
                   u4580 3E1C                     u4741 318C                     u3861 4078  
                   u2981 2C2E                     u3685 3746                     u3781 2F34  
                   u3941 11EA                     u4581 3E18                     u4670 3F52  
                   u4590 3CD0                     u4750 319E                     u3870 40AA  
                   u2990 2C54                     u3790 2F5C                     u3950 121C  
                   u4671 3F4E                     u4591 3CCC                     u4807 3CA0  
                   u4751 319A                     u3871 40A6                     u2991 2C50  
                   u3775 2EE0                     u3951 1218                     u4760 31D8  
                   u4680 3058                     u3776 2EEA                     u3960 12A0  
                   u3880 107C                     u4657 3F0E                     u4817 3D0E  
                   u4761 31D4                     u4681 3054                     u3777 2EFA  
                   u3961 129C                     u3881 1078                     u4770 31E6  
                   u4690 3066                     u3970 1334                     u3890 10CC  
                   u4907 3EC6                     u4667 3F38                     u4827 3F62  
                   u4771 31E2                     u4691 3062                     u3795 2F52  
                   u3971 1330                     u3891 10C8                     u3980 13A6  
                   u4780 339C                     u4917 3EDE                     u4837 3F8A  
                   u3981 13A2                     u4781 3398                     u3990 13CC  
                   u4847 3E2E                     u3991 13C8                     u4857 3E48  
                   u4867 3E60                     u4877 3E78                     u4797 3466  
                   u4887 3E94                     u4897 3EAE                     _dbuf 0100  
                   _atoi 31FA                     _main 4328                     _prec 00EF  
                   _temp 00F3                     _nout 00EB                     pad@i 0018  
                   pad@p 0015                     fsr1h 000FE2                     fsr2h 000FDA  
                   indf1 000FE7                     indf2 000FDF                     fsr1l 000FE1  
                   pad@w 001A                     fsr2l 000FD9            ___fpclassifyf 3684  
       ?_WritePort_BBSPI 0004                     prodh 000FF4                     prodl 000FF3  
                   start 0000          ___fldiv@new_exp 0039             ___param_bank 000000  
                  ??_ex2 000C                    ??_ex3 00C2                    ??_pad 0017  
           ?_initPortTOR 0001            ___fltol@sign1 0009                    ?_atoi 0008  
        __end_of___fladd 2670                    ?_main 0001          __end_of___fldiv 2E34  
        __end_of___awdiv 3AB8          __end_of___flneg 41F6                    STR_10 104C  
                  STR_13 1050                    STR_15 1050          __end_of___awmod 3B68  
        __end_of___flmul 2A9A          __end_of___flsub 4142          __end_of___fltol 3580  
        ___awdiv@divisor 0003          ___awdiv@counter 0005             vfpfcnvrt@fmt 0099  
                  _PORTD 000F83                    _TRISD 000F95          __end_of_lcdGoTo 4340  
        __end_of_lcdInit 3FB4     ex3@L_ValeurMesureCan 00DD                    _flags 00F1  
                  _fputc 3864                    _fputs 4142          __end_of_isdigit 422E  
                  atoi@n 0010                    pad@fp 0011                    atoi@s 0008  
                  _width 00ED                    _putch 4342          __end_of_isspace 40B6  
        __end_of_isupper 41BE                    tablat 000FF5                    status 000FD8  
        __end_of_sprintf 4064           ?___fpclassifyf 0001          __end_of_tolower 40FC  
        __end_of_strncmp 3864          __initialization 422E             __end_of_atoi 3364  
           __end_of_main 4334                   ??_atoi 000A                   ??_main 0060  
          __activetblptr 000003             LCDPutChar@ch 0007        __end_of_LCDPutStr 3F54  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 ?_fputc 0001                   ?_fputs 000A                   _ADRESH 000FC4  
                 _ADRESL 000FC3         ___awdiv@dividend 0001             LCDPutInst@ch 0007  
                 ?_putch 0001             LCDPutStr@ptr 0008         __end_of___xxtofl 31FA  
           vfprintf@cfmt 00AB           lcdGoToLC@P_Col 0009                   ___flge 3580  
                 ___fleq 3B68                ??___fladd 0009                   ___wmul 429A  
              ??___fldiv 0030                ??___awdiv 0005                ??___flneg 0005  
              ??___awmod 0005                ??___flmul 0017                ??___flsub 0030  
              ??___fltol 0005                   _efgtoa 1054                   _floorf 2E34  
                 clear_0 424C                   clear_1 4258         ___awdiv@quotient 0007  
        ___awmod@divisor 0003                ??_lcdGoTo 0008                   isa$std 000001  
              ??_lcdInit 0008          ___awmod@counter 0005                   pad@buf 0013  
                 _strcpy 3FB4                   _strlen 4264       lcdGoToLC@L_Adresse 000B  
                 fputc@c 0001                   fputs@c 000E                   fputs@i 000F  
                 fputs@s 000A                ??_isdigit 0003   Port_BBSPIInit@port_dir 0004  
        ___fpclassifyf@e 0009          ___fpclassifyf@u 000B          ___fpclassifyf@x 0001  
           __mediumconst 0000                ??_isspace 0003                   tblptrh 000FF7  
              ??_isupper 0003                   tblptrl 000FF6                   tblptru 000FF8  
                 putch@c 0001         __end_of_vfprintf 3E26                ??_sprintf 0060  
              ??_tolower 0009                ??_strncmp 0007               ___flge@ff1 0028  
             ___flge@ff2 002C          ??___fpclassifyf 0005             ___xxtofl@arg 000B  
           ___xxtofl@exp 000A             ___xxtofl@val 0001               ___fleq@ff1 0001  
             ___fleq@ff2 0005               __accesstop 0060  __end_of__initialization 425E  
             ___flneg@f1 0001            ___rparam_used 000001               ___fltol@f1 0001  
         __pcstackCOMRAM 0001             __pidataBANK0 4340        __end_of_InitBBSPI 431A  
          __end_of_fputc 392E             ??_LCDPutChar 0006            __end_of_fputs 4186  
           ??_LCDPutInst 0006            __end_of_putch 4344           _Port_BBSPIInit 42C0  
                ??_fputc 0005                  ??_fputs 000E                  ??_putch 0001  
             __pbssBANK0 00E3               __pbssBANK1 0100       __end_of_LCDPutChar 3EF2  
     __end_of_LCDPutInst 3E8C                  ?___flge 0028                  ?___fleq 0001  
                ?___wmul 0001                  ?_efgtoa 0055                  ?_floorf 0041  
                ?_strcpy 0001                  ?_strlen 0001   __end_of_Port_BBSPIInit 42DA  
          _SendByteBBSPI 3D50                ?___xxtofl 0001         WritePort_BBSPI@a 0004  
      __end_of_lcdGoToLC 4308                  __Hparam 0000                  __Lparam 0000  
                ___fladd 21B0                  ___fldiv 2A9A                  ___awdiv 39F4  
                ___flneg 41BE                  ___awmod 3AB8                  ___flmul 2670  
                ___flsub 40FC                  ___fltol 347A                ?_vfprintf 00A5  
           __psmallconst 1000                  __pcinit 422E                  __ramtop 1000  
                _lcdGoTo 4334                  _lcdInit 3F54                  __ptext0 4328  
                __ptext1 3364                  __ptext2 4012                  __ptext3 3DC0  
                __ptext4 1C5E                  __ptext5 3782                  __ptext6 1054  
                __ptext7 40B6                  __ptext8 4186                  __ptext9 3FB4  
         ?_SendByteBBSPI 0001          ?_Port_BBSPIInit 0001                  _isdigit 41F6  
             ??___xxtofl 0005         ___awmod@dividend 0001                  _isspace 4064  
                _isupper 4186                  efgtoa@c 005B                  efgtoa@d 0077  
                efgtoa@e 008F                  efgtoa@f 0057                  efgtoa@g 008B  
                efgtoa@h 0081                  efgtoa@i 0089                  efgtoa@l 0085  
                efgtoa@m 0071                  efgtoa@n 0091                  efgtoa@p 007B  
                efgtoa@t 006B                  efgtoa@u 0093                  efgtoa@w 007D  
                atoi@neg 000E                  _sprintf 4012                  _tolower 40B6  
              _LCDPutStr 3EF2                  _strncmp 3782     end_of_initialization 425E  
                floorf@e 004F                  floorf@m 004B                  floorf@u 0051  
                floorf@x 0041                  fputc@fp 0003                  fputs@fp 000C  
      __end_of_vfpfcnvrt 21B0               efgtoa@mode 0080               efgtoa@sign 0079  
                postdec2 000FDD         ex3@L_Tension_Can 00DF                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_vfprintf 0060  
                strcpy@d 0009                  strlen@a 0003                  strcpy@s 0007  
                strlen@s 0001                _PORTAbits 000F80                _PORTBbits 000F81  
            ___fladd@grs 0010            ___xxtofl@sign 0009                _TRISAbits 000F92  
              _TRISBbits 000F93                _TRISCbits 000F94                _TRISFbits 000F97  
            ___fldiv@grs 003B              ___fldiv@rem 0034               ?_LCDPutStr 0008  
    SendByteBBSPI@output 0001              ___flmul@grs 001C          ex3@L_strTension 00C4  
         __end_of___flge 3684           __end_of___fleq 3C12              vfpfcnvrt@ap 009B  
            vfpfcnvrt@ct 00A1              vfpfcnvrt@fp 0097           __end_of___wmul 42C0  
         __end_of_efgtoa 1C5E          ??_SendByteBBSPI 0001           __end_of_floorf 3046  
             floorf@F526 00E3                _InitBBSPI 4308           __end_of_strcpy 4012  
         __end_of_strlen 429A        ??_WritePort_BBSPI 0005      start_initialization 422E  
            __end_of_ex2 3CB2              __end_of_ex3 347A              __end_of_pad 39F4  
  __end_of___fpclassifyf 3782              vfprintf@fmt 00A7                 ??___flge 0030  
               ??___fleq 0009                 ??___wmul 0005                 ??_efgtoa 0060  
            __pdataBANK0 00F3            ??_initPortTOR 0001                 ??_floorf 0045  
         _testBtnPressed 3CB2                 ??_strcpy 0005                 ??_strlen 0003  
             ?_InitBBSPI 0001                ___fladd@a 0005                ___fladd@b 0001  
              ___fldiv@a 002C                ___fldiv@b 0028                ___flmul@a 0013  
              ___flmul@b 000F                ___flsub@a 002C                ___flsub@b 0028  
          __pcstackBANK0 0060              ??_LCDPutStr 000A              _efgtoa$1443 0067  
            _efgtoa$1435 0065              _efgtoa$1444 0069                _lcdGoToLC 42F4  
               ?___fladd 0001                 ?___fldiv 0028                 ?___awdiv 0001  
               ?___flneg 0001                 ?___awmod 0001                 ?___flmul 000F  
               ?___flsub 0028                 ?___fltol 0001   __end_of_testBtnPressed 3D50  
       ??_Port_BBSPIInit 0004                 ?_lcdGoTo 0001                 ?_lcdInit 0001  
            __smallconst 1000                 ?_isdigit 0001      __end_of_initPortTOR 4328  
               ?_isspace 0001                 ?_isupper 0001                 ?_sprintf 00AD  
               ?_tolower 0007                 ?_strncmp 0001           ___wmul@product 0005  
               _LATAbits 000F89                 _LATCbits 000F8B                 _LATFbits 000F8E  
               _PIE1bits 000F9D                 _PIR1bits 000F9E               ?_lcdGoToLC 0009  
        ?_testBtnPressed 0001                _vfpfcnvrt 1C5E               _ADCON0bits 000FC2  
      ___wmul@multiplier 0001              ??_InitBBSPI 0001       SendByteBBSPI@input 0003  
           _isspace$1522 0007               vfpfcnvrt@c 00A4               vfpfcnvrt@f 009D  
               __Hrparam 0000               vfprintf@ap 00A9                 __Lrparam 0000  
             vfprintf@fp 00A5             lcdGoTo@P_Pos 0008          _WritePort_BBSPI 42DA  
       lcdGoToLC@P_Ligne 000A               ?_vfpfcnvrt 0097              _initPortTOR 431A  
               ex2@L_ret 000E       ___fpclassifyf@F465 00E7               sprintf@fmt 00AF  
               ___xxtofl 3046                 __ptext10 392E                 __ptext11 4264  
               __ptext20 41BE                 __ptext12 4142                 __ptext21 2670  
               __ptext13 3864                 __ptext30 429A                 __ptext22 3580  
               __ptext14 4342                 __ptext31 3046                 __ptext23 3B68  
               __ptext15 2E34                 __ptext40 431A                 __ptext32 3C12  
               __ptext24 2A9A                 __ptext16 3684                 __ptext41 3EF2  
               __ptext33 3CB2                 __ptext25 3AB8                 __ptext17 347A  
               __ptext42 3E8C                 __ptext34 3F54                 __ptext26 39F4  
               __ptext18 40FC                 __ptext43 42DA                 __ptext35 42C0  
               __ptext27 31FA                 __ptext19 21B0                 __ptext44 3D50  
               __ptext36 4308                 __ptext28 4064                 __ptext37 42F4  
               __ptext29 41F6                 __ptext38 4334                 __ptext39 3E26  
             strcpy@dest 0001              ??_lcdGoToLC 000A                 efgtoa@fp 0055  
               efgtoa@ne 006F                 efgtoa@pp 006D                 efgtoa@ou 0073  
               isa$xinst 000000                 _vfprintf 3DC0               _LCDPutChar 3E8C  
             _LCDPutInst 3E26    __end_of_SendByteBBSPI 3DC0               _INTCONbits 000FF2  
               isdigit@c 0001                sprintf@ap 00B5                 isspace@c 0001  
__end_of_WritePort_BBSPI 42F4                strcpy@src 0003                 isupper@c 0001  
              strncmp@_l 0001                strncmp@_r 0003              efgtoa@nmode 007F  
            ??_vfpfcnvrt 005C                 sprintf@f 00B7                 tolower@c 0007  
               sprintf@s 00AD  WritePort_BBSPI@port_add 0005                 strncmp@l 0008  
               strncmp@n 0005                 strncmp@r 000A            ___fladd@signs 000D  
           ___fladd@aexp 000E             ___fladd@bexp 000F         ??_testBtnPressed 0003  
